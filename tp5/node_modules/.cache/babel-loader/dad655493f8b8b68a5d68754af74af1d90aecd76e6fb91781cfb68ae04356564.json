{"ast":null,"code":"import _regeneratorRuntime from \"/workspaces/Mini_Projects_Js/tp5/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/workspaces/Mini_Projects_Js/tp5/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.error.to-string.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nexport function getPost(_x) {\n  return _getPost.apply(this, arguments);\n}\nfunction _getPost() {\n  _getPost = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(id) {\n    var response, data;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          if (!(!id || typeof id !== 'string' && typeof id !== 'number')) {\n            _context.next = 2;\n            break;\n          }\n          throw new Error('ID invalide. L\\'ID doit être une chaîne de caractères ou un nombre.');\n        case 2:\n          _context.prev = 2;\n          _context.next = 5;\n          return fetch(\"http://localhost:3000/posts/\".concat(id));\n        case 5:\n          response = _context.sent;\n          if (response.ok) {\n            _context.next = 8;\n            break;\n          }\n          throw new Error(\"Erreur HTTP: \".concat(response.status, \" \").concat(response.statusText));\n        case 8:\n          _context.next = 10;\n          return response.json();\n        case 10:\n          data = _context.sent;\n          return _context.abrupt(\"return\", data);\n        case 14:\n          _context.prev = 14;\n          _context.t0 = _context[\"catch\"](2);\n          console.error('Erreur lors de la récupération du post:', _context.t0);\n          throw _context.t0;\n        case 18:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee, null, [[2, 14]]);\n  }));\n  return _getPost.apply(this, arguments);\n}","map":{"version":3,"names":["getPost","_x","_getPost","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","id","response","data","wrap","_callee$","_context","prev","next","Error","fetch","concat","sent","ok","status","statusText","json","abrupt","t0","console","error","stop"],"sources":["/workspaces/Mini_Projects_Js/tp5/src/composables/getPost.js"],"sourcesContent":["export async function getPost(id) {\n  // Validation de l'ID\n  if (!id || typeof id !== 'string' && typeof id !== 'number') {\n    throw new Error('ID invalide. L\\'ID doit être une chaîne de caractères ou un nombre.');\n  }\n\n  try {\n    const response = await fetch(`http://localhost:3000/posts/${id}`);\n\n    // Vérifier si la réponse est valide\n    if (!response.ok) {\n      throw new Error(`Erreur HTTP: ${response.status} ${response.statusText}`);\n    }\n\n    const data = await response.json();\n    return data;\n  } catch (err) {\n    console.error('Erreur lors de la récupération du post:', err);\n    throw err; // Propager l'erreur pour que le code appelant puisse la gérer\n  }\n}"],"mappings":";;;;;;AAAA,gBAAsBA,OAAOA,CAAAC,EAAA;EAAA,OAAAC,QAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAoB5B,SAAAF,SAAA;EAAAA,QAAA,GAAAG,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,CApBM,SAAAC,QAAuBC,EAAE;IAAA,IAAAC,QAAA,EAAAC,IAAA;IAAA,OAAAL,mBAAA,GAAAM,IAAA,UAAAC,SAAAC,QAAA;MAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;QAAA;UAAA,MAE1B,CAACP,EAAE,IAAI,OAAOA,EAAE,KAAK,QAAQ,IAAI,OAAOA,EAAE,KAAK,QAAQ;YAAAK,QAAA,CAAAE,IAAA;YAAA;UAAA;UAAA,MACnD,IAAIC,KAAK,CAAC,qEAAqE,CAAC;QAAA;UAAAH,QAAA,CAAAC,IAAA;UAAAD,QAAA,CAAAE,IAAA;UAAA,OAI/DE,KAAK,gCAAAC,MAAA,CAAgCV,EAAE,CAAE,CAAC;QAAA;UAA3DC,QAAQ,GAAAI,QAAA,CAAAM,IAAA;UAAA,IAGTV,QAAQ,CAACW,EAAE;YAAAP,QAAA,CAAAE,IAAA;YAAA;UAAA;UAAA,MACR,IAAIC,KAAK,iBAAAE,MAAA,CAAiBT,QAAQ,CAACY,MAAM,OAAAH,MAAA,CAAIT,QAAQ,CAACa,UAAU,CAAE,CAAC;QAAA;UAAAT,QAAA,CAAAE,IAAA;UAAA,OAGxDN,QAAQ,CAACc,IAAI,CAAC,CAAC;QAAA;UAA5Bb,IAAI,GAAAG,QAAA,CAAAM,IAAA;UAAA,OAAAN,QAAA,CAAAW,MAAA,WACHd,IAAI;QAAA;UAAAG,QAAA,CAAAC,IAAA;UAAAD,QAAA,CAAAY,EAAA,GAAAZ,QAAA;UAEXa,OAAO,CAACC,KAAK,CAAC,yCAAyC,EAAAd,QAAA,CAAAY,EAAK,CAAC;UAAC,MAAAZ,QAAA,CAAAY,EAAA;QAAA;QAAA;UAAA,OAAAZ,QAAA,CAAAe,IAAA;MAAA;IAAA,GAAArB,OAAA;EAAA,CAGjE;EAAA,OAAAN,QAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}