{"ast":null,"code":"import _regeneratorRuntime from \"/workspaces/Mini_Projects_Js/tp5/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/workspaces/Mini_Projects_Js/tp5/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.error.to-string.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.is-array.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nexport function getPosts() {\n  return _getPosts.apply(this, arguments);\n}\nfunction _getPosts() {\n  _getPosts = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n    var response, data;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return fetch('http://localhost:3000/posts');\n        case 3:\n          response = _context.sent;\n          if (response.ok) {\n            _context.next = 6;\n            break;\n          }\n          throw new Error(\"Erreur HTTP: \".concat(response.status, \" \").concat(response.statusText));\n        case 6:\n          _context.next = 8;\n          return response.json();\n        case 8:\n          data = _context.sent;\n          if (Array.isArray(data)) {\n            _context.next = 11;\n            break;\n          }\n          throw new Error('La réponse de l\\'API n\\'est pas un tableau.');\n        case 11:\n          return _context.abrupt(\"return\", data);\n        case 14:\n          _context.prev = 14;\n          _context.t0 = _context[\"catch\"](0);\n          console.error('Erreur lors de la récupération des posts:', _context.t0);\n          throw _context.t0;\n        case 18:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee, null, [[0, 14]]);\n  }));\n  return _getPosts.apply(this, arguments);\n}","map":{"version":3,"names":["getPosts","_getPosts","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","data","wrap","_callee$","_context","prev","next","fetch","sent","ok","Error","concat","status","statusText","json","Array","isArray","abrupt","t0","console","error","stop"],"sources":["/workspaces/Mini_Projects_Js/tp5/src/composables/getPosts.js"],"sourcesContent":["export async function getPosts() {\n  try {\n    const response = await fetch('http://localhost:3000/posts');\n\n    // Vérifier si la réponse est valide\n    if (!response.ok) {\n      throw new Error(`Erreur HTTP: ${response.status} ${response.statusText}`);\n    }\n\n    const data = await response.json();\n\n    // Valider que la réponse est bien un tableau\n    if (!Array.isArray(data)) {\n      throw new Error('La réponse de l\\'API n\\'est pas un tableau.');\n    }\n\n    return data;\n  } catch (err) {\n    console.error('Erreur lors de la récupération des posts:', err);\n    throw err; // Propager l'erreur pour que le code appelant puisse la gérer\n  }\n}"],"mappings":";;;;;;;AAAA,gBAAsBA,QAAQA,CAAA;EAAA,OAAAC,SAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAqB7B,SAAAF,UAAA;EAAAA,SAAA,GAAAG,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,CArBM,SAAAC,QAAA;IAAA,IAAAC,QAAA,EAAAC,IAAA;IAAA,OAAAJ,mBAAA,GAAAK,IAAA,UAAAC,SAAAC,QAAA;MAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;QAAA;UAAAF,QAAA,CAAAC,IAAA;UAAAD,QAAA,CAAAE,IAAA;UAAA,OAEoBC,KAAK,CAAC,6BAA6B,CAAC;QAAA;UAArDP,QAAQ,GAAAI,QAAA,CAAAI,IAAA;UAAA,IAGTR,QAAQ,CAACS,EAAE;YAAAL,QAAA,CAAAE,IAAA;YAAA;UAAA;UAAA,MACR,IAAII,KAAK,iBAAAC,MAAA,CAAiBX,QAAQ,CAACY,MAAM,OAAAD,MAAA,CAAIX,QAAQ,CAACa,UAAU,CAAE,CAAC;QAAA;UAAAT,QAAA,CAAAE,IAAA;UAAA,OAGxDN,QAAQ,CAACc,IAAI,CAAC,CAAC;QAAA;UAA5Bb,IAAI,GAAAG,QAAA,CAAAI,IAAA;UAAA,IAGLO,KAAK,CAACC,OAAO,CAACf,IAAI,CAAC;YAAAG,QAAA,CAAAE,IAAA;YAAA;UAAA;UAAA,MAChB,IAAII,KAAK,CAAC,6CAA6C,CAAC;QAAA;UAAA,OAAAN,QAAA,CAAAa,MAAA,WAGzDhB,IAAI;QAAA;UAAAG,QAAA,CAAAC,IAAA;UAAAD,QAAA,CAAAc,EAAA,GAAAd,QAAA;UAEXe,OAAO,CAACC,KAAK,CAAC,2CAA2C,EAAAhB,QAAA,CAAAc,EAAK,CAAC;UAAC,MAAAd,QAAA,CAAAc,EAAA;QAAA;QAAA;UAAA,OAAAd,QAAA,CAAAiB,IAAA;MAAA;IAAA,GAAAtB,OAAA;EAAA,CAGnE;EAAA,OAAAN,SAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}