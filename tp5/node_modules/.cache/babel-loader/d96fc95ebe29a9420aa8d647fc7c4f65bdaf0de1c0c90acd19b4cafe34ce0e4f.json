{"ast":null,"code":"import _regeneratorRuntime from \"/workspaces/Mini_Projects_Js/tp5/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/workspaces/Mini_Projects_Js/tp5/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { ref, onMounted } from 'vue';\nimport { useRoute } from 'vue-router';\nimport { getPost } from '../composables/getPost';\nimport TagCloud from '../components/TagCloud.vue';\nexport default {\n  name: 'PostDetailView',\n  components: {\n    TagCloud: TagCloud\n  },\n  setup: function setup() {\n    var route = useRoute();\n    var post = ref(null);\n    onMounted(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      var id;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            id = route.params.id;\n            _context.next = 3;\n            return getPost(id);\n          case 3:\n            post.value = _context.sent;\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    })));\n    return {\n      post: post\n    };\n  }\n};","map":{"version":3,"names":["ref","onMounted","useRoute","getPost","TagCloud","name","components","setup","route","post","_asyncToGenerator","_regeneratorRuntime","mark","_callee","id","wrap","_callee$","_context","prev","next","params","value","sent","stop"],"sources":["/workspaces/Mini_Projects_Js/tp5/src/views/PostDetailView.vue"],"sourcesContent":["<template>\n  <div v-if=\"post\">\n    <h1>{{ post.title }}</h1>\n    <p>{{ post.body }}</p>\n    <TagCloud :tags=\"post.tags\" />\n  </div>\n</template>\n\n<script>\nimport { ref, onMounted } from 'vue';\nimport { useRoute } from 'vue-router';\nimport { getPost } from '../composables/getPost';\nimport TagCloud from '../components/TagCloud.vue';\n\nexport default {\n  name: 'PostDetailView',\n  components: { TagCloud },\n  setup() {\n    const route = useRoute();\n    const post = ref(null);\n\n    onMounted(async () => {\n      const id = route.params.id;\n      post.value = await getPost(id);\n    });\n\n    return { post };\n  }\n};\n</script>"],"mappings":";;AASA,SAASA,GAAG,EAAEC,SAAQ,QAAS,KAAK;AACpC,SAASC,QAAO,QAAS,YAAY;AACrC,SAASC,OAAM,QAAS,wBAAwB;AAChD,OAAOC,QAAO,MAAO,4BAA4B;AAEjD,eAAe;EACbC,IAAI,EAAE,gBAAgB;EACtBC,UAAU,EAAE;IAAEF,QAAO,EAAPA;EAAS,CAAC;EACxBG,KAAK,WAALA,KAAKA,CAAA,EAAG;IACN,IAAMC,KAAI,GAAIN,QAAQ,CAAC,CAAC;IACxB,IAAMO,IAAG,GAAIT,GAAG,CAAC,IAAI,CAAC;IAEtBC,SAAS,cAAAS,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,CAAC,SAAAC,QAAA;MAAA,IAAAC,EAAA;MAAA,OAAAH,mBAAA,GAAAI,IAAA,UAAAC,SAAAC,QAAA;QAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;UAAA;YACFL,EAAC,GAAIN,KAAK,CAACY,MAAM,CAACN,EAAE;YAAAG,QAAA,CAAAE,IAAA;YAAA,OACPhB,OAAO,CAACW,EAAE,CAAC;UAAA;YAA9BL,IAAI,CAACY,KAAI,GAAAJ,QAAA,CAAAK,IAAA;UAAA;UAAA;YAAA,OAAAL,QAAA,CAAAM,IAAA;QAAA;MAAA,GAAAV,OAAA;IAAA,CACV,GAAC;IAEF,OAAO;MAAEJ,IAAG,EAAHA;IAAK,CAAC;EACjB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}