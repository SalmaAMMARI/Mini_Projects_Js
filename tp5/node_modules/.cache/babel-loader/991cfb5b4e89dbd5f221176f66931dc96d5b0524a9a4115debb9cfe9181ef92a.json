{"ast":null,"code":"import _regeneratorRuntime from \"/workspaces/Mini_Projects_Js/tp5/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/workspaces/Mini_Projects_Js/tp5/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.error.to-string.js\";\nimport \"core-js/modules/es.date.to-json.js\";\nimport \"core-js/modules/es.json.stringify.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nexport function addPost(_x) {\n  return _addPost.apply(this, arguments);\n}\nfunction _addPost() {\n  _addPost = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(post) {\n    var response;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return fetch('http://localhost:3000/posts', {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(post)\n          });\n        case 3:\n          response = _context.sent;\n          if (response.ok) {\n            _context.next = 6;\n            break;\n          }\n          throw new Error('Failed to add post');\n        case 6:\n          _context.next = 11;\n          break;\n        case 8:\n          _context.prev = 8;\n          _context.t0 = _context[\"catch\"](0);\n          console.error(_context.t0);\n        case 11:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee, null, [[0, 8]]);\n  }));\n  return _addPost.apply(this, arguments);\n}","map":{"version":3,"names":["addPost","_x","_addPost","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","post","response","wrap","_callee$","_context","prev","next","fetch","method","headers","body","JSON","stringify","sent","ok","Error","t0","console","error","stop"],"sources":["/workspaces/Mini_Projects_Js/tp5/src/composables/addPost.js"],"sourcesContent":["export async function addPost(post) {\n  try {\n    const response = await fetch('http://localhost:3000/posts', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(post)\n    });\n    if (!response.ok) {\n      throw new Error('Failed to add post');\n    }\n  } catch (err) {\n    console.error(err);\n  }\n}"],"mappings":";;;;;;;AAAA,gBAAsBA,OAAOA,CAAAC,EAAA;EAAA,OAAAC,QAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAa5B,SAAAF,SAAA;EAAAA,QAAA,GAAAG,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,CAbM,SAAAC,QAAuBC,IAAI;IAAA,IAAAC,QAAA;IAAA,OAAAJ,mBAAA,GAAAK,IAAA,UAAAC,SAAAC,QAAA;MAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;QAAA;UAAAF,QAAA,CAAAC,IAAA;UAAAD,QAAA,CAAAE,IAAA;UAAA,OAEPC,KAAK,CAAC,6BAA6B,EAAE;YAC1DC,MAAM,EAAE,MAAM;YACdC,OAAO,EAAE;cAAE,cAAc,EAAE;YAAmB,CAAC;YAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACZ,IAAI;UAC3B,CAAC,CAAC;QAAA;UAJIC,QAAQ,GAAAG,QAAA,CAAAS,IAAA;UAAA,IAKTZ,QAAQ,CAACa,EAAE;YAAAV,QAAA,CAAAE,IAAA;YAAA;UAAA;UAAA,MACR,IAAIS,KAAK,CAAC,oBAAoB,CAAC;QAAA;UAAAX,QAAA,CAAAE,IAAA;UAAA;QAAA;UAAAF,QAAA,CAAAC,IAAA;UAAAD,QAAA,CAAAY,EAAA,GAAAZ,QAAA;UAGvCa,OAAO,CAACC,KAAK,CAAAd,QAAA,CAAAY,EAAI,CAAC;QAAC;QAAA;UAAA,OAAAZ,QAAA,CAAAe,IAAA;MAAA;IAAA,GAAApB,OAAA;EAAA,CAEtB;EAAA,OAAAN,QAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}