{"ast":null,"code":"import _objectSpread from \"/workspaces/Mini_Projects_Js/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.array.find.js\";\nimport \"core-js/modules/es.array.find-index.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.splice.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.find.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.parse-int.js\";\nimport Data from \"@/db.json\";\nexport default {\n  name: \"EditJob\",\n  data: function data() {\n    return {\n      newPost: {\n        titre: '',\n        description: '',\n        salaire: '$',\n        creation: '',\n        id: 0,\n        tags: []\n      },\n      json_post: []\n    };\n  },\n  mounted: function mounted() {\n    this.json_post = Data;\n    var postId = parseInt(this.$route.params.id);\n    var post = this.json_post.find(function (post) {\n      return post.id === postId;\n    });\n    if (post) {\n      this.newPost = _objectSpread({}, post);\n    }\n  },\n  methods: {\n    updatePost: function updatePost() {\n      var _this = this;\n      var index = this.json_post.findIndex(function (post) {\n        return post.id === _this.newPost.id;\n      });\n      if (index !== -1) {\n        this.json_post.splice(index, 1, this.newPost);\n        this.$router.push(\"/\");\n      }\n    }\n  }\n};","map":{"version":3,"names":["Data","name","data","newPost","titre","description","salaire","creation","id","tags","json_post","mounted","postId","parseInt","$route","params","post","find","_objectSpread","methods","updatePost","_this","index","findIndex","splice","$router","push"],"sources":["/workspaces/Mini_Projects_Js/TP5_Jobs_App/src/views/EditJob.vue"],"sourcesContent":["<template>\r\n  <div class=\"form-container\">\r\n    <input type=\"text\" id=\"nom\" placeholder=\"title\" v-model=\"newPost.titre\" class=\"input-field\"><br>\r\n    <textarea placeholder=\"article\" v-model=\"newPost.description\" class=\"textarea-field\"></textarea><br>\r\n    <input type=\"text\" placeholder=\"entrer un salaire\" v-model=\"newPost.salaire\" class=\"input-field\"><br>\r\n    <input type=\"text\" placeholder=\"entre une date de crÃ©ation\" v-model=\"newPost.creation\" class=\"input-field\"><br>\r\n    <button type=\"submit\" @click=\"updatePost\" class=\"button\">Enregistrer</button><br>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Data from \"@/db.json\";\r\n\r\nexport default {\r\n  name: \"EditJob\",\r\n  data() {\r\n    return {\r\n      newPost: {\r\n        titre: '',\r\n        description: '',\r\n        salaire: '$',\r\n        creation: '',\r\n        id: 0,\r\n        tags: []\r\n      },\r\n      json_post: []\r\n    };\r\n  },\r\n  mounted() {\r\n    this.json_post = Data;\r\n    const postId = parseInt(this.$route.params.id);\r\n    const post = this.json_post.find(post => post.id === postId);\r\n    if (post) {\r\n      this.newPost = { ...post };\r\n    }\r\n  },\r\n  methods: {\r\n    updatePost() {\r\n      const index = this.json_post.findIndex(post => post.id === this.newPost.id);\r\n      if (index !== -1) {\r\n        this.json_post.splice(index, 1, this.newPost);\r\n        this.$router.push(\"/\");\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.form-container {\r\n  max-width: 600px;\r\n  margin: 0 auto;\r\n  padding: 20px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 10px;\r\n  background-color: #f9f9f9;\r\n}\r\n\r\n.input-field, .textarea-field {\r\n  width: 100%;\r\n  padding: 10px;\r\n  margin: 10px 0;\r\n  border: 1px solid #ccc;\r\n  border-radius: 5px;\r\n}\r\n\r\n.textarea-field {\r\n  height: 100px;\r\n}\r\n\r\n.button {\r\n  padding: 10px 20px;\r\n  margin: 10px 0;\r\n  border: none;\r\n  border-radius: 5px;\r\n  background-color: #007BFF;\r\n  color: white;\r\n  cursor: pointer;\r\n}\r\n\r\n.button:hover {\r\n  background-color: #0056b3;\r\n}\r\n</style>"],"mappings":";;;;;;;;;AAWA,OAAOA,IAAG,MAAO,WAAW;AAE5B,eAAe;EACbC,IAAI,EAAE,SAAS;EACfC,IAAI,WAAJA,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,OAAO,EAAE;QACPC,KAAK,EAAE,EAAE;QACTC,WAAW,EAAE,EAAE;QACfC,OAAO,EAAE,GAAG;QACZC,QAAQ,EAAE,EAAE;QACZC,EAAE,EAAE,CAAC;QACLC,IAAI,EAAE;MACR,CAAC;MACDC,SAAS,EAAE;IACb,CAAC;EACH,CAAC;EACDC,OAAO,WAAPA,OAAOA,CAAA,EAAG;IACR,IAAI,CAACD,SAAQ,GAAIV,IAAI;IACrB,IAAMY,MAAK,GAAIC,QAAQ,CAAC,IAAI,CAACC,MAAM,CAACC,MAAM,CAACP,EAAE,CAAC;IAC9C,IAAMQ,IAAG,GAAI,IAAI,CAACN,SAAS,CAACO,IAAI,CAAC,UAAAD,IAAG;MAAA,OAAKA,IAAI,CAACR,EAAC,KAAMI,MAAM;IAAA,EAAC;IAC5D,IAAII,IAAI,EAAE;MACR,IAAI,CAACb,OAAM,GAAAe,aAAA,KAASF,IAAG,CAAG;IAC5B;EACF,CAAC;EACDG,OAAO,EAAE;IACPC,UAAU,WAAVA,UAAUA,CAAA,EAAG;MAAA,IAAAC,KAAA;MACX,IAAMC,KAAI,GAAI,IAAI,CAACZ,SAAS,CAACa,SAAS,CAAC,UAAAP,IAAG;QAAA,OAAKA,IAAI,CAACR,EAAC,KAAMa,KAAI,CAAClB,OAAO,CAACK,EAAE;MAAA,EAAC;MAC3E,IAAIc,KAAI,KAAM,CAAC,CAAC,EAAE;QAChB,IAAI,CAACZ,SAAS,CAACc,MAAM,CAACF,KAAK,EAAE,CAAC,EAAE,IAAI,CAACnB,OAAO,CAAC;QAC7C,IAAI,CAACsB,OAAO,CAACC,IAAI,CAAC,GAAG,CAAC;MACxB;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}