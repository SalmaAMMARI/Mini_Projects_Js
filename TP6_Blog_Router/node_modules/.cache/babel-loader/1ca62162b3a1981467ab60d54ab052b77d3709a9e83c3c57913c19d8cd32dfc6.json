{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, vModelText as _vModelText, withDirectives as _withDirectives, withModifiers as _withModifiers, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nvar _hoisted_1 = {\n  \"class\": \"create-post\"\n};\nvar _hoisted_2 = {\n  \"class\": \"form-group\"\n};\nvar _hoisted_3 = {\n  \"class\": \"form-group\"\n};\nvar _hoisted_4 = {\n  \"class\": \"form-group\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[8] || (_cache[8] = _createElementVNode(\"h1\", null, \"Créer un poste\", -1 /* HOISTED */)), _createElementVNode(\"form\", {\n    onSubmit: _cache[3] || (_cache[3] = _withModifiers(function () {\n      return $setup.submitPost && $setup.submitPost.apply($setup, arguments);\n    }, [\"prevent\"]))\n  }, [_createCommentVNode(\" Champ pour le titre \"), _createElementVNode(\"div\", _hoisted_2, [_cache[4] || (_cache[4] = _createElementVNode(\"label\", {\n    \"for\": \"title\"\n  }, \"Titre\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"title\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = function ($event) {\n      return $setup.title = $event;\n    }),\n    placeholder: \"Entrez le titre\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.title]])]), _createElementVNode(\"div\", _hoisted_3, [_cache[5] || (_cache[5] = _createElementVNode(\"label\", {\n    \"for\": \"body\"\n  }, \"Contenu\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"textarea\", {\n    id: \"body\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = function ($event) {\n      return $setup.body = $event;\n    }),\n    placeholder: \"Entrez le contenu\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.body]])]), _createElementVNode(\"div\", _hoisted_4, [_cache[6] || (_cache[6] = _createElementVNode(\"label\", {\n    \"for\": \"tags\"\n  }, \"Tags\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"tags\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = function ($event) {\n      return $setup.tags = $event;\n    }),\n    placeholder: \"Entrez les tags (séparés par des virgules)\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.tags]])]), _createCommentVNode(\" Bouton de soumission \"), _cache[7] || (_cache[7] = _createElementVNode(\"button\", {\n    type: \"submit\"\n  }, \"Créer le post\", -1 /* HOISTED */))], 32 /* NEED_HYDRATION */)]);\n}","map":{"version":3,"names":["_createElementBlock","_hoisted_1","_createElementVNode","onSubmit","_cache","_withModifiers","$setup","submitPost","apply","arguments","_createCommentVNode","_hoisted_2","type","id","$event","title","placeholder","required","_hoisted_3","body","_hoisted_4","tags"],"sources":["/workspaces/Mini_Projects_Js/tp5/src/views/CreatePostView.vue"],"sourcesContent":["<template>\n<div class=\"create-post\">\n<h1>Créer un poste</h1>\n   <form @submit.prevent=\"submitPost\">\n      <!-- Champ pour le titre -->\n      <div class=\"form-group\">\n        <label for=\"title\">Titre</label>\n        <input\n          type=\"text\"\n          id=\"title\"\n          v-model=\"title\"\n          placeholder=\"Entrez le titre\"\n          required\n        />\n      </div>\n\n      <div class=\"form-group\">\n        <label for=\"body\">Contenu</label>\n        <textarea\n          id=\"body\"\n          v-model=\"body\"\n          placeholder=\"Entrez le contenu\"\n          required\n        ></textarea>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"tags\">Tags</label>\n        <input\n          type=\"text\"\n          id=\"tags\"\n          v-model=\"tags\"\n          placeholder=\"Entrez les tags (séparés par des virgules)\"\n          required\n        />\n      </div>\n\n      <!-- Bouton de soumission -->\n      <button type=\"submit\">Créer le post</button>\n      </form>\n</div>\n</template>\n\n<script>\nimport { ref } from 'vue';\nimport { useRouter } from 'vue-router';\nimport { addPost } from '../composables/addPost'; // Importer la fonction pour ajouter un post\n\nexport default {\n  name: 'CreatePostView',\n  setup() {\n    const title = ref(''); // Titre du post\n    const body = ref(''); // Contenu du post\n    const tags = ref(''); // Tags du post\n    const error = ref(''); // Message d'erreur\n    const success = ref(''); // Message de succès\n    const router = useRouter(); // Utiliser le routeur pour la redirection\n\n    // Fonction pour soumettre le formulaire\n    const submitPost = async () => {\n      error.value = ''; // Réinitialiser le message d'erreur\n      success.value = ''; // Réinitialiser le message de succès\n\n      // Valider les champs\n      if (!title.value || !body.value || !tags.value) {\n        error.value = 'Veuillez remplir tous les champs.';\n        return;\n      }\n\n      try {\n        // Préparer les données du post\n        const post = {\n          title: title.value,\n          body: body.value,\n          tags: tags.value.split(',').map(tag => tag.trim()), // Convertir les tags en tableau\n        };\n\n        // Ajouter le post via l'API\n        await addPost(post);\n\n        // Afficher un message de succès\n        success.value = 'Post créé avec succès !';\n\n        // Réinitialiser le formulaire\n        title.value = '';\n        body.value = '';\n        tags.value = '';\n\n        // Rediriger vers la page d'accueil après 2 secondes\n        setTimeout(() => {\n          router.push('/');\n        }, 2000);\n      } catch (err) {\n        console.error('Erreur lors de la création du post:', err);\n        error.value = 'Une erreur est survenue lors de la création du post.';\n      }\n    };\n\n    return { title, body, tags, error, success, submitPost };\n  }\n};\n</script>\n"],"mappings":";;EACK,SAAM;AAAa;;EAIb,SAAM;AAAY;;EAWlB,SAAM;AAAY;;EASlB,SAAM;AAAY;;uBAxB7BA,mBAAA,CAsCM,OAtCNC,UAsCM,G,0BArCNC,mBAAA,CAAuB,YAAnB,gBAAc,sBACfA,mBAAA,CAmCU;IAnCHC,QAAM,EAAAC,MAAA,QAAAA,MAAA,MAHhBC,cAAA;MAAA,OAG0BC,MAAA,CAAAC,UAAA,IAAAD,MAAA,CAAAC,UAAA,CAAAC,KAAA,CAAAF,MAAA,EAAAG,SAAA,CAAU;IAAA;MAC9BC,mBAAA,yBAA4B,EAC5BR,mBAAA,CASM,OATNS,UASM,G,0BARJT,mBAAA,CAAgC;IAAzB,OAAI;EAAO,GAAC,OAAK,sB,gBACxBA,mBAAA,CAME;IALAU,IAAI,EAAC,MAAM;IACXC,EAAE,EAAC,OAAO;IATpB,uBAAAT,MAAA,QAAAA,MAAA,gBAAAU,MAAA;MAAA,OAUmBR,MAAA,CAAAS,KAAK,GAAAD,MAAA;IAAA;IACdE,WAAW,EAAC,iBAAiB;IAC7BC,QAAQ,EAAR;iDAFSX,MAAA,CAAAS,KAAK,E,KAMlBb,mBAAA,CAQM,OARNgB,UAQM,G,0BAPJhB,mBAAA,CAAiC;IAA1B,OAAI;EAAM,GAAC,SAAO,sB,gBACzBA,mBAAA,CAKY;IAJVW,EAAE,EAAC,MAAM;IAnBnB,uBAAAT,MAAA,QAAAA,MAAA,gBAAAU,MAAA;MAAA,OAoBmBR,MAAA,CAAAa,IAAI,GAAAL,MAAA;IAAA;IACbE,WAAW,EAAC,mBAAmB;IAC/BC,QAAQ,EAAR;iDAFSX,MAAA,CAAAa,IAAI,E,KAKjBjB,mBAAA,CASM,OATNkB,UASM,G,0BARJlB,mBAAA,CAA8B;IAAvB,OAAI;EAAM,GAAC,MAAI,sB,gBACtBA,mBAAA,CAME;IALAU,IAAI,EAAC,MAAM;IACXC,EAAE,EAAC,MAAM;IA7BnB,uBAAAT,MAAA,QAAAA,MAAA,gBAAAU,MAAA;MAAA,OA8BmBR,MAAA,CAAAe,IAAI,GAAAP,MAAA;IAAA;IACbE,WAAW,EAAC,4CAA4C;IACxDC,QAAQ,EAAR;iDAFSX,MAAA,CAAAe,IAAI,E,KAMjBX,mBAAA,0BAA6B,E,0BAC7BR,mBAAA,CAA4C;IAApCU,IAAI,EAAC;EAAQ,GAAC,eAAa,qB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}