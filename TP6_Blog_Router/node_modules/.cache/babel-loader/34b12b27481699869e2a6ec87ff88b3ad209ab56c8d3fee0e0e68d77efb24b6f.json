{"ast":null,"code":"import _regeneratorRuntime from \"/workspaces/Mini_Projects_Js/tp5/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/workspaces/Mini_Projects_Js/tp5/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.error.to-string.js\";\nimport \"core-js/modules/es.date.to-json.js\";\nimport \"core-js/modules/es.json.stringify.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nexport function addPost(_x) {\n  return _addPost.apply(this, arguments);\n}\nfunction _addPost() {\n  _addPost = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(post) {\n    var response, data;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return fetch('http://localhost:3000/posts', {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(post)\n          });\n        case 3:\n          response = _context.sent;\n          if (response.ok) {\n            _context.next = 6;\n            break;\n          }\n          throw new Error(\"HTTP error: \".concat(response.status));\n        case 6:\n          _context.next = 8;\n          return response.json();\n        case 8:\n          data = _context.sent;\n          return _context.abrupt(\"return\", data);\n        case 12:\n          _context.prev = 12;\n          _context.t0 = _context[\"catch\"](0);\n          console.error('Error adding post:', _context.t0);\n          throw _context.t0;\n        case 16:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee, null, [[0, 12]]);\n  }));\n  return _addPost.apply(this, arguments);\n}","map":{"version":3,"names":["addPost","_x","_addPost","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","post","response","data","wrap","_callee$","_context","prev","next","fetch","method","headers","body","JSON","stringify","sent","ok","Error","concat","status","json","abrupt","t0","console","error","stop"],"sources":["/workspaces/Mini_Projects_Js/tp5/src/composables/addPost.js"],"sourcesContent":["export async function addPost(post) {\n  try {\n    const response = await fetch('http://localhost:3000/posts', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(post)\n    });\n\n    if (!response.ok) {\n      throw new Error(`HTTP error: ${response.status}`);\n    }\n\n    const data = await response.json();\n    return data;\n  } catch (err) {\n    console.error('Error adding post:', err);\n    throw err;\n  }\n}"],"mappings":";;;;;;;AAAA,gBAAsBA,OAAOA,CAAAC,EAAA;EAAA,OAAAC,QAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAoB5B,SAAAF,SAAA;EAAAA,QAAA,GAAAG,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,CApBM,SAAAC,QAAuBC,IAAI;IAAA,IAAAC,QAAA,EAAAC,IAAA;IAAA,OAAAL,mBAAA,GAAAM,IAAA,UAAAC,SAAAC,QAAA;MAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;QAAA;UAAAF,QAAA,CAAAC,IAAA;UAAAD,QAAA,CAAAE,IAAA;UAAA,OAEPC,KAAK,CAAC,6BAA6B,EAAE;YAC1DC,MAAM,EAAE,MAAM;YACdC,OAAO,EAAE;cACP,cAAc,EAAE;YAClB,CAAC;YACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACb,IAAI;UAC3B,CAAC,CAAC;QAAA;UANIC,QAAQ,GAAAI,QAAA,CAAAS,IAAA;UAAA,IAQTb,QAAQ,CAACc,EAAE;YAAAV,QAAA,CAAAE,IAAA;YAAA;UAAA;UAAA,MACR,IAAIS,KAAK,gBAAAC,MAAA,CAAgBhB,QAAQ,CAACiB,MAAM,CAAE,CAAC;QAAA;UAAAb,QAAA,CAAAE,IAAA;UAAA,OAGhCN,QAAQ,CAACkB,IAAI,CAAC,CAAC;QAAA;UAA5BjB,IAAI,GAAAG,QAAA,CAAAS,IAAA;UAAA,OAAAT,QAAA,CAAAe,MAAA,WACHlB,IAAI;QAAA;UAAAG,QAAA,CAAAC,IAAA;UAAAD,QAAA,CAAAgB,EAAA,GAAAhB,QAAA;UAEXiB,OAAO,CAACC,KAAK,CAAC,oBAAoB,EAAAlB,QAAA,CAAAgB,EAAK,CAAC;UAAC,MAAAhB,QAAA,CAAAgB,EAAA;QAAA;QAAA;UAAA,OAAAhB,QAAA,CAAAmB,IAAA;MAAA;IAAA,GAAAzB,OAAA;EAAA,CAG5C;EAAA,OAAAN,QAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}