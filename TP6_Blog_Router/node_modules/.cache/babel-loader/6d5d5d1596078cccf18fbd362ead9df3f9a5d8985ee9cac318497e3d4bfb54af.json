{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, withModifiers as _withModifiers, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nvar _hoisted_1 = {\n  key: 0,\n  \"class\": \"error\"\n};\nvar _hoisted_2 = {\n  key: 1,\n  \"class\": \"success\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_cache[8] || (_cache[8] = _createElementVNode(\"h1\", null, \"Create a New Post\", -1 /* HOISTED */)), _createElementVNode(\"form\", {\n    onSubmit: _cache[3] || (_cache[3] = _withModifiers(function () {\n      return $setup.submitPost && $setup.submitPost.apply($setup, arguments);\n    }, [\"prevent\"]))\n  }, [_withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = function ($event) {\n      return $setup.title = $event;\n    }),\n    placeholder: \"Title\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.title]]), _cache[4] || (_cache[4] = _createElementVNode(\"br\", null, null, -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"textarea\", {\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = function ($event) {\n      return $setup.body = $event;\n    }),\n    placeholder: \"Body\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.body]]), _cache[5] || (_cache[5] = _createElementVNode(\"br\", null, null, -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = function ($event) {\n      return $setup.tags = $event;\n    }),\n    placeholder: \"Tags (comma separated)\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.tags]]), _cache[6] || (_cache[6] = _createElementVNode(\"br\", null, null, -1 /* HOISTED */)), _cache[7] || (_cache[7] = _createElementVNode(\"button\", {\n    type: \"submit\"\n  }, \"Submit\", -1 /* HOISTED */))], 32 /* NEED_HYDRATION */), $setup.error ? (_openBlock(), _createElementBlock(\"p\", _hoisted_1, _toDisplayString($setup.error), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), $setup.success ? (_openBlock(), _createElementBlock(\"p\", _hoisted_2, \"Post submitted successfully!\")) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["key","_createElementBlock","_createElementVNode","onSubmit","_cache","_withModifiers","$setup","submitPost","apply","arguments","$event","title","placeholder","required","body","tags","type","error","_hoisted_1","_toDisplayString","_createCommentVNode","success","_hoisted_2"],"sources":["/workspaces/Mini_Projects_Js/tp5/src/views/CreatePostView.vue"],"sourcesContent":["<template>\n  <div>\n    <h1>Create a New Post</h1>\n    <form @submit.prevent=\"submitPost\">\n      <input v-model=\"title\" placeholder=\"Title\" required /><br>\n      <textarea v-model=\"body\" placeholder=\"Body\" required></textarea><br>\n      <input v-model=\"tags\" placeholder=\"Tags (comma separated)\" required /><br>\n      <button type=\"submit\">Submit</button>\n    </form>\n    <p v-if=\"error\" class=\"error\">{{ error }}</p>\n    <p v-if=\"success\" class=\"success\">Post submitted successfully!</p>\n  </div>\n</template>\n\n<script>\nimport { ref } from 'vue';\nimport { useRouter } from 'vue-router';\nimport { addPost } from '../composables/addPost';\n\nexport default {\n  name: 'CreatePostView',\n  setup() {\n    const title = ref('');\n    const body = ref('');\n    const tags = ref('');\n    const error = ref('');\n    const success = ref(false);\n    const router = useRouter();\n\n    const submitPost = async () => {\n      error.value = ''; // Réinitialiser l'erreur\n      success.value = false; // Réinitialiser le message de succès\n\n      // Validation côté client\n      if (!title.value || !body.value || !tags.value) {\n        error.value = 'Please fill in all fields.';\n        return;\n      }\n\n      try {\n        const post = {\n          title: title.value,\n          body: body.value,\n          tags: tags.value.split(',').map(tag => tag.trim())\n        };\n\n        await addPost(post); // Ajouter le post via l'API\n\n        // Réinitialiser le formulaire après la soumission\n        title.value = '';\n        body.value = '';\n        tags.value = '';\n\n        // Afficher un message de succès\n        success.value = true;\n\n        // Rediriger vers la liste des posts après 2 secondes\n        setTimeout(() => {\n          router.push('/');\n        }, 2000);\n      } catch (err) {\n        console.error('Error submitting post:', err);\n        error.value = 'Failed to submit post. Please try again.';\n      }\n    };\n\n    return { title, body, tags, error, success, submitPost };\n  }\n};\n</script>\n\n<style scoped>\n.error {\n  color: red;\n}\n\n.success {\n  color: green;\n}\n</style>"],"mappings":";;EAAAA,GAAA;EASoB,SAAM;;;EAT1BA,GAAA;EAUsB,SAAM;;;uBAT1BC,mBAAA,CAUM,c,0BATJC,mBAAA,CAA0B,YAAtB,mBAAiB,sBACrBA,mBAAA,CAKO;IALAC,QAAM,EAAAC,MAAA,QAAAA,MAAA,MAHjBC,cAAA;MAAA,OAG2BC,MAAA,CAAAC,UAAA,IAAAD,MAAA,CAAAC,UAAA,CAAAC,KAAA,CAAAF,MAAA,EAAAG,SAAA,CAAU;IAAA;sBAC/BP,mBAAA,CAAsD;IAJ5D,uBAAAE,MAAA,QAAAA,MAAA,gBAAAM,MAAA;MAAA,OAIsBJ,MAAA,CAAAK,KAAK,GAAAD,MAAA;IAAA;IAAEE,WAAW,EAAC,OAAO;IAACC,QAAQ,EAAR;iDAA3BP,MAAA,CAAAK,KAAK,E,6BAAiCT,mBAAA,CAAI,sC,gBAC1DA,mBAAA,CAAgE;IALtE,uBAAAE,MAAA,QAAAA,MAAA,gBAAAM,MAAA;MAAA,OAKyBJ,MAAA,CAAAQ,IAAI,GAAAJ,MAAA;IAAA;IAAEE,WAAW,EAAC,MAAM;IAACC,QAAQ,EAAR;iDAAzBP,MAAA,CAAAQ,IAAI,E,6BAAyCZ,mBAAA,CAAI,sC,gBACpEA,mBAAA,CAAsE;IAN5E,uBAAAE,MAAA,QAAAA,MAAA,gBAAAM,MAAA;MAAA,OAMsBJ,MAAA,CAAAS,IAAI,GAAAL,MAAA;IAAA;IAAEE,WAAW,EAAC,wBAAwB;IAACC,QAAQ,EAAR;iDAA3CP,MAAA,CAAAS,IAAI,E,6BAAkDb,mBAAA,CAAI,sC,0BAC1EA,mBAAA,CAAqC;IAA7Bc,IAAI,EAAC;EAAQ,GAAC,QAAM,qB,4BAErBV,MAAA,CAAAW,KAAK,I,cAAdhB,mBAAA,CAA6C,KAA7CiB,UAA6C,EAAAC,gBAAA,CAAZb,MAAA,CAAAW,KAAK,oBAT1CG,mBAAA,gBAUad,MAAA,CAAAe,OAAO,I,cAAhBpB,mBAAA,CAAkE,KAAlEqB,UAAkE,EAAhC,8BAA4B,KAVlEF,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}