{"ast":null,"code":"import _createForOfIteratorHelper from \"/workspaces/Mini_Projects_Js/TP6_Blog_Router/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport data from \"@/db.json\";\nimport TagCloud from \"@/components/TagCloud.vue\";\nexport default {\n  name: \"TagsView\",\n  components: {\n    TagCloud: TagCloud\n  },\n  data: function data() {\n    return {\n      poosts: [],\n      koko: 0\n    };\n  },\n  created: function created() {\n    this.filterPostsByTag(this.$route.params.tag);\n  },\n  watch: {\n    '$route.params.tag': function $routeParamsTag(newTag) {\n      this.filterPostsByTag(newTag);\n    }\n  },\n  methods: {\n    filterPostsByTag: function filterPostsByTag(tag) {\n      var selectedTag = tag.toLowerCase(); // Normalize the tag\n      console.log(\"Selected tag:\", selectedTag); // Debug\n\n      this.poosts = []; // Clear the current posts\n      var _iterator = _createForOfIteratorHelper(data),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var post = _step.value;\n          var normalizedTags = post.tags.map(function (tag) {\n            return tag.toLowerCase();\n          }); // Normalize tags\n          console.log(\"Post tags:\", normalizedTags); // Debug\n\n          if (normalizedTags.includes(selectedTag)) {\n            this.poosts.push(post);\n            console.log(\"Matching post found:\", post); // Debug\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    }\n  }\n};","map":{"version":3,"names":["data","TagCloud","name","components","poosts","koko","created","filterPostsByTag","$route","params","tag","watch","$routeParamsTag","newTag","methods","selectedTag","toLowerCase","console","log","_iterator","_createForOfIteratorHelper","_step","s","n","done","post","value","normalizedTags","tags","map","includes","push","err","e","f"],"sources":["/workspaces/Mini_Projects_Js/TP6_Blog_Router/src/views/TagsView.vue"],"sourcesContent":["<template>\n  <div class=\"tags-view-container\">\n    <div v-if=\"poosts.length > 0\">\n      <div v-for=\"post in poosts\" :key=\"post.id\" class=\"post-item\">\n        <h2>{{ post.titre }}</h2>\n        <p>{{ post.article }}</p>\n        <TagCloud :tagsview=\"post.tags\" />\n      </div>\n    </div>\n    <div v-else class=\"no-posts\">\n      <p>Aucun post trouv√© pour ce tag.</p>\n    </div>\n  </div>\n</template>\n\n<script>\nimport data from \"@/db.json\"\nimport TagCloud from \"@/components/TagCloud.vue\"\n\nexport default {\n  name: \"TagsView\",\n  components: {\n    TagCloud\n  },\n  data() {\n    return {\n      poosts: [],\n      koko: 0\n    }\n  },\n  created() {\n    this.filterPostsByTag(this.$route.params.tag);\n  },\n  watch: {\n    '$route.params.tag': function(newTag) {\n      this.filterPostsByTag(newTag);\n    }\n  },\n  methods: {\n    filterPostsByTag(tag) {\n      const selectedTag = tag.toLowerCase(); // Normalize the tag\n      console.log(\"Selected tag:\", selectedTag); // Debug\n\n      this.poosts = []; // Clear the current posts\n\n      for (let post of data) {\n        const normalizedTags = post.tags.map(tag => tag.toLowerCase()); // Normalize tags\n        console.log(\"Post tags:\", normalizedTags); // Debug\n\n        if (normalizedTags.includes(selectedTag)) {\n          this.poosts.push(post);\n          console.log(\"Matching post found:\", post); // Debug\n        }\n      }\n    }\n  }\n}\n</script>\n\n<style scoped>\n.tags-view-container {\n    max-width: 800px;\n    margin: 0 auto;\n    padding: 20px;\n    background-color: #f9f9f9;\n    border-radius: 10px;\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n}\n\n.post-item {\n    background-color: #fff;\n    padding: 15px;\n    margin: 10px 0;\n    border-radius: 5px;\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n}\n\n.post-item h2 {\n    margin: 0;\n    color: #007BFF;\n}\n\n.post-item p {\n    color: #555;\n    line-height: 1.6;\n}\n\n.no-posts {\n    text-align: center;\n    color: #555;\n    margin-top: 20px;\n}\n</style>"],"mappings":";;;;;;;;AAgBA,OAAOA,IAAG,MAAO,WAAU;AAC3B,OAAOC,QAAO,MAAO,2BAA0B;AAE/C,eAAe;EACbC,IAAI,EAAE,UAAU;EAChBC,UAAU,EAAE;IACVF,QAAO,EAAPA;EACF,CAAC;EACDD,IAAI,WAAJA,IAAIA,CAAA,EAAG;IACL,OAAO;MACLI,MAAM,EAAE,EAAE;MACVC,IAAI,EAAE;IACR;EACF,CAAC;EACDC,OAAO,WAAPA,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,gBAAgB,CAAC,IAAI,CAACC,MAAM,CAACC,MAAM,CAACC,GAAG,CAAC;EAC/C,CAAC;EACDC,KAAK,EAAE;IACL,mBAAmB,EAAE,SAArBC,eAAmBA,CAAWC,MAAM,EAAE;MACpC,IAAI,CAACN,gBAAgB,CAACM,MAAM,CAAC;IAC/B;EACF,CAAC;EACDC,OAAO,EAAE;IACPP,gBAAgB,WAAhBA,gBAAgBA,CAACG,GAAG,EAAE;MACpB,IAAMK,WAAU,GAAIL,GAAG,CAACM,WAAW,CAAC,CAAC,EAAE;MACvCC,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEH,WAAW,CAAC,EAAE;;MAE3C,IAAI,CAACX,MAAK,GAAI,EAAE,EAAE;MAAA,IAAAe,SAAA,GAAAC,0BAAA,CAEDpB,IAAI;QAAAqB,KAAA;MAAA;QAArB,KAAAF,SAAA,CAAAG,CAAA,MAAAD,KAAA,GAAAF,SAAA,CAAAI,CAAA,IAAAC,IAAA,GAAuB;UAAA,IAAdC,IAAG,GAAAJ,KAAA,CAAAK,KAAA;UACV,IAAMC,cAAa,GAAIF,IAAI,CAACG,IAAI,CAACC,GAAG,CAAC,UAAAnB,GAAE;YAAA,OAAKA,GAAG,CAACM,WAAW,CAAC,CAAC;UAAA,EAAC,EAAE;UAChEC,OAAO,CAACC,GAAG,CAAC,YAAY,EAAES,cAAc,CAAC,EAAE;;UAE3C,IAAIA,cAAc,CAACG,QAAQ,CAACf,WAAW,CAAC,EAAE;YACxC,IAAI,CAACX,MAAM,CAAC2B,IAAI,CAACN,IAAI,CAAC;YACtBR,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEO,IAAI,CAAC,EAAE;UAC7C;QACF;MAAA,SAAAO,GAAA;QAAAb,SAAA,CAAAc,CAAA,CAAAD,GAAA;MAAA;QAAAb,SAAA,CAAAe,CAAA;MAAA;IACF;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}