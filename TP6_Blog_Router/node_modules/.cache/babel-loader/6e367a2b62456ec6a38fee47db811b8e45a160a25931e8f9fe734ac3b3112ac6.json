{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nvar _hoisted_1 = {\n  key: 0\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_TagCloud = _resolveComponent(\"TagCloud\");\n  return $setup.post ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"h1\", null, _toDisplayString($setup.post.title), 1 /* TEXT */), _createElementVNode(\"p\", null, _toDisplayString($setup.post.body), 1 /* TEXT */), _createVNode(_component_TagCloud, {\n    tags: $setup.post.tags\n  }, null, 8 /* PROPS */, [\"tags\"])])) : _createCommentVNode(\"v-if\", true);\n}","map":{"version":3,"names":["key","$setup","post","_createElementBlock","_hoisted_1","_createElementVNode","_toDisplayString","title","body","_createVNode","_component_TagCloud","tags","_createCommentVNode"],"sources":["/workspaces/Mini_Projects_Js/tp5/src/views/PostDetailView.vue"],"sourcesContent":["<template>\n  <div v-if=\"post\">\n    <h1>{{ post.title }}</h1>\n    <p>{{ post.body }}</p>\n    <TagCloud :tags=\"post.tags\" />\n  </div>\n</template>\n\n<script>\nimport { ref, onMounted } from 'vue';\nimport { useRoute } from 'vue-router';\nimport { getPost } from '../composables/getPost';\nimport TagCloud from '../components/TagCloud.vue';\n\nexport default {\n  name: 'PostDetailView',\n  components: { TagCloud },\n  setup() {\n    const route = useRoute();\n    const post = ref(null);\n\n    onMounted(async () => {\n      const id = route.params.id;\n      post.value = await getPost(id);\n    });\n\n    return { post };\n  }\n};\n</script>"],"mappings":";;EAAAA,GAAA;AAAA;;;SACaC,MAAA,CAAAC,IAAI,I,cAAfC,mBAAA,CAIM,OALRC,UAAA,GAEIC,mBAAA,CAAyB,YAAAC,gBAAA,CAAlBL,MAAA,CAAAC,IAAI,CAACK,KAAK,kBACjBF,mBAAA,CAAsB,WAAAC,gBAAA,CAAhBL,MAAA,CAAAC,IAAI,CAACM,IAAI,kBACfC,YAAA,CAA8BC,mBAAA;IAAnBC,IAAI,EAAEV,MAAA,CAAAC,IAAI,CAACS;yCAJ1BC,mBAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}