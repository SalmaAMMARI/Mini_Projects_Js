{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, createCommentVNode as _createCommentVNode } from \"vue\";\nvar _hoisted_1 = {\n  key: 0\n};\nvar _hoisted_2 = {\n  key: 1\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_TagCloud = _resolveComponent(\"TagCloud\");\n  return _openBlock(), _createElementBlock(\"div\", null, [$data.poosts.length > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.poosts, function (post) {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: post.id\n    }, [_createElementVNode(\"h2\", null, _toDisplayString(post.titre), 1 /* TEXT */), _createElementVNode(\"p\", null, _toDisplayString(post.article), 1 /* TEXT */), _createVNode(_component_TagCloud, {\n      tagsview: post.tags\n    }, null, 8 /* PROPS */, [\"tagsview\"])]);\n  }), 128 /* KEYED_FRAGMENT */))])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_2, _cache[0] || (_cache[0] = [_createElementVNode(\"p\", null, \"Aucun post trouvé pour ce tag.\", -1 /* HOISTED */)])))]);\n}","map":{"version":3,"names":["key","_createElementBlock","$data","poosts","length","_hoisted_1","_Fragment","_renderList","post","id","_createElementVNode","_toDisplayString","titre","article","_createVNode","_component_TagCloud","tagsview","tags","_hoisted_2","_cache"],"sources":["/workspaces/Mini_Projects_Js/tp5/src/views/TagsView.vue"],"sourcesContent":["<template>\n  <div>\n    <div v-if=\"poosts.length > 0\">\n      <div v-for=\"post in poosts\" :key=\"post.id\">\n        <h2>{{ post.titre }}</h2>\n        <p>{{ post.article }}</p>\n        <TagCloud :tagsview=\"post.tags\" />\n      </div>\n    </div>\n    <div v-else>\n      <p>Aucun post trouvé pour ce tag.</p>\n    </div>\n  </div>\n</template>\n\n<script>\nimport data from \"@/db.json\"\nimport TagCloud from \"@/components/TagCloud.vue\"\n\nexport default {\n  name: \"TagsView\",\n  components: {\n    TagCloud\n  },\n  data() {\n    return {\n      poosts: [],\n      koko: 0\n    }\n  },\n  created() {\n    const selectedTag = this.$route.params.tag.toLowerCase(); // Normalize the tag\n    console.log(\"Selected tag:\", selectedTag); // Debug\n\n    for (let post of data) {\n      const normalizedTags = post.tags.map(tag => tag.toLowerCase()); // Normalize tags\n      console.log(\"Post tags:\", normalizedTags); // Debug\n\n      if (normalizedTags.includes(selectedTag)) {\n        this.poosts.push(post);\n        console.log(\"Matching post found:\", post); // Debug\n      }\n    }\n  }\n}\n</script>"],"mappings":";;EAAAA,GAAA;AAAA;;EAAAA,GAAA;AAAA;;;uBACEC,mBAAA,CAWM,cAVOC,KAAA,CAAAC,MAAM,CAACC,MAAM,Q,cAAxBH,mBAAA,CAMM,OARVI,UAAA,I,kBAGMJ,mBAAA,CAIMK,SAAA,QAPZC,WAAA,CAG0BL,KAAA,CAAAC,MAAM,EAHhC,UAGkBK,IAAI;yBAAhBP,mBAAA,CAIM;MAJuBD,GAAG,EAAEQ,IAAI,CAACC;QACrCC,mBAAA,CAAyB,YAAAC,gBAAA,CAAlBH,IAAI,CAACI,KAAK,kBACjBF,mBAAA,CAAyB,WAAAC,gBAAA,CAAnBH,IAAI,CAACK,OAAO,kBAClBC,YAAA,CAAkCC,mBAAA;MAAvBC,QAAQ,EAAER,IAAI,CAACS;;qDAG9BhB,mBAAA,CAEM,OAXViB,UAAA,EAAAC,MAAA,QAAAA,MAAA,OAUMT,mBAAA,CAAqC,WAAlC,gCAA8B,oB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}