{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode } from \"vue\";\nvar _hoisted_1 = {\n  \"class\": \"Tags\"\n};\nexport function render(_ctx, _cache) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.tags, function (tag) {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: tag\n    }, [_createElementVNode(\"button\", {\n      onClick: _cache[0] || (_cache[0] = function () {\n        return _ctx.goToTag && _ctx.goToTag.apply(_ctx, arguments);\n      })\n    }, _toDisplayString(tag), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))]);\n}","map":{"version":3,"names":["_createElementBlock","_hoisted_1","_Fragment","_renderList","_ctx","tags","tag","key","_createElementVNode","onClick","_cache","goToTag","apply","arguments"],"sources":["/workspaces/Mini_Projects_Js/tp5/src/components/TagCloud.vue"],"sourcesContent":["<template>\n<div class=\"Tags\"  >\n<div v-for=\"tag in tags\" :key=\"tag\">\n<button  @click=\"goToTag\">{{tag}}</button>\n</div>\n\n</div>\n</template>\n<script>\nexport default{\n    nom:\"TagCloud\",\n    props:{\n        tags:Array\n    },\n    methods:{\n        goToTag(){\n            this.$router.push('/tags/'+:)\n        }\n    }\n}\n</script>"],"mappings":";;EACK,SAAM;AAAM;;uBAAjBA,mBAAA,CAKM,OALNC,UAKM,I,kBAJND,mBAAA,CAEME,SAAA,QAJNC,WAAA,CAEmBC,IAAA,CAAAC,IAAI,EAFvB,UAEYC,GAAG;yBAAfN,mBAAA,CAEM;MAFoBO,GAAG,EAAED;IAAG,IAClCE,mBAAA,CAA0C;MAAhCC,OAAK,EAAAC,MAAA,QAAAA,MAAA;QAAA,OAAEN,IAAA,CAAAO,OAAA,IAAAP,IAAA,CAAAO,OAAA,CAAAC,KAAA,CAAAR,IAAA,EAAAS,SAAA,CAAO;MAAA;wBAAIP,GAAG,iB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}