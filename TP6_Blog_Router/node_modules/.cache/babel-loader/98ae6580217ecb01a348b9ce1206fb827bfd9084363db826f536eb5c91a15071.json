{"ast":null,"code":"import \"core-js/modules/es.array.every.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.every.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nexport default {\n  name: 'TagCloud',\n  props: {\n    tags: {\n      type: Array,\n      required: true,\n      validator: function validator(value) {\n        // Valider que chaque tag est une chaîne de caractères\n        return value.every(function (tag) {\n          return typeof tag === 'string';\n        });\n      }\n    }\n  }\n};","map":{"version":3,"names":["name","props","tags","type","Array","required","validator","value","every","tag"],"sources":["/workspaces/Mini_Projects_Js/tp5/src/components/TagCloud.vue"],"sourcesContent":["<template>\n  <div>\n    <!-- Afficher un message si aucun tag n'est disponible -->\n    <p v-if=\"!tags || tags.length === 0\">Aucun tag disponible.</p>\n\n    <!-- Afficher la liste des tags -->\n    <span v-for=\"tag in tags\" :key=\"tag\">\n      <router-link :to=\"`/tags/${tag}`\" :aria-label=\"`Voir les posts avec le tag ${tag}`\">\n        {{ tag }}\n      </router-link>\n    </span>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'TagCloud',\n  props: {\n    tags: {\n      type: Array,\n      required: true,\n      validator: (value) => {\n        // Valider que chaque tag est une chaîne de caractères\n        return value.every((tag) => typeof tag === 'string');\n      }\n    }\n  }\n};\n</script>\n\n<style scoped>\nspan {\n  margin-right: 10px;\n}\n\n/* Style supplémentaire pour les liens */\nrouter-link {\n  text-decoration: none;\n  color: inherit;\n}\n\nrouter-link:hover {\n  text-decoration: underline;\n}\n</style>"],"mappings":";;;;AAeA,eAAe;EACbA,IAAI,EAAE,UAAU;EAChBC,KAAK,EAAE;IACLC,IAAI,EAAE;MACJC,IAAI,EAAEC,KAAK;MACXC,QAAQ,EAAE,IAAI;MACdC,SAAS,EAAE,SAAXA,SAASA,CAAGC,KAAK,EAAK;QACpB;QACA,OAAOA,KAAK,CAACC,KAAK,CAAC,UAACC,GAAG;UAAA,OAAK,OAAOA,GAAE,KAAM,QAAQ;QAAA,EAAC;MACtD;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}