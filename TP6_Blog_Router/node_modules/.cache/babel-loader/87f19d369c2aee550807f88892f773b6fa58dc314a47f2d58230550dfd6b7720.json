{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_TagCloud = _resolveComponent(\"TagCloud\");\n  return _openBlock(), _createElementBlock(\"div\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.poost, function (post) {\n    return _openBlock(), _createElementBlock(\"div\");\n  }), 256 /* UNKEYED_FRAGMENT */)), _createElementVNode(\"h2\", null, _toDisplayString($data.poost.titre), 1 /* TEXT */), _createElementVNode(\"p\", null, _toDisplayString($data.poost.article), 1 /* TEXT */), _createVNode(_component_TagCloud, {\n    tagsview: $data.poost.tags\n  }, null, 8 /* PROPS */, [\"tagsview\"])]);\n}","map":{"version":3,"names":["_createElementBlock","_Fragment","_renderList","$data","poost","post","_createElementVNode","_toDisplayString","titre","article","_createVNode","_component_TagCloud","tagsview","tags"],"sources":["/workspaces/Mini_Projects_Js/tp5/src/views/TagsView.vue"],"sourcesContent":["<template>\n  <div>\n   <div v-for='post in poost'></div>\n    <h2>{{ poost.titre }}</h2>\n    <p>{{ poost.article }}</p>\n    <TagCloud :tagsview=\"poost.tags\" />\n  </div>\n</template>\n\n<script>\nimport data from \"@/db.json\"\nimport TagCloud from \"@/components/TagCloud.vue\"\n\nexport default {\n  name: \"TagsView\",\n  components: {\n    TagCloud\n  },\n  data() {\n    return {\n      poost: Array,\n      koko: 0\n    }\n  },\n  created() {\n    const selectedTag = this.$route.params.tag.toLowerCase(); // Normalize the tag\n    console.log(\"Selected tag:\", selectedTag); // Debug\n\n    for (let post of data) {\n      const normalizedTags = post.tags.map(tag => tag.toLowerCase()); // Normalize tags\n      console.log(\"Post tags:\", normalizedTags); // Debug\n\n      if (normalizedTags.includes(selectedTag)) {\n        this.poost.push(post) ;\n        \n        console.log(\"Matching post found:\", post); // Debug\n        \n      }\n    }\n  }\n}\n</script>"],"mappings":";;;uBACEA,mBAAA,CAKM,e,kBAJLA,mBAAA,CAAiCC,SAAA,QAFpCC,WAAA,CAEuBC,KAAA,CAAAC,KAAK,EAF5B,UAEeC,IAAI;yBAAhBL,mBAAA,CAAiC;oCAChCM,mBAAA,CAA0B,YAAAC,gBAAA,CAAnBJ,KAAA,CAAAC,KAAK,CAACI,KAAK,kBAClBF,mBAAA,CAA0B,WAAAC,gBAAA,CAApBJ,KAAA,CAAAC,KAAK,CAACK,OAAO,kBACnBC,YAAA,CAAmCC,mBAAA;IAAxBC,QAAQ,EAAET,KAAA,CAAAC,KAAK,CAACS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}