{"ast":null,"code":"import _regeneratorRuntime from \"/workspaces/Mini_Projects_Js/tp5/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/workspaces/Mini_Projects_Js/tp5/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.string.trim.js\";\nimport \"core-js/modules/web.timers.js\";\nimport { ref } from 'vue';\nimport { useRouter } from 'vue-router';\nimport { addPost } from '../composables/addPost'; // Importer la fonction pour ajouter un post\n\nexport default {\n  name: 'CreatePostView',\n  setup: function setup() {\n    var title = ref(''); // Titre du post\n    var body = ref(''); // Contenu du post\n    var tags = ref(''); // Tags du post\n    var error = ref(''); // Message d'erreur\n    var success = ref(''); // Message de succès\n    var router = useRouter(); // Utiliser le routeur pour la redirection\n\n    // Fonction pour soumettre le formulaire\n    var submitPost = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var post;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              error.value = ''; // Réinitialiser le message d'erreur\n              success.value = ''; // Réinitialiser le message de succès\n\n              // Valider les champs\n              if (!(!title.value || !body.value || !tags.value)) {\n                _context.next = 5;\n                break;\n              }\n              error.value = 'Veuillez remplir tous les champs.';\n              return _context.abrupt(\"return\");\n            case 5:\n              _context.prev = 5;\n              // Préparer les données du post\n              post = {\n                title: title.value,\n                body: body.value,\n                tags: tags.value.split(',').map(function (tag) {\n                  return tag.trim();\n                }) // Convertir les tags en tableau\n              }; // Ajouter le post via l'API\n              _context.next = 9;\n              return addPost(post);\n            case 9:\n              // Afficher un message de succès\n              success.value = 'Post créé avec succès !';\n\n              // Réinitialiser le formulaire\n              title.value = '';\n              body.value = '';\n              tags.value = '';\n\n              // Rediriger vers la page d'accueil après 2 secondes\n              setTimeout(function () {\n                router.push('/');\n              }, 2000);\n              _context.next = 20;\n              break;\n            case 16:\n              _context.prev = 16;\n              _context.t0 = _context[\"catch\"](5);\n              console.error('Erreur lors de la création du post:', _context.t0);\n              error.value = 'Une erreur est survenue lors de la création du post.';\n            case 20:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[5, 16]]);\n      }));\n      return function submitPost() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n    return {\n      title: title,\n      body: body,\n      tags: tags,\n      error: error,\n      success: success,\n      submitPost: submitPost\n    };\n  }\n};","map":{"version":3,"names":["ref","useRouter","addPost","name","setup","title","body","tags","error","success","router","submitPost","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","post","wrap","_callee$","_context","prev","next","value","abrupt","split","map","tag","trim","setTimeout","push","t0","console","stop","apply","arguments"],"sources":["/workspaces/Mini_Projects_Js/tp5/src/views/CreatePostView.vue"],"sourcesContent":["<template>\n<div class=\"create-post\">\n<h1>Créer un poste</h1>\n   <form @submit.prevent=\"submitPost\">\n      <!-- Champ pour le titre -->\n      <div class=\"form-group\">\n        <label for=\"title\">Titre</label>\n        <input\n          type=\"text\"\n          id=\"title\"\n          v-model=\"title\"\n          placeholder=\"Entrez le titre\"\n          required\n        />\n      </div>\n\n      <div class=\"form-group\">\n        <label for=\"body\">Contenu</label>\n        <textarea\n          id=\"body\"\n          v-model=\"body\"\n          placeholder=\"Entrez le contenu\"\n          required\n        ></textarea>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"tags\">Tags</label>\n        <input\n          type=\"text\"\n          id=\"tags\"\n          v-model=\"tags\"\n          placeholder=\"Entrez les tags (séparés par des virgules)\"\n          required\n        />\n      </div>\n\n      <!-- Bouton de soumission -->\n      <button type=\"submit\">Créer le post</button>\n      </form>\n</div>\n</template>\n\n<script>\nimport { ref } from 'vue';\nimport { useRouter } from 'vue-router';\nimport { addPost } from '../composables/addPost'; // Importer la fonction pour ajouter un post\n\nexport default {\n  name: 'CreatePostView',\n  setup() {\n    const title = ref(''); // Titre du post\n    const body = ref(''); // Contenu du post\n    const tags = ref(''); // Tags du post\n    const error = ref(''); // Message d'erreur\n    const success = ref(''); // Message de succès\n    const router = useRouter(); // Utiliser le routeur pour la redirection\n\n    // Fonction pour soumettre le formulaire\n    const submitPost = async () => {\n      error.value = ''; // Réinitialiser le message d'erreur\n      success.value = ''; // Réinitialiser le message de succès\n\n      // Valider les champs\n      if (!title.value || !body.value || !tags.value) {\n        error.value = 'Veuillez remplir tous les champs.';\n        return;\n      }\n\n      try {\n        // Préparer les données du post\n        const post = {\n          title: title.value,\n          body: body.value,\n          tags: tags.value.split(',').map(tag => tag.trim()), // Convertir les tags en tableau\n        };\n\n        // Ajouter le post via l'API\n        await addPost(post);\n\n        // Afficher un message de succès\n        success.value = 'Post créé avec succès !';\n\n        // Réinitialiser le formulaire\n        title.value = '';\n        body.value = '';\n        tags.value = '';\n\n        // Rediriger vers la page d'accueil après 2 secondes\n        setTimeout(() => {\n          router.push('/');\n        }, 2000);\n      } catch (err) {\n        console.error('Erreur lors de la création du post:', err);\n        error.value = 'Une erreur est survenue lors de la création du post.';\n      }\n    };\n\n    return { title, body, tags, error, success, submitPost };\n  }\n};\n</script>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}