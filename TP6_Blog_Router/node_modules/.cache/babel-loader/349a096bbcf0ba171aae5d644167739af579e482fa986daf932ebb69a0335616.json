{"ast":null,"code":"import _toConsumableArray from \"/workspaces/Mini_Projects_Js/tp5/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _regeneratorRuntime from \"/workspaces/Mini_Projects_Js/tp5/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/workspaces/Mini_Projects_Js/tp5/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.array.flat-map.js\";\nimport \"core-js/modules/es.array.unscopables.flat-map.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.flat-map.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.set.js\";\nimport \"core-js/modules/es.set.difference.v2.js\";\nimport \"core-js/modules/es.set.intersection.v2.js\";\nimport \"core-js/modules/es.set.is-disjoint-from.v2.js\";\nimport \"core-js/modules/es.set.is-subset-of.v2.js\";\nimport \"core-js/modules/es.set.is-superset-of.v2.js\";\nimport \"core-js/modules/es.set.symmetric-difference.v2.js\";\nimport \"core-js/modules/es.set.union.v2.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport { ref, onMounted } from 'vue';\nimport { getPosts } from '../composables/getPosts'; // Importer la fonction pour récupérer les posts\nimport PostList from '../components/PostList.vue'; // Importer le composant PostList\nimport TagCloud from '../components/TagCloud.vue'; // Importer le composant TagCloud\n\nexport default {\n  name: 'Home',\n  components: {\n    PostList: PostList,\n    TagCloud: TagCloud\n  },\n  // Enregistrer les composants\n  setup: function setup() {\n    var posts = ref([]); // Liste des posts\n    var tags = ref([]); // Liste des tags uniques\n    var loading = ref(true); // État de chargement\n\n    // Fonction pour charger les posts et extraire les tags\n    var fetchPosts = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return getPosts();\n            case 3:\n              posts.value = _context.sent;\n              // Récupérer les posts depuis l'API\n              tags.value = extractUniqueTags(posts.value); // Extraire les tags uniques\n              _context.next = 10;\n              break;\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context[\"catch\"](0);\n              console.error('Erreur lors du chargement des posts:', _context.t0);\n            case 10:\n              _context.prev = 10;\n              loading.value = false; // Désactiver l'état de chargement\n              return _context.finish(10);\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[0, 7, 10, 13]]);\n      }));\n      return function fetchPosts() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    // Fonction pour extraire les tags uniques des posts\n    var extractUniqueTags = function extractUniqueTags(posts) {\n      var allTags = posts.flatMap(function (post) {\n        return post.tags || [];\n      }); // Rassembler tous les tags\n      return _toConsumableArray(new Set(allTags)); // Retourner les tags uniques\n    };\n\n    // Charger les posts au montage du composant\n    onMounted(fetchPosts);\n    return {\n      posts: posts,\n      tags: tags,\n      loading: loading\n    };\n  }\n};","map":{"version":3,"names":["ref","onMounted","getPosts","PostList","TagCloud","name","components","setup","posts","tags","loading","fetchPosts","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_callee$","_context","prev","next","value","sent","extractUniqueTags","t0","console","error","finish","stop","apply","arguments","allTags","flatMap","post","_toConsumableArray","Set"],"sources":["/workspaces/Mini_Projects_Js/tp5/src/views/HomePage.vue"],"sourcesContent":["<template>\n<div class=\"home\">\n<h1>Liste des Articles</h1>\n  <!-- Afficher la liste des articles -->\n    <PostList :posts=\"posts\" />\n\n    <!-- Afficher la liste des tags -->\n    <TagCloud :tags=\"tags\" />\n</div>\n\n\n</template>\n<script>\nimport { ref, onMounted } from 'vue';\nimport { getPosts } from '../composables/getPosts'; // Importer la fonction pour récupérer les posts\nimport PostList from '../components/PostList.vue'; // Importer le composant PostList\nimport TagCloud from '../components/TagCloud.vue'; // Importer le composant TagCloud\n\nexport default {\n  name: 'Home',\n  components: { PostList, TagCloud }, // Enregistrer les composants\n  setup() {\n    const posts = ref([]); // Liste des posts\n    const tags = ref([]); // Liste des tags uniques\n    const loading = ref(true); // État de chargement\n\n    // Fonction pour charger les posts et extraire les tags\n    const fetchPosts = async () => {\n      try {\n        posts.value = await getPosts(); // Récupérer les posts depuis l'API\n        tags.value = extractUniqueTags(posts.value); // Extraire les tags uniques\n      } catch (err) {\n        console.error('Erreur lors du chargement des posts:', err);\n      } finally {\n        loading.value = false; // Désactiver l'état de chargement\n      }\n    };\n\n    // Fonction pour extraire les tags uniques des posts\n    const extractUniqueTags = (posts) => {\n      const allTags = posts.flatMap(post => post.tags || []); // Rassembler tous les tags\n      return [...new Set(allTags)]; // Retourner les tags uniques\n    };\n\n    // Charger les posts au montage du composant\n    onMounted(fetchPosts);\n\n    return { posts, tags, loading };\n  }\n};\n</script>\n"],"mappings":";;;;;;;;;;;;;;;;;;AAaA,SAASA,GAAG,EAAEC,SAAQ,QAAS,KAAK;AACpC,SAASC,QAAO,QAAS,yBAAyB,EAAE;AACpD,OAAOC,QAAO,MAAO,4BAA4B,EAAE;AACnD,OAAOC,QAAO,MAAO,4BAA4B,EAAE;;AAEnD,eAAe;EACbC,IAAI,EAAE,MAAM;EACZC,UAAU,EAAE;IAAEH,QAAQ,EAARA,QAAQ;IAAEC,QAAO,EAAPA;EAAS,CAAC;EAAE;EACpCG,KAAK,WAALA,KAAKA,CAAA,EAAG;IACN,IAAMC,KAAI,GAAIR,GAAG,CAAC,EAAE,CAAC,EAAE;IACvB,IAAMS,IAAG,GAAIT,GAAG,CAAC,EAAE,CAAC,EAAE;IACtB,IAAMU,OAAM,GAAIV,GAAG,CAAC,IAAI,CAAC,EAAE;;IAE3B;IACA,IAAMW,UAAS;MAAA,IAAAC,IAAA,GAAAC,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,CAAI,SAAAC,QAAA;QAAA,OAAAF,mBAAA,GAAAG,IAAA,UAAAC,SAAAC,QAAA;UAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;YAAA;cAAAF,QAAA,CAAAC,IAAA;cAAAD,QAAA,CAAAE,IAAA;cAAA,OAEKnB,QAAQ,CAAC,CAAC;YAAA;cAA9BM,KAAK,CAACc,KAAI,GAAAH,QAAA,CAAAI,IAAA;cAAsB;cAChCd,IAAI,CAACa,KAAI,GAAIE,iBAAiB,CAAChB,KAAK,CAACc,KAAK,CAAC,EAAE;cAAAH,QAAA,CAAAE,IAAA;cAAA;YAAA;cAAAF,QAAA,CAAAC,IAAA;cAAAD,QAAA,CAAAM,EAAA,GAAAN,QAAA;cAE7CO,OAAO,CAACC,KAAK,CAAC,sCAAsC,EAAAR,QAAA,CAAAM,EAAK,CAAC;YAAA;cAAAN,QAAA,CAAAC,IAAA;cAE1DV,OAAO,CAACY,KAAI,GAAI,KAAK,EAAE;cAAA,OAAAH,QAAA,CAAAS,MAAA;YAAA;YAAA;cAAA,OAAAT,QAAA,CAAAU,IAAA;UAAA;QAAA,GAAAb,OAAA;MAAA,CAE1B;MAAA,gBATKL,UAASA,CAAA;QAAA,OAAAC,IAAA,CAAAkB,KAAA,OAAAC,SAAA;MAAA;IAAA,GASd;;IAED;IACA,IAAMP,iBAAgB,GAAI,SAApBA,iBAAgBA,CAAKhB,KAAK,EAAK;MACnC,IAAMwB,OAAM,GAAIxB,KAAK,CAACyB,OAAO,CAAC,UAAAC,IAAG;QAAA,OAAKA,IAAI,CAACzB,IAAG,IAAK,EAAE;MAAA,EAAC,EAAE;MACxD,OAAA0B,kBAAA,CAAW,IAAIC,GAAG,CAACJ,OAAO,CAAC,EAAC,CAAE;IAChC,CAAC;;IAED;IACA/B,SAAS,CAACU,UAAU,CAAC;IAErB,OAAO;MAAEH,KAAK,EAALA,KAAK;MAAEC,IAAI,EAAJA,IAAI;MAAEC,OAAM,EAANA;IAAQ,CAAC;EACjC;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}