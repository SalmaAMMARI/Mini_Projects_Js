{"ast":null,"code":"import _regeneratorRuntime from \"/workspaces/Mini_Projects_Js/ChatAPP/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/workspaces/Mini_Projects_Js/ChatAPP/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.date.now.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.regexp.test.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/es.string.starts-with.js\";\nimport \"core-js/modules/es.string.trim.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/web.url.js\";\nimport \"core-js/modules/web.url.to-json.js\";\nimport \"core-js/modules/web.url-search-params.js\";\nimport \"core-js/modules/web.url-search-params.delete.js\";\nimport \"core-js/modules/web.url-search-params.has.js\";\nimport \"core-js/modules/web.url-search-params.size.js\";\nimport { getAuth, EmailAuthProvider, reauthenticateWithCredential, updatePassword, updateEmail, sendEmailVerification, updateProfile as updateAuthProfile } from \"firebase/auth\";\nimport { getFirestore, doc, getDoc, setDoc, updateDoc } from \"firebase/firestore\";\nimport { getStorage, ref as storageRef, uploadBytesResumable, getDownloadURL, deleteObject } from \"firebase/storage\";\nimport { onMounted, ref } from 'vue';\nimport { useRoute } from 'vue-router';\nexport default {\n  name: \"ProfilePage\",\n  setup: function setup() {\n    var route = useRoute();\n    var FirstName = ref('');\n    var LastName = ref('');\n    var oldPass = ref('');\n    var newPass = ref('');\n    var newEmail = ref('');\n    var userId = ref(null);\n    var successMessage = ref('');\n    var errorMessage = ref('');\n    var Email = ref('');\n    var emailVerified = ref(false);\n    var isOnline = ref(false);\n    var profileImageUrl = ref('');\n    var isUploading = ref(false);\n    var uploadProgress = ref(0);\n    var profileImagePath = ref('');\n    var imageUrlInput = ref('');\n    var isImageUrlInvalid = ref(false);\n    var fetchUserData = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var auth, currentUser, db, userDoc, userData;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              auth = getAuth();\n              currentUser = auth.currentUser;\n              userId.value = (currentUser === null || currentUser === void 0 ? void 0 : currentUser.uid) || route.params.userid;\n              if (userId.value) {\n                _context.next = 7;\n                break;\n              }\n              errorMessage.value = \"No user ID found. Please log in.\";\n              return _context.abrupt(\"return\");\n            case 7:\n              db = getFirestore();\n              _context.next = 10;\n              return getDoc(doc(db, \"users\", userId.value));\n            case 10:\n              userDoc = _context.sent;\n              if (!userDoc.exists()) {\n                _context.next = 21;\n                break;\n              }\n              userData = userDoc.data();\n              FirstName.value = userData.FirstName || '';\n              LastName.value = userData.LastName || '';\n              Email.value = userData.Email || (currentUser === null || currentUser === void 0 ? void 0 : currentUser.email) || '';\n              isOnline.value = userData.isOnline || false;\n\n              // Only set the profile image URL if it exists in the database\n              if (userData.profileImageUrl) {\n                profileImageUrl.value = userData.profileImageUrl;\n                profileImagePath.value = userData.profileImagePath || '';\n              }\n              emailVerified.value = (currentUser === null || currentUser === void 0 ? void 0 : currentUser.emailVerified) || false;\n              _context.next = 25;\n              break;\n            case 21:\n              if (!currentUser) {\n                _context.next = 25;\n                break;\n              }\n              _context.next = 24;\n              return setDoc(doc(db, 'users', userId.value), {\n                FirstName: '',\n                LastName: '',\n                Email: currentUser.email,\n                isOnline: true,\n                profileImageUrl: '',\n                profileImagePath: '',\n                createdAt: new Date()\n              });\n            case 24:\n              Email.value = currentUser.email;\n            case 25:\n              _context.next = 31;\n              break;\n            case 27:\n              _context.prev = 27;\n              _context.t0 = _context[\"catch\"](0);\n              console.error(\"Error fetching user data:\", _context.t0);\n              errorMessage.value = \"Failed to fetch user data: \" + _context.t0.message;\n            case 31:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[0, 27]]);\n      }));\n      return function fetchUserData() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    // Function to handle setting image from URL\n    var setImageFromUrl = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var auth, currentUser, storage, oldImageRef, db;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              if (imageUrlInput.value) {\n                _context2.next = 2;\n                break;\n              }\n              return _context2.abrupt(\"return\");\n            case 2:\n              _context2.prev = 2;\n              successMessage.value = '';\n              errorMessage.value = '';\n              isUploading.value = true;\n              auth = getAuth();\n              currentUser = auth.currentUser;\n              if (currentUser) {\n                _context2.next = 12;\n                break;\n              }\n              errorMessage.value = \"You must be logged in to update your profile\";\n              isUploading.value = false;\n              return _context2.abrupt(\"return\");\n            case 12:\n              _context2.prev = 12;\n              new URL(imageUrlInput.value);\n              _context2.next = 21;\n              break;\n            case 16:\n              _context2.prev = 16;\n              _context2.t0 = _context2[\"catch\"](12);\n              errorMessage.value = \"Please enter a valid URL\";\n              isUploading.value = false;\n              return _context2.abrupt(\"return\");\n            case 21:\n              if (!(profileImagePath.value && profileImagePath.value.startsWith('profile_pictures/'))) {\n                _context2.next = 32;\n                break;\n              }\n              _context2.prev = 22;\n              storage = getStorage();\n              oldImageRef = storageRef(storage, profileImagePath.value);\n              _context2.next = 27;\n              return deleteObject(oldImageRef);\n            case 27:\n              _context2.next = 32;\n              break;\n            case 29:\n              _context2.prev = 29;\n              _context2.t1 = _context2[\"catch\"](22);\n              console.error(\"Failed to delete old image:\", _context2.t1);\n              // Continue even if delete fails\n            case 32:\n              _context2.prev = 32;\n              _context2.next = 35;\n              return updateAuthProfile(currentUser, {\n                photoURL: imageUrlInput.value\n              });\n            case 35:\n              _context2.next = 40;\n              break;\n            case 37:\n              _context2.prev = 37;\n              _context2.t2 = _context2[\"catch\"](32);\n              console.error(\"Failed to update auth profile:\", _context2.t2);\n              // Continue even if this fails\n            case 40:\n              // Update user profile in Firestore\n              db = getFirestore();\n              _context2.next = 43;\n              return updateDoc(doc(db, 'users', userId.value), {\n                profileImageUrl: imageUrlInput.value,\n                profileImagePath: 'external_url',\n                // Mark as external URL\n                updatedAt: new Date()\n              });\n            case 43:\n              profileImageUrl.value = imageUrlInput.value;\n              profileImagePath.value = 'external_url';\n              successMessage.value = \"Profile picture updated successfully!\";\n\n              // Clear the input\n              imageUrlInput.value = '';\n              _context2.next = 53;\n              break;\n            case 49:\n              _context2.prev = 49;\n              _context2.t3 = _context2[\"catch\"](2);\n              console.error(\"Set image URL error:\", _context2.t3);\n              errorMessage.value = \"Failed to set profile picture: \" + _context2.t3.message;\n            case 53:\n              _context2.prev = 53;\n              isUploading.value = false;\n              return _context2.finish(53);\n            case 56:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, null, [[2, 49, 53, 56], [12, 16], [22, 29], [32, 37]]);\n      }));\n      return function setImageFromUrl() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    // Handle image error when loading invalid URLs\n    var handleImageError = function handleImageError(event) {\n      if (profileImageUrl.value) {\n        errorMessage.value = \"Failed to load image. The URL may be invalid or inaccessible.\";\n        // Don't reset the profile image URL here, just show an error\n        isImageUrlInvalid.value = true;\n      }\n    };\n    var handleImageUpload = /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4(event) {\n        var file, validTypes, maxSize, storage, auth, currentUser, oldImageRef, fileExtension, filename, storagePath, imageRef, uploadTask;\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              file = event.target.files[0];\n              if (file) {\n                _context4.next = 3;\n                break;\n              }\n              return _context4.abrupt(\"return\");\n            case 3:\n              validTypes = ['image/jpeg', 'image/png', 'image/gif', 'image/webp'];\n              if (validTypes.includes(file.type)) {\n                _context4.next = 7;\n                break;\n              }\n              errorMessage.value = \"Please upload a valid image file (JPEG, PNG, GIF, WEBP)\";\n              return _context4.abrupt(\"return\");\n            case 7:\n              maxSize = 5 * 1024 * 1024; // 5MB\n              if (!(file.size > maxSize)) {\n                _context4.next = 11;\n                break;\n              }\n              errorMessage.value = \"Image size must be less than 5MB\";\n              return _context4.abrupt(\"return\");\n            case 11:\n              _context4.prev = 11;\n              isUploading.value = true;\n              uploadProgress.value = 0;\n              successMessage.value = '';\n              errorMessage.value = '';\n              storage = getStorage();\n              auth = getAuth();\n              currentUser = auth.currentUser;\n              if (currentUser) {\n                _context4.next = 23;\n                break;\n              }\n              errorMessage.value = \"You must be logged in to upload an image\";\n              isUploading.value = false;\n              return _context4.abrupt(\"return\");\n            case 23:\n              if (!(profileImagePath.value && profileImagePath.value.startsWith('profile_pictures/'))) {\n                _context4.next = 33;\n                break;\n              }\n              _context4.prev = 24;\n              oldImageRef = storageRef(storage, profileImagePath.value);\n              _context4.next = 28;\n              return deleteObject(oldImageRef);\n            case 28:\n              _context4.next = 33;\n              break;\n            case 30:\n              _context4.prev = 30;\n              _context4.t0 = _context4[\"catch\"](24);\n              console.error(\"Failed to delete old image:\", _context4.t0);\n              // Continue with upload even if delete fails\n            case 33:\n              // Create a unique filename with timestamp to prevent cache issues\n              fileExtension = file.name.split('.').pop();\n              filename = \"\".concat(userId.value, \"_\").concat(Date.now(), \".\").concat(fileExtension);\n              storagePath = \"profile_pictures/\".concat(filename); // Upload the file to Firebase Storage\n              imageRef = storageRef(storage, storagePath);\n              uploadTask = uploadBytesResumable(imageRef, file);\n              uploadTask.on('state_changed', function (snapshot) {\n                // Track upload progress\n                var progress = Math.round(snapshot.bytesTransferred / snapshot.totalBytes * 100);\n                uploadProgress.value = progress;\n              }, function (error) {\n                console.error(\"Upload error:\", error);\n                errorMessage.value = \"Failed to upload image: \" + error.message;\n                isUploading.value = false;\n              }, /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n                var downloadUrl, db;\n                return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n                  while (1) switch (_context3.prev = _context3.next) {\n                    case 0:\n                      _context3.prev = 0;\n                      _context3.next = 3;\n                      return getDownloadURL(uploadTask.snapshot.ref);\n                    case 3:\n                      downloadUrl = _context3.sent;\n                      _context3.prev = 4;\n                      _context3.next = 7;\n                      return updateAuthProfile(currentUser, {\n                        photoURL: downloadUrl\n                      });\n                    case 7:\n                      _context3.next = 12;\n                      break;\n                    case 9:\n                      _context3.prev = 9;\n                      _context3.t0 = _context3[\"catch\"](4);\n                      console.error(\"Failed to update auth profile:\", _context3.t0);\n                      // Continue even if this fails\n                    case 12:\n                      // Update user profile in Firestore\n                      db = getFirestore();\n                      _context3.next = 15;\n                      return updateDoc(doc(db, 'users', userId.value), {\n                        profileImageUrl: downloadUrl,\n                        profileImagePath: storagePath,\n                        updatedAt: new Date()\n                      });\n                    case 15:\n                      // Only update local state when upload is successful\n                      profileImageUrl.value = downloadUrl;\n                      profileImagePath.value = storagePath;\n                      successMessage.value = \"Profile picture updated successfully!\";\n                      _context3.next = 24;\n                      break;\n                    case 20:\n                      _context3.prev = 20;\n                      _context3.t1 = _context3[\"catch\"](0);\n                      console.error(\"Error in final upload step:\", _context3.t1);\n                      errorMessage.value = \"Failed to complete the upload: \" + _context3.t1.message;\n                    case 24:\n                      _context3.prev = 24;\n                      isUploading.value = false;\n                      return _context3.finish(24);\n                    case 27:\n                    case \"end\":\n                      return _context3.stop();\n                  }\n                }, _callee3, null, [[0, 20, 24, 27], [4, 9]]);\n              })));\n              _context4.next = 46;\n              break;\n            case 41:\n              _context4.prev = 41;\n              _context4.t1 = _context4[\"catch\"](11);\n              console.error(\"Upload handler error:\", _context4.t1);\n              errorMessage.value = \"Failed to process image: \" + _context4.t1.message;\n              isUploading.value = false;\n            case 46:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4, null, [[11, 41], [24, 30]]);\n      }));\n      return function handleImageUpload(_x) {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n    var removeProfilePicture = /*#__PURE__*/function () {\n      var _ref5 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {\n        var storage, auth, currentUser, imageRef, db;\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) switch (_context5.prev = _context5.next) {\n            case 0:\n              if (!isUploading.value) {\n                _context5.next = 2;\n                break;\n              }\n              return _context5.abrupt(\"return\");\n            case 2:\n              _context5.prev = 2;\n              successMessage.value = '';\n              errorMessage.value = '';\n              if (profileImageUrl.value) {\n                _context5.next = 8;\n                break;\n              }\n              errorMessage.value = \"No profile picture to remove\";\n              return _context5.abrupt(\"return\");\n            case 8:\n              isUploading.value = true;\n              storage = getStorage();\n              auth = getAuth();\n              currentUser = auth.currentUser; // Delete the image from Firebase Storage if it's stored there\n              if (!(profileImagePath.value && profileImagePath.value.startsWith('profile_pictures/'))) {\n                _context5.next = 22;\n                break;\n              }\n              _context5.prev = 13;\n              imageRef = storageRef(storage, profileImagePath.value);\n              _context5.next = 17;\n              return deleteObject(imageRef);\n            case 17:\n              _context5.next = 22;\n              break;\n            case 19:\n              _context5.prev = 19;\n              _context5.t0 = _context5[\"catch\"](13);\n              console.error(\"Error deleting storage image:\", _context5.t0);\n              // Continue even if storage deletion fails\n            case 22:\n              if (!currentUser) {\n                _context5.next = 31;\n                break;\n              }\n              _context5.prev = 23;\n              _context5.next = 26;\n              return updateAuthProfile(currentUser, {\n                photoURL: null\n              });\n            case 26:\n              _context5.next = 31;\n              break;\n            case 28:\n              _context5.prev = 28;\n              _context5.t1 = _context5[\"catch\"](23);\n              console.error(\"Error updating auth profile:\", _context5.t1);\n              // Continue even if this fails\n            case 31:\n              // Update the user profile in Firestore\n              db = getFirestore();\n              _context5.next = 34;\n              return updateDoc(doc(db, 'users', userId.value), {\n                profileImageUrl: '',\n                profileImagePath: '',\n                updatedAt: new Date()\n              });\n            case 34:\n              // Clear the local state\n              profileImageUrl.value = '';\n              profileImagePath.value = '';\n              successMessage.value = \"Profile picture removed successfully!\";\n              _context5.next = 43;\n              break;\n            case 39:\n              _context5.prev = 39;\n              _context5.t2 = _context5[\"catch\"](2);\n              console.error(\"Remove profile picture error:\", _context5.t2);\n              errorMessage.value = \"Failed to remove profile picture: \" + _context5.t2.message;\n            case 43:\n              _context5.prev = 43;\n              isUploading.value = false;\n              return _context5.finish(43);\n            case 46:\n            case \"end\":\n              return _context5.stop();\n          }\n        }, _callee5, null, [[2, 39, 43, 46], [13, 19], [23, 28]]);\n      }));\n      return function removeProfilePicture() {\n        return _ref5.apply(this, arguments);\n      };\n    }();\n\n    // Validate an email address format\n    var isValidEmail = function isValidEmail(email) {\n      var emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n      return emailRegex.test(email);\n    };\n    var updateProfile = /*#__PURE__*/function () {\n      var _ref6 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee6() {\n        var auth, currentUser, db, updateData, credential;\n        return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n          while (1) switch (_context6.prev = _context6.next) {\n            case 0:\n              if (!isUploading.value) {\n                _context6.next = 2;\n                break;\n              }\n              return _context6.abrupt(\"return\");\n            case 2:\n              _context6.prev = 2;\n              successMessage.value = '';\n              errorMessage.value = '';\n              auth = getAuth();\n              currentUser = auth.currentUser;\n              if (currentUser) {\n                _context6.next = 10;\n                break;\n              }\n              errorMessage.value = \"You must be logged in to update your profile\";\n              return _context6.abrupt(\"return\");\n            case 10:\n              if (!(!FirstName.value.trim() || !LastName.value.trim())) {\n                _context6.next = 13;\n                break;\n              }\n              errorMessage.value = \"First and last name are required\";\n              return _context6.abrupt(\"return\");\n            case 13:\n              db = getFirestore(); // Update profile data in Firestore WITHOUT changing the profile image\n              updateData = {\n                FirstName: FirstName.value.trim(),\n                LastName: LastName.value.trim(),\n                isOnline: true,\n                updatedAt: new Date()\n              };\n              _context6.next = 17;\n              return updateDoc(doc(db, 'users', userId.value), updateData);\n            case 17:\n              if (!oldPass.value) {\n                _context6.next = 53;\n                break;\n              }\n              _context6.prev = 18;\n              credential = EmailAuthProvider.credential(currentUser.email, oldPass.value);\n              _context6.next = 22;\n              return reauthenticateWithCredential(currentUser, credential);\n            case 22:\n              if (!newPass.value) {\n                _context6.next = 31;\n                break;\n              }\n              if (!(newPass.value.length < 6)) {\n                _context6.next = 26;\n                break;\n              }\n              errorMessage.value = \"Password must be at least 6 characters\";\n              return _context6.abrupt(\"return\");\n            case 26:\n              _context6.next = 28;\n              return updatePassword(currentUser, newPass.value);\n            case 28:\n              oldPass.value = '';\n              newPass.value = '';\n              successMessage.value = \"Password updated successfully!\";\n            case 31:\n              if (!(newEmail.value && newEmail.value !== currentUser.email)) {\n                _context6.next = 44;\n                break;\n              }\n              if (isValidEmail(newEmail.value)) {\n                _context6.next = 35;\n                break;\n              }\n              errorMessage.value = \"Please enter a valid email address\";\n              return _context6.abrupt(\"return\");\n            case 35:\n              _context6.next = 37;\n              return updateEmail(currentUser, newEmail.value);\n            case 37:\n              _context6.next = 39;\n              return sendEmailVerification(currentUser);\n            case 39:\n              _context6.next = 41;\n              return updateDoc(doc(db, 'users', userId.value), {\n                Email: newEmail.value,\n                updatedAt: new Date()\n              });\n            case 41:\n              // Update the local state\n              Email.value = newEmail.value;\n              successMessage.value = successMessage.value ? successMessage.value + \" Email updated successfully! Verification email sent.\" : \"Email updated successfully! Verification email sent.\";\n              newEmail.value = '';\n            case 44:\n              _context6.next = 51;\n              break;\n            case 46:\n              _context6.prev = 46;\n              _context6.t0 = _context6[\"catch\"](18);\n              console.error(\"Authentication error:\", _context6.t0);\n              errorMessage.value = \"Authentication failed: \" + _context6.t0.message;\n              return _context6.abrupt(\"return\");\n            case 51:\n              _context6.next = 56;\n              break;\n            case 53:\n              if (!(newPass.value || newEmail.value)) {\n                _context6.next = 56;\n                break;\n              }\n              errorMessage.value = \"Current password is required to change password or email\";\n              return _context6.abrupt(\"return\");\n            case 56:\n              if (!successMessage.value) {\n                successMessage.value = \"Profile updated successfully!\";\n              }\n              _context6.next = 63;\n              break;\n            case 59:\n              _context6.prev = 59;\n              _context6.t1 = _context6[\"catch\"](2);\n              console.error(\"Update profile error:\", _context6.t1);\n              errorMessage.value = \"Failed to update profile: \" + _context6.t1.message;\n            case 63:\n            case \"end\":\n              return _context6.stop();\n          }\n        }, _callee6, null, [[2, 59], [18, 46]]);\n      }));\n      return function updateProfile() {\n        return _ref6.apply(this, arguments);\n      };\n    }();\n\n    // Initialize user data when component mounts\n    onMounted(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee7() {\n      return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n        while (1) switch (_context7.prev = _context7.next) {\n          case 0:\n            _context7.next = 2;\n            return fetchUserData();\n          case 2:\n          case \"end\":\n            return _context7.stop();\n        }\n      }, _callee7);\n    })));\n    return {\n      FirstName: FirstName,\n      LastName: LastName,\n      oldPass: oldPass,\n      newPass: newPass,\n      newEmail: newEmail,\n      userId: userId,\n      successMessage: successMessage,\n      errorMessage: errorMessage,\n      Email: Email,\n      emailVerified: emailVerified,\n      isOnline: isOnline,\n      profileImageUrl: profileImageUrl,\n      isUploading: isUploading,\n      uploadProgress: uploadProgress,\n      imageUrlInput: imageUrlInput,\n      updateProfile: updateProfile,\n      handleImageUpload: handleImageUpload,\n      removeProfilePicture: removeProfilePicture,\n      setImageFromUrl: setImageFromUrl,\n      handleImageError: handleImageError\n    };\n  }\n};","map":{"version":3,"names":["getAuth","EmailAuthProvider","reauthenticateWithCredential","updatePassword","updateEmail","sendEmailVerification","updateProfile","updateAuthProfile","getFirestore","doc","getDoc","setDoc","updateDoc","getStorage","ref","storageRef","uploadBytesResumable","getDownloadURL","deleteObject","onMounted","useRoute","name","setup","route","FirstName","LastName","oldPass","newPass","newEmail","userId","successMessage","errorMessage","Email","emailVerified","isOnline","profileImageUrl","isUploading","uploadProgress","profileImagePath","imageUrlInput","isImageUrlInvalid","fetchUserData","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","auth","currentUser","db","userDoc","userData","wrap","_callee$","_context","prev","next","value","uid","params","userid","abrupt","sent","exists","data","email","createdAt","Date","t0","console","error","message","stop","apply","arguments","setImageFromUrl","_ref2","_callee2","storage","oldImageRef","_callee2$","_context2","URL","startsWith","t1","photoURL","t2","updatedAt","t3","finish","handleImageError","event","handleImageUpload","_ref3","_callee4","file","validTypes","maxSize","fileExtension","filename","storagePath","imageRef","uploadTask","_callee4$","_context4","target","files","includes","type","size","split","pop","concat","now","on","snapshot","progress","Math","round","bytesTransferred","totalBytes","_callee3","downloadUrl","_callee3$","_context3","_x","removeProfilePicture","_ref5","_callee5","_callee5$","_context5","isValidEmail","emailRegex","test","_ref6","_callee6","updateData","credential","_callee6$","_context6","trim","length","_callee7","_callee7$","_context7"],"sources":["/workspaces/Mini_Projects_Js/ChatAPP/src/components/ProfilePage.vue"],"sourcesContent":["<template>\r\n  <div class=\"profile-container\">\r\n    <div class=\"profile-header\">\r\n      <h2>Profile Page</h2>\r\n      <div class=\"status-indicator\">\r\n        <span class=\"status-label\">Status:</span>\r\n        <span class=\"status-value\" :class=\"{ 'online': isOnline }\">\r\n          {{ isOnline ? 'Online' : 'Offline' }}\r\n        </span>\r\n      </div>\r\n    </div>\r\n    \r\n    <div class=\"profile-form\">\r\n      <div class=\"profile-picture-section\">\r\n        <div class=\"profile-picture-container\">\r\n          <img \r\n            :src=\"profileImageUrl || '/default-avatar.png'\" \r\n            alt=\"Profile Picture\" \r\n            class=\"profile-picture\"\r\n            @error=\"handleImageError\"\r\n          />\r\n          <div v-if=\"isUploading\" class=\"upload-overlay\">\r\n            <div class=\"upload-progress\">{{ uploadProgress }}%</div>\r\n          </div>\r\n        </div>\r\n        \r\n        <div class=\"profile-picture-actions\">\r\n          <!-- Image URL input form -->\r\n          <div class=\"image-url-form\">\r\n            <input \r\n              type=\"text\" \r\n              v-model=\"imageUrlInput\" \r\n              placeholder=\"Enter image URL\" \r\n              class=\"image-url-input\"\r\n            >\r\n            <button \r\n              @click=\"setImageFromUrl\" \r\n              class=\"url-button\"\r\n              :disabled=\"isUploading || !imageUrlInput\"\r\n            >\r\n              Set Image\r\n            </button>\r\n          </div>\r\n          \r\n          <div class=\"or-divider\">- OR -</div>\r\n          \r\n          <label for=\"profilePicture\" class=\"upload-button\">\r\n            <span class=\"upload-icon\">📷</span> Choose Photo\r\n          </label>\r\n          <input \r\n            id=\"profilePicture\" \r\n            type=\"file\" \r\n            accept=\"image/*\" \r\n            @change=\"handleImageUpload\" \r\n            class=\"file-input\"\r\n          >\r\n          <button \r\n            v-if=\"profileImageUrl\" \r\n            @click=\"removeProfilePicture\" \r\n            class=\"remove-button\"\r\n            :disabled=\"isUploading\"\r\n          >\r\n            Remove Photo\r\n          </button>\r\n        </div>\r\n      </div>\r\n      \r\n      <div class=\"form-group\">\r\n        <label for=\"firstName\">First Name</label>\r\n        <input\r\n          id=\"firstName\"\r\n          type=\"text\"\r\n          v-model=\"FirstName\"\r\n          :placeholder=\"FirstName || 'Enter your first name'\"\r\n          required\r\n        >\r\n      </div>\r\n      \r\n      <div class=\"form-group\">\r\n        <label for=\"lastName\">Last Name</label>\r\n        <input \r\n          id=\"lastName\"\r\n          type=\"text\" \r\n          v-model=\"LastName\" \r\n          :placeholder=\"LastName || 'Enter your last name'\"\r\n          required\r\n        >\r\n      </div>\r\n      \r\n      <div class=\"form-group\">\r\n        <label for=\"currentPassword\">Current Password</label>\r\n        <input \r\n          id=\"currentPassword\"\r\n          type=\"password\" \r\n          v-model=\"oldPass\" \r\n          placeholder=\"Enter current password\"\r\n        >\r\n      </div>\r\n      \r\n      <div class=\"form-group\">\r\n        <label for=\"newPassword\">New Password</label>\r\n        <input \r\n          id=\"newPassword\"\r\n          type=\"password\" \r\n          v-model=\"newPass\" \r\n          placeholder=\"Enter new password\"\r\n        >\r\n      </div>\r\n      \r\n      <div class=\"form-group\">\r\n        <label for=\"newEmail\">Email</label>\r\n        <p class=\"email-help\">Type new email here if you want to change yours</p>\r\n        <input\r\n          id=\"newEmail\" \r\n          type=\"email\" \r\n          v-model=\"newEmail\" \r\n          :placeholder=\"Email\"\r\n        >\r\n      </div>\r\n      \r\n      <div class=\"form-actions\">\r\n        <button @click=\"updateProfile\" class=\"save-button\" :disabled=\"isUploading\">Save Changes</button>\r\n      </div>\r\n      \r\n      \r\n      <div v-if=\"successMessage\" class=\"success-message\">{{ successMessage }}</div>\r\n      <div v-if=\"errorMessage\" class=\"error-message\">{{ errorMessage }}</div>\r\n    </div>\r\n    \r\n    <div class=\"navigation-links\">\r\n      <router-link :to=\"`/forum/${userId}`\" class=\"back-link\">\r\n        <span class=\"back-icon\">←</span> Return to Discussions\r\n      </router-link>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport {\r\n  getAuth,\r\n  EmailAuthProvider,\r\n  reauthenticateWithCredential,\r\n  updatePassword,\r\n  updateEmail,\r\n  sendEmailVerification,\r\n  updateProfile as updateAuthProfile\r\n} from \"firebase/auth\";\r\nimport { getFirestore, doc, getDoc, setDoc, updateDoc } from \"firebase/firestore\";\r\nimport { getStorage, ref as storageRef, uploadBytesResumable, getDownloadURL, deleteObject } from \"firebase/storage\";\r\nimport { onMounted, ref } from 'vue';\r\nimport { useRoute } from 'vue-router';\r\n\r\nexport default {\r\n  name: \"ProfilePage\",\r\n  setup() {\r\n    const route = useRoute();\r\n    const FirstName = ref('');\r\n    const LastName = ref('');\r\n    const oldPass = ref('');\r\n    const newPass = ref('');\r\n    const newEmail = ref('');\r\n    const userId = ref(null);\r\n    const successMessage = ref('');\r\n    const errorMessage = ref('');\r\n    const Email = ref('');\r\n    const emailVerified = ref(false);\r\n    const isOnline = ref(false);\r\n    const profileImageUrl = ref('');\r\n    const isUploading = ref(false);\r\n    const uploadProgress = ref(0);\r\n    const profileImagePath = ref('');\r\n    const imageUrlInput = ref('');\r\n    const isImageUrlInvalid = ref(false);\r\n    \r\n    const fetchUserData = async () => {\r\n      try {\r\n        const auth = getAuth();\r\n        const currentUser = auth.currentUser;\r\n        userId.value = currentUser?.uid || route.params.userid;\r\n        \r\n        if (!userId.value) {\r\n          errorMessage.value = \"No user ID found. Please log in.\";\r\n          return;\r\n        }\r\n        \r\n        const db = getFirestore();\r\n        const userDoc = await getDoc(doc(db, \"users\", userId.value));\r\n        \r\n        if (userDoc.exists()) {\r\n          const userData = userDoc.data();\r\n          FirstName.value = userData.FirstName || '';\r\n          LastName.value = userData.LastName || '';\r\n          Email.value = userData.Email || currentUser?.email || '';\r\n          isOnline.value = userData.isOnline || false;\r\n          \r\n          // Only set the profile image URL if it exists in the database\r\n          if (userData.profileImageUrl) {\r\n            profileImageUrl.value = userData.profileImageUrl;\r\n            profileImagePath.value = userData.profileImagePath || '';\r\n          }\r\n          \r\n          emailVerified.value = currentUser?.emailVerified || false;\r\n        } else if (currentUser) {\r\n          // Initialize user document if it doesn't exist\r\n          await setDoc(doc(db, 'users', userId.value), {\r\n            FirstName: '',\r\n            LastName: '',\r\n            Email: currentUser.email,\r\n            isOnline: true,\r\n            profileImageUrl: '',\r\n            profileImagePath: '',\r\n            createdAt: new Date()\r\n          });\r\n          \r\n          Email.value = currentUser.email;\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching user data:\", error);\r\n        errorMessage.value = \"Failed to fetch user data: \" + error.message;\r\n      }\r\n    };\r\n    \r\n    // Function to handle setting image from URL\r\n    const setImageFromUrl = async () => {\r\n      if (!imageUrlInput.value) return;\r\n      \r\n      try {\r\n        successMessage.value = '';\r\n        errorMessage.value = '';\r\n        isUploading.value = true;\r\n        \r\n        const auth = getAuth();\r\n        const currentUser = auth.currentUser;\r\n        \r\n        if (!currentUser) {\r\n          errorMessage.value = \"You must be logged in to update your profile\";\r\n          isUploading.value = false;\r\n          return;\r\n        }\r\n        \r\n        // Validate URL format\r\n        try {\r\n          new URL(imageUrlInput.value);\r\n        } catch (e) {\r\n          errorMessage.value = \"Please enter a valid URL\";\r\n          isUploading.value = false;\r\n          return;\r\n        }\r\n        \r\n        // If there's an existing image in storage, delete it\r\n        if (profileImagePath.value && profileImagePath.value.startsWith('profile_pictures/')) {\r\n          try {\r\n            const storage = getStorage();\r\n            const oldImageRef = storageRef(storage, profileImagePath.value);\r\n            await deleteObject(oldImageRef);\r\n          } catch (error) {\r\n            console.error(\"Failed to delete old image:\", error);\r\n            // Continue even if delete fails\r\n          }\r\n        }\r\n        \r\n        // Update Auth profile if available\r\n        try {\r\n          await updateAuthProfile(currentUser, {\r\n            photoURL: imageUrlInput.value\r\n          });\r\n        } catch (authError) {\r\n          console.error(\"Failed to update auth profile:\", authError);\r\n          // Continue even if this fails\r\n        }\r\n        \r\n        // Update user profile in Firestore\r\n        const db = getFirestore();\r\n        await updateDoc(doc(db, 'users', userId.value), {\r\n          profileImageUrl: imageUrlInput.value,\r\n          profileImagePath: 'external_url', // Mark as external URL\r\n          updatedAt: new Date()\r\n        });\r\n        \r\n        profileImageUrl.value = imageUrlInput.value;\r\n        profileImagePath.value = 'external_url';\r\n        successMessage.value = \"Profile picture updated successfully!\";\r\n        \r\n        // Clear the input\r\n        imageUrlInput.value = '';\r\n        \r\n      } catch (error) {\r\n        console.error(\"Set image URL error:\", error);\r\n        errorMessage.value = \"Failed to set profile picture: \" + error.message;\r\n      } finally {\r\n        isUploading.value = false;\r\n      }\r\n    };\r\n    \r\n    // Handle image error when loading invalid URLs\r\n    const handleImageError = (event) => {\r\n      if (profileImageUrl.value) {\r\n        errorMessage.value = \"Failed to load image. The URL may be invalid or inaccessible.\";\r\n        // Don't reset the profile image URL here, just show an error\r\n        isImageUrlInvalid.value = true;\r\n      }\r\n    };\r\n    \r\n    const handleImageUpload = async (event) => {\r\n      const file = event.target.files[0];\r\n      if (!file) return;\r\n      \r\n      const validTypes = ['image/jpeg', 'image/png', 'image/gif', 'image/webp'];\r\n      if (!validTypes.includes(file.type)) {\r\n        errorMessage.value = \"Please upload a valid image file (JPEG, PNG, GIF, WEBP)\";\r\n        return;\r\n      }\r\n      \r\n     \r\n      const maxSize = 5 * 1024 * 1024; // 5MB\r\n      if (file.size > maxSize) {\r\n        errorMessage.value = \"Image size must be less than 5MB\";\r\n        return;\r\n      }\r\n      \r\n      try {\r\n        isUploading.value = true;\r\n        uploadProgress.value = 0;\r\n        successMessage.value = '';\r\n        errorMessage.value = '';\r\n        \r\n        const storage = getStorage();\r\n        const auth = getAuth();\r\n        const currentUser = auth.currentUser;\r\n        \r\n        if (!currentUser) {\r\n          errorMessage.value = \"You must be logged in to upload an image\";\r\n          isUploading.value = false;\r\n          return;\r\n        }\r\n        \r\n        // Delete previous image if exists in storage\r\n        if (profileImagePath.value && profileImagePath.value.startsWith('profile_pictures/')) {\r\n          try {\r\n            const oldImageRef = storageRef(storage, profileImagePath.value);\r\n            await deleteObject(oldImageRef);\r\n          } catch (error) {\r\n            console.error(\"Failed to delete old image:\", error);\r\n            // Continue with upload even if delete fails\r\n          }\r\n        }\r\n        \r\n        // Create a unique filename with timestamp to prevent cache issues\r\n        const fileExtension = file.name.split('.').pop();\r\n        const filename = `${userId.value}_${Date.now()}.${fileExtension}`;\r\n        const storagePath = `profile_pictures/${filename}`;\r\n        \r\n        // Upload the file to Firebase Storage\r\n        const imageRef = storageRef(storage, storagePath);\r\n        const uploadTask = uploadBytesResumable(imageRef, file);\r\n        \r\n        uploadTask.on(\r\n          'state_changed', \r\n          (snapshot) => {\r\n            // Track upload progress\r\n            const progress = Math.round((snapshot.bytesTransferred / snapshot.totalBytes) * 100);\r\n            uploadProgress.value = progress;\r\n          },\r\n          (error) => {\r\n            console.error(\"Upload error:\", error);\r\n            errorMessage.value = \"Failed to upload image: \" + error.message;\r\n            isUploading.value = false;\r\n          },\r\n          async () => {\r\n            // Upload completed successfully\r\n            try {\r\n              const downloadUrl = await getDownloadURL(uploadTask.snapshot.ref);\r\n              \r\n              // Update user profile in Auth (if available)\r\n              try {\r\n                await updateAuthProfile(currentUser, {\r\n                  photoURL: downloadUrl\r\n                });\r\n              } catch (authError) {\r\n                console.error(\"Failed to update auth profile:\", authError);\r\n                // Continue even if this fails\r\n              }\r\n              \r\n              // Update user profile in Firestore\r\n              const db = getFirestore();\r\n              await updateDoc(doc(db, 'users', userId.value), {\r\n                profileImageUrl: downloadUrl,\r\n                profileImagePath: storagePath,\r\n                updatedAt: new Date()\r\n              });\r\n              \r\n              // Only update local state when upload is successful\r\n              profileImageUrl.value = downloadUrl;\r\n              profileImagePath.value = storagePath;\r\n              successMessage.value = \"Profile picture updated successfully!\";\r\n            } catch (finalError) {\r\n              console.error(\"Error in final upload step:\", finalError);\r\n              errorMessage.value = \"Failed to complete the upload: \" + finalError.message;\r\n            } finally {\r\n              isUploading.value = false;\r\n            }\r\n          }\r\n        );\r\n      } catch (error) {\r\n        console.error(\"Upload handler error:\", error);\r\n        errorMessage.value = \"Failed to process image: \" + error.message;\r\n        isUploading.value = false;\r\n      }\r\n    };\r\n    \r\n    const removeProfilePicture = async () => {\r\n      if (isUploading.value) return;\r\n      \r\n      try {\r\n        successMessage.value = '';\r\n        errorMessage.value = '';\r\n        \r\n        if (!profileImageUrl.value) {\r\n          errorMessage.value = \"No profile picture to remove\";\r\n          return;\r\n        }\r\n        \r\n        isUploading.value = true;\r\n        \r\n        const storage = getStorage();\r\n        const auth = getAuth();\r\n        const currentUser = auth.currentUser;\r\n        \r\n        // Delete the image from Firebase Storage if it's stored there\r\n        if (profileImagePath.value && profileImagePath.value.startsWith('profile_pictures/')) {\r\n          try {\r\n            const imageRef = storageRef(storage, profileImagePath.value);\r\n            await deleteObject(imageRef);\r\n          } catch (storageError) {\r\n            console.error(\"Error deleting storage image:\", storageError);\r\n            // Continue even if storage deletion fails\r\n          }\r\n        }\r\n        \r\n        // Update Auth profile if available\r\n        if (currentUser) {\r\n          try {\r\n            await updateAuthProfile(currentUser, {\r\n              photoURL: null\r\n            });\r\n          } catch (authError) {\r\n            console.error(\"Error updating auth profile:\", authError);\r\n            // Continue even if this fails\r\n          }\r\n        }\r\n        \r\n        // Update the user profile in Firestore\r\n        const db = getFirestore();\r\n        await updateDoc(doc(db, 'users', userId.value), {\r\n          profileImageUrl: '',\r\n          profileImagePath: '',\r\n          updatedAt: new Date()\r\n        });\r\n        \r\n        // Clear the local state\r\n        profileImageUrl.value = '';\r\n        profileImagePath.value = '';\r\n        successMessage.value = \"Profile picture removed successfully!\";\r\n      } catch (error) {\r\n        console.error(\"Remove profile picture error:\", error);\r\n        errorMessage.value = \"Failed to remove profile picture: \" + error.message;\r\n      } finally {\r\n        isUploading.value = false;\r\n      }\r\n    };\r\n    \r\n    // Validate an email address format\r\n    const isValidEmail = (email) => {\r\n      const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n      return emailRegex.test(email);\r\n    };\r\n    \r\n    const updateProfile = async () => {\r\n      if (isUploading.value) return;\r\n      \r\n      try {\r\n        successMessage.value = '';\r\n        errorMessage.value = '';\r\n        \r\n        const auth = getAuth();\r\n        const currentUser = auth.currentUser;\r\n        \r\n        if (!currentUser) {\r\n          errorMessage.value = \"You must be logged in to update your profile\";\r\n          return;\r\n        }\r\n        \r\n        \r\n        if (!FirstName.value.trim() || !LastName.value.trim()) {\r\n          errorMessage.value = \"First and last name are required\";\r\n          return;\r\n        }\r\n        \r\n        const db = getFirestore();\r\n        \r\n        // Update profile data in Firestore WITHOUT changing the profile image\r\n        const updateData = {\r\n          FirstName: FirstName.value.trim(),\r\n          LastName: LastName.value.trim(),\r\n          isOnline: true,\r\n          updatedAt: new Date()\r\n        };\r\n        \r\n        \r\n        await updateDoc(doc(db, 'users', userId.value), updateData);\r\n        \r\n        \r\n        if (oldPass.value) {\r\n          // Re-authenticate first (required for both password and email change)\r\n          try {\r\n            const credential = EmailAuthProvider.credential(currentUser.email, oldPass.value);\r\n            await reauthenticateWithCredential(currentUser, credential);\r\n            \r\n            // Handle password change if requested\r\n            if (newPass.value) {\r\n              if (newPass.value.length < 6) {\r\n                errorMessage.value = \"Password must be at least 6 characters\";\r\n                return;\r\n              }\r\n              await updatePassword(currentUser, newPass.value);\r\n              oldPass.value = '';\r\n              newPass.value = '';\r\n              successMessage.value = \"Password updated successfully!\";\r\n            }\r\n            \r\n            // Handle email change if requested\r\n            if (newEmail.value && newEmail.value !== currentUser.email) {\r\n              // Validate email format\r\n              if (!isValidEmail(newEmail.value)) {\r\n                errorMessage.value = \"Please enter a valid email address\";\r\n                return;\r\n              }\r\n              \r\n              // Update the email directly first - this will update auth credentials\r\n              await updateEmail(currentUser, newEmail.value);\r\n              \r\n              // Then send verification email\r\n              await sendEmailVerification(currentUser);\r\n              \r\n              // Then update Firestore immediately, so they match\r\n              await updateDoc(doc(db, 'users', userId.value), {\r\n                Email: newEmail.value,\r\n                updatedAt: new Date()\r\n              });\r\n              \r\n              // Update the local state\r\n              Email.value = newEmail.value;\r\n              \r\n              successMessage.value = successMessage.value \r\n                ? successMessage.value + \" Email updated successfully! Verification email sent.\"\r\n                : \"Email updated successfully! Verification email sent.\";\r\n              \r\n              newEmail.value = '';\r\n            }\r\n          } catch (authError) {\r\n            console.error(\"Authentication error:\", authError);\r\n            errorMessage.value = \"Authentication failed: \" + authError.message;\r\n            return;\r\n          }\r\n        } else if (newPass.value || newEmail.value) {\r\n          errorMessage.value = \"Current password is required to change password or email\";\r\n          return;\r\n        }\r\n        \r\n        if (!successMessage.value) {\r\n          successMessage.value = \"Profile updated successfully!\";\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Update profile error:\", error);\r\n        errorMessage.value = \"Failed to update profile: \" + error.message;\r\n      }\r\n    };\r\n    \r\n    // Initialize user data when component mounts\r\n    onMounted(async () => {\r\n      await fetchUserData();\r\n    });\r\n    \r\n    return {\r\n      FirstName,\r\n      LastName,\r\n      oldPass,\r\n      newPass,\r\n      newEmail,\r\n      userId,\r\n      successMessage,\r\n      errorMessage,\r\n      Email,\r\n      emailVerified,\r\n      isOnline,\r\n      profileImageUrl,\r\n      isUploading,\r\n      uploadProgress,\r\n      imageUrlInput,\r\n      updateProfile,\r\n      handleImageUpload,\r\n      removeProfilePicture,\r\n      setImageFromUrl,\r\n      handleImageError\r\n    };\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.profile-container {\r\n  max-width: 600px;\r\n  margin: 0 auto;\r\n  padding: 40px 20px;\r\n}\r\n\r\n.profile-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 30px;\r\n  padding-bottom: 15px;\r\n  border-bottom: 1px solid #e0e0e0;\r\n}\r\n\r\n.profile-header h2 {\r\n  margin: 0;\r\n  color: #333;\r\n  font-size: 24px;\r\n}\r\n\r\n.status-indicator {\r\n  display: flex;\r\n  align-items: center;\r\n  background-color: #f5f5f5;\r\n  padding: 8px 16px;\r\n  border-radius: 20px;\r\n}\r\n\r\n.status-label {\r\n  font-weight: 500;\r\n  margin-right: 8px;\r\n  color: #555;\r\n}\r\n\r\n.status-value {\r\n  font-weight: 600;\r\n  color: #999;\r\n}\r\n\r\n.status-value.online {\r\n  color: #4caf50;\r\n}\r\n\r\n.profile-form {\r\n  background-color: white;\r\n  border-radius: 12px;\r\n  padding: 30px;\r\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);\r\n}\r\n\r\n/* Profile Picture Styles */\r\n.profile-picture-section {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  margin-bottom: 30px;\r\n  padding-bottom: 20px;\r\n  border-bottom: 1px solid #f0f0f0;\r\n}\r\n\r\n.profile-picture-container {\r\n  position: relative;\r\n  width: 120px;\r\n  height: 120px;\r\n  border-radius: 50%;\r\n  overflow: hidden;\r\n  margin-bottom: 15px;\r\n  box-shadow: 0 3px 10px rgba(0, 0, 0, 0.1);\r\n  background-color: #f5f5f5;\r\n}\r\n\r\n.profile-picture {\r\n  width: 100%;\r\n  height: 100%;\r\n  object-fit: cover;\r\n  border-radius: 50%;\r\n}\r\n\r\n.upload-overlay {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  border-radius: 50%;\r\n}\r\n\r\n.upload-progress {\r\n  color: white;\r\n  font-weight: bold;\r\n  font-size: 18px;\r\n}\r\n\r\n.profile-picture-actions {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  gap: 12px;\r\n  width: 100%;\r\n  max-width: 300px;\r\n}\r\n\r\n/* Image URL input styles */\r\n.image-url-form {\r\n  display: flex;\r\n  width: 100%;\r\n  gap: 8px;\r\n}\r\n\r\n.image-url-input {\r\n  flex: 1;\r\n  padding: 8px 12px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 6px;\r\n  font-size: 14px;\r\n}\r\n\r\n.image-url-input:focus {\r\n  border-color: #1976d2;\r\n  outline: none;\r\n  box-shadow: 0 0 0 2px rgba(25, 118, 210, 0.1);\r\n}\r\n\r\n.url-button {\r\n  background-color: #2196f3;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 6px;\r\n  padding: 8px 12px;\r\n  font-weight: 500;\r\n  cursor: pointer;\r\n  transition: all 0.2s;\r\n}\r\n\r\n.url-button:hover:not(:disabled) {\r\n  background-color: #1e88e5;\r\n}\r\n\r\n.url-button:disabled {\r\n  opacity: 0.6;\r\n  cursor: not-allowed;\r\n}\r\n\r\n.or-divider {\r\n  color: #777;\r\n  margin: 4px 0;\r\n  font-size: 14px;\r\n}\r\n\r\n.file-input {\r\n  display: none;\r\n}\r\n\r\n.upload-button {\r\n  display: inline-flex;\r\n  align-items: center;\r\n  background-color: #1976d2;\r\n  color: white;\r\n  padding: 8px 16px;\r\n  border-radius: 6px;\r\n  cursor: pointer;\r\n  font-weight: 500;\r\n  transition: all 0.2s;\r\n}\r\n\r\n.upload-button:hover {\r\n  background-color: #1565c0;\r\n}\r\n\r\n.upload-icon {\r\n  margin-right: 6px;\r\n}\r\n\r\n.remove-button {\r\n  background-color: transparent;\r\n  border: 1px solid #f44336;\r\n  color: #f44336;\r\n  padding: 6px 12px;\r\n  border-radius: 6px;\r\n  cursor: pointer;\r\n  font-size: 12px;\r\n  transition: all 0.2s;\r\n}\r\n\r\n.remove-button:hover:not(:disabled) {\r\n  background-color: #ffebee;\r\n}\r\n\r\n.remove-button:disabled {\r\n  opacity: 0.6;\r\n  cursor: not-allowed;\r\n}\r\n\r\n.form-group {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.form-group label {\r\n  display: block;\r\n  margin-bottom: 8px;\r\n  font-weight: 500;\r\n  color: #333;\r\n}\r\n\r\n.form-group input {\r\n  width: 100%;\r\n  padding: 12px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 8px;\r\n  font-size: 14px;\r\n  transition: all 0.2s;\r\n}\r\n\r\n.form-group input:focus {\r\n  border-color: #1976d2;\r\n  outline: none;\r\n  box-shadow: 0 0 0 2px rgba(25, 118, 210, 0.1);\r\n}\r\n\r\n.email-help {\r\n  margin: 4px 0 8px;\r\n  font-size: 13px;\r\n  color: #666;\r\n  font-style: italic;\r\n}\r\n\r\n.form-actions {\r\n  margin-top: 30px;\r\n}\r\n\r\n.save-button {\r\n  background-color: #1976d2;\r\n  color: white;\r\n  border: none;\r\n  padding: 12px 24px;\r\n  border-radius: 6px;\r\n  font-weight: 500;\r\n  cursor: pointer;\r\n  transition: all 0.2s;\r\n}\r\n\r\n.save-button:hover:not(:disabled) {\r\n  background-color: #1565c0;\r\n  transform: translateY(-1px);\r\n}\r\n\r\n.save-button:disabled {\r\n  opacity: 0.7;\r\n  cursor: not-allowed;\r\n}\r\n\r\n.success-message {\r\n  margin-top: 20px;\r\n  padding: 12px;\r\n  background-color: #e8f5e9;\r\n  color: #2e7d32;\r\n  border-radius: 6px;\r\n  border-left: 4px solid #4caf50;\r\n}\r\n\r\n.error-message {\r\n  margin-top: 20px;\r\n  padding: 12px;\r\n  background-color: #ffebee;\r\n  color: #c62828;\r\n  border-radius: 6px;\r\n  border-left: 4px solid #f44336;\r\n}\r\n\r\n.navigation-links {\r\n  margin-top: 30px;\r\n  display: flex;\r\n  justify-content: center;\r\n}\r\n\r\n.back-link {\r\n  display: flex;\r\n  align-items: center;\r\n  text-decoration: none;\r\n  color: #1976d2;\r\n  font-weight: 500;\r\n  padding: 8px 16px;\r\n  border-radius: 6px;\r\n  transition: all 0.2s;\r\n}\r\n\r\n.back-link:hover {\r\n  background-color: #e3f2fd;\r\n}\r\n\r\n.back-icon {\r\n  margin-right: 8px;\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}