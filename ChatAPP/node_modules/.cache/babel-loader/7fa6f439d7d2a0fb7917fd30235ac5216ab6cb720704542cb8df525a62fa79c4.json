{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, vModelText as _vModelText, withDirectives as _withDirectives, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode } from \"vue\";\nvar _hoisted_1 = {\n  \"class\": \"profile-container\"\n};\nvar _hoisted_2 = {\n  \"class\": \"profile-header\"\n};\nvar _hoisted_3 = {\n  \"class\": \"status-indicator\"\n};\nvar _hoisted_4 = {\n  \"class\": \"profile-form\"\n};\nvar _hoisted_5 = {\n  \"class\": \"profile-picture-section\"\n};\nvar _hoisted_6 = {\n  \"class\": \"profile-picture-container\"\n};\nvar _hoisted_7 = [\"src\"];\nvar _hoisted_8 = {\n  key: 0,\n  \"class\": \"upload-overlay\"\n};\nvar _hoisted_9 = {\n  \"class\": \"upload-progress\"\n};\nvar _hoisted_10 = {\n  \"class\": \"profile-picture-actions\"\n};\nvar _hoisted_11 = {\n  \"class\": \"image-url-form\"\n};\nvar _hoisted_12 = [\"disabled\"];\nvar _hoisted_13 = [\"disabled\"];\nvar _hoisted_14 = {\n  \"class\": \"form-group\"\n};\nvar _hoisted_15 = [\"placeholder\"];\nvar _hoisted_16 = {\n  \"class\": \"form-group\"\n};\nvar _hoisted_17 = [\"placeholder\"];\nvar _hoisted_18 = {\n  \"class\": \"form-group\"\n};\nvar _hoisted_19 = {\n  \"class\": \"form-group\"\n};\nvar _hoisted_20 = {\n  \"class\": \"form-group\"\n};\nvar _hoisted_21 = [\"placeholder\"];\nvar _hoisted_22 = {\n  \"class\": \"form-actions\"\n};\nvar _hoisted_23 = [\"disabled\"];\nvar _hoisted_24 = {\n  key: 0,\n  \"class\": \"success-message\"\n};\nvar _hoisted_25 = {\n  key: 1,\n  \"class\": \"error-message\"\n};\nvar _hoisted_26 = {\n  \"class\": \"navigation-links\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_router_link = _resolveComponent(\"router-link\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_cache[12] || (_cache[12] = _createElementVNode(\"h2\", null, \"Profile Page\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_3, [_cache[11] || (_cache[11] = _createElementVNode(\"span\", {\n    \"class\": \"status-label\"\n  }, \"Status:\", -1 /* HOISTED */)), _createElementVNode(\"span\", {\n    \"class\": _normalizeClass([\"status-value\", {\n      'online': $setup.isOnline\n    }])\n  }, _toDisplayString($setup.isOnline ? 'Online' : 'Offline'), 3 /* TEXT, CLASS */)])]), _createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"img\", {\n    src: $setup.profileImageUrl || '/default-avatar.png',\n    alt: \"Profile Picture\",\n    \"class\": \"profile-picture\",\n    onError: _cache[0] || (_cache[0] = function () {\n      return $setup.handleImageError && $setup.handleImageError.apply($setup, arguments);\n    })\n  }, null, 40 /* PROPS, NEED_HYDRATION */, _hoisted_7), $setup.isUploading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_8, [_createElementVNode(\"div\", _hoisted_9, _toDisplayString($setup.uploadProgress) + \"%\", 1 /* TEXT */)])) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"div\", _hoisted_10, [_createCommentVNode(\" Image URL input form \"), _createElementVNode(\"div\", _hoisted_11, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = function ($event) {\n      return $setup.imageUrlInput = $event;\n    }),\n    placeholder: \"Enter image URL\",\n    \"class\": \"image-url-input\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.imageUrlInput]]), _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = function () {\n      return $setup.setImageFromUrl && $setup.setImageFromUrl.apply($setup, arguments);\n    }),\n    \"class\": \"url-button\",\n    disabled: $setup.isUploading || !$setup.imageUrlInput\n  }, \" Set Image \", 8 /* PROPS */, _hoisted_12)]), _cache[13] || (_cache[13] = _createElementVNode(\"div\", {\n    \"class\": \"or-divider\"\n  }, \"- OR -\", -1 /* HOISTED */)), _cache[14] || (_cache[14] = _createElementVNode(\"label\", {\n    \"for\": \"profilePicture\",\n    \"class\": \"upload-button\"\n  }, [_createElementVNode(\"span\", {\n    \"class\": \"upload-icon\"\n  }, \"üì∑\"), _createTextVNode(\" Choose Photo \")], -1 /* HOISTED */)), _createElementVNode(\"input\", {\n    id: \"profilePicture\",\n    type: \"file\",\n    accept: \"image/*\",\n    onChange: _cache[3] || (_cache[3] = function () {\n      return $setup.handleImageUpload && $setup.handleImageUpload.apply($setup, arguments);\n    }),\n    \"class\": \"file-input\"\n  }, null, 32 /* NEED_HYDRATION */), $setup.profileImageUrl ? (_openBlock(), _createElementBlock(\"button\", {\n    key: 0,\n    onClick: _cache[4] || (_cache[4] = function () {\n      return $setup.removeProfilePicture && $setup.removeProfilePicture.apply($setup, arguments);\n    }),\n    \"class\": \"remove-button\",\n    disabled: $setup.isUploading\n  }, \" Remove Photo \", 8 /* PROPS */, _hoisted_13)) : _createCommentVNode(\"v-if\", true)])]), _createElementVNode(\"div\", _hoisted_14, [_cache[15] || (_cache[15] = _createElementVNode(\"label\", {\n    \"for\": \"firstName\"\n  }, \"First Name\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    id: \"firstName\",\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[5] || (_cache[5] = function ($event) {\n      return $setup.FirstName = $event;\n    }),\n    placeholder: $setup.FirstName || 'Enter your first name',\n    required: \"\"\n  }, null, 8 /* PROPS */, _hoisted_15), [[_vModelText, $setup.FirstName]])]), _createElementVNode(\"div\", _hoisted_16, [_cache[16] || (_cache[16] = _createElementVNode(\"label\", {\n    \"for\": \"lastName\"\n  }, \"Last Name\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    id: \"lastName\",\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[6] || (_cache[6] = function ($event) {\n      return $setup.LastName = $event;\n    }),\n    placeholder: $setup.LastName || 'Enter your last name',\n    required: \"\"\n  }, null, 8 /* PROPS */, _hoisted_17), [[_vModelText, $setup.LastName]])]), _createElementVNode(\"div\", _hoisted_18, [_cache[17] || (_cache[17] = _createElementVNode(\"label\", {\n    \"for\": \"currentPassword\"\n  }, \"Current Password\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    id: \"currentPassword\",\n    type: \"password\",\n    \"onUpdate:modelValue\": _cache[7] || (_cache[7] = function ($event) {\n      return $setup.oldPass = $event;\n    }),\n    placeholder: \"Enter current password\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.oldPass]])]), _createElementVNode(\"div\", _hoisted_19, [_cache[18] || (_cache[18] = _createElementVNode(\"label\", {\n    \"for\": \"newPassword\"\n  }, \"New Password\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    id: \"newPassword\",\n    type: \"password\",\n    \"onUpdate:modelValue\": _cache[8] || (_cache[8] = function ($event) {\n      return $setup.newPass = $event;\n    }),\n    placeholder: \"Enter new password\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.newPass]])]), _createElementVNode(\"div\", _hoisted_20, [_cache[19] || (_cache[19] = _createElementVNode(\"label\", {\n    \"for\": \"newEmail\"\n  }, \"Email\", -1 /* HOISTED */)), _cache[20] || (_cache[20] = _createElementVNode(\"p\", {\n    \"class\": \"email-help\"\n  }, \"Type new email here if you want to change yours\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    id: \"newEmail\",\n    type: \"email\",\n    \"onUpdate:modelValue\": _cache[9] || (_cache[9] = function ($event) {\n      return $setup.newEmail = $event;\n    }),\n    placeholder: $setup.Email\n  }, null, 8 /* PROPS */, _hoisted_21), [[_vModelText, $setup.newEmail]])]), _createElementVNode(\"div\", _hoisted_22, [_createElementVNode(\"button\", {\n    onClick: _cache[10] || (_cache[10] = function () {\n      return $setup.updateProfile && $setup.updateProfile.apply($setup, arguments);\n    }),\n    \"class\": \"save-button\",\n    disabled: $setup.isUploading\n  }, \"Save Changes\", 8 /* PROPS */, _hoisted_23)]), $setup.successMessage ? (_openBlock(), _createElementBlock(\"div\", _hoisted_24, _toDisplayString($setup.successMessage), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), $setup.errorMessage ? (_openBlock(), _createElementBlock(\"div\", _hoisted_25, _toDisplayString($setup.errorMessage), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"div\", _hoisted_26, [_createVNode(_component_router_link, {\n    to: \"/forum/\".concat($setup.userId),\n    \"class\": \"back-link\"\n  }, {\n    \"default\": _withCtx(function () {\n      return _cache[21] || (_cache[21] = [_createElementVNode(\"span\", {\n        \"class\": \"back-icon\"\n      }, \"‚Üê\", -1 /* HOISTED */), _createTextVNode(\" Return to Discussions \")]);\n    }),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"to\"])])]);\n}","map":{"version":3,"names":["key","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","_normalizeClass","$setup","isOnline","_hoisted_4","_hoisted_5","_hoisted_6","src","profileImageUrl","alt","onError","_cache","handleImageError","apply","arguments","_hoisted_7","isUploading","_hoisted_8","_hoisted_9","_toDisplayString","uploadProgress","_createCommentVNode","_hoisted_10","_hoisted_11","type","$event","imageUrlInput","placeholder","onClick","setImageFromUrl","disabled","_hoisted_12","_createTextVNode","id","accept","onChange","handleImageUpload","removeProfilePicture","_hoisted_13","_hoisted_14","FirstName","required","_hoisted_15","_hoisted_16","LastName","_hoisted_17","_hoisted_18","oldPass","_hoisted_19","newPass","_hoisted_20","newEmail","Email","_hoisted_21","_hoisted_22","updateProfile","_hoisted_23","successMessage","_hoisted_24","errorMessage","_hoisted_25","_hoisted_26","_createVNode","_component_router_link","to","concat","userId","_withCtx","_"],"sources":["/workspaces/Mini_Projects_Js/ChatAPP/src/components/ProfilePage.vue"],"sourcesContent":["<template>\r\n  <div class=\"profile-container\">\r\n    <div class=\"profile-header\">\r\n      <h2>Profile Page</h2>\r\n      <div class=\"status-indicator\">\r\n        <span class=\"status-label\">Status:</span>\r\n        <span class=\"status-value\" :class=\"{ 'online': isOnline }\">\r\n          {{ isOnline ? 'Online' : 'Offline' }}\r\n        </span>\r\n      </div>\r\n    </div>\r\n    \r\n    <div class=\"profile-form\">\r\n      <div class=\"profile-picture-section\">\r\n        <div class=\"profile-picture-container\">\r\n          <img \r\n            :src=\"profileImageUrl || '/default-avatar.png'\" \r\n            alt=\"Profile Picture\" \r\n            class=\"profile-picture\"\r\n            @error=\"handleImageError\"\r\n          />\r\n          <div v-if=\"isUploading\" class=\"upload-overlay\">\r\n            <div class=\"upload-progress\">{{ uploadProgress }}%</div>\r\n          </div>\r\n        </div>\r\n        \r\n        <div class=\"profile-picture-actions\">\r\n          <!-- Image URL input form -->\r\n          <div class=\"image-url-form\">\r\n            <input \r\n              type=\"text\" \r\n              v-model=\"imageUrlInput\" \r\n              placeholder=\"Enter image URL\" \r\n              class=\"image-url-input\"\r\n            >\r\n            <button \r\n              @click=\"setImageFromUrl\" \r\n              class=\"url-button\"\r\n              :disabled=\"isUploading || !imageUrlInput\"\r\n            >\r\n              Set Image\r\n            </button>\r\n          </div>\r\n          \r\n          <div class=\"or-divider\">- OR -</div>\r\n          \r\n          <label for=\"profilePicture\" class=\"upload-button\">\r\n            <span class=\"upload-icon\">üì∑</span> Choose Photo\r\n          </label>\r\n          <input \r\n            id=\"profilePicture\" \r\n            type=\"file\" \r\n            accept=\"image/*\" \r\n            @change=\"handleImageUpload\" \r\n            class=\"file-input\"\r\n          >\r\n          <button \r\n            v-if=\"profileImageUrl\" \r\n            @click=\"removeProfilePicture\" \r\n            class=\"remove-button\"\r\n            :disabled=\"isUploading\"\r\n          >\r\n            Remove Photo\r\n          </button>\r\n        </div>\r\n      </div>\r\n      \r\n      <div class=\"form-group\">\r\n        <label for=\"firstName\">First Name</label>\r\n        <input\r\n          id=\"firstName\"\r\n          type=\"text\"\r\n          v-model=\"FirstName\"\r\n          :placeholder=\"FirstName || 'Enter your first name'\"\r\n          required\r\n        >\r\n      </div>\r\n      \r\n      <div class=\"form-group\">\r\n        <label for=\"lastName\">Last Name</label>\r\n        <input \r\n          id=\"lastName\"\r\n          type=\"text\" \r\n          v-model=\"LastName\" \r\n          :placeholder=\"LastName || 'Enter your last name'\"\r\n          required\r\n        >\r\n      </div>\r\n      \r\n      <div class=\"form-group\">\r\n        <label for=\"currentPassword\">Current Password</label>\r\n        <input \r\n          id=\"currentPassword\"\r\n          type=\"password\" \r\n          v-model=\"oldPass\" \r\n          placeholder=\"Enter current password\"\r\n        >\r\n      </div>\r\n      \r\n      <div class=\"form-group\">\r\n        <label for=\"newPassword\">New Password</label>\r\n        <input \r\n          id=\"newPassword\"\r\n          type=\"password\" \r\n          v-model=\"newPass\" \r\n          placeholder=\"Enter new password\"\r\n        >\r\n      </div>\r\n      \r\n      <div class=\"form-group\">\r\n        <label for=\"newEmail\">Email</label>\r\n        <p class=\"email-help\">Type new email here if you want to change yours</p>\r\n        <input\r\n          id=\"newEmail\" \r\n          type=\"email\" \r\n          v-model=\"newEmail\" \r\n          :placeholder=\"Email\"\r\n        >\r\n      </div>\r\n      \r\n      <div class=\"form-actions\">\r\n        <button @click=\"updateProfile\" class=\"save-button\" :disabled=\"isUploading\">Save Changes</button>\r\n      </div>\r\n      \r\n      \r\n      <div v-if=\"successMessage\" class=\"success-message\">{{ successMessage }}</div>\r\n      <div v-if=\"errorMessage\" class=\"error-message\">{{ errorMessage }}</div>\r\n    </div>\r\n    \r\n    <div class=\"navigation-links\">\r\n      <router-link :to=\"`/forum/${userId}`\" class=\"back-link\">\r\n        <span class=\"back-icon\">‚Üê</span> Return to Discussions\r\n      </router-link>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport {\r\n  getAuth,\r\n  EmailAuthProvider,\r\n  reauthenticateWithCredential,\r\n  updatePassword,\r\n  updateEmail,\r\n  sendEmailVerification,\r\n  updateProfile as updateAuthProfile\r\n} from \"firebase/auth\";\r\nimport { getFirestore, doc, getDoc, setDoc, updateDoc } from \"firebase/firestore\";\r\nimport { getStorage, ref as storageRef, uploadBytesResumable, getDownloadURL, deleteObject } from \"firebase/storage\";\r\nimport { onMounted, ref } from 'vue';\r\nimport { useRoute } from 'vue-router';\r\n\r\nexport default {\r\n  name: \"ProfilePage\",\r\n  setup() {\r\n    const route = useRoute();\r\n    const FirstName = ref('');\r\n    const LastName = ref('');\r\n    const oldPass = ref('');\r\n    const newPass = ref('');\r\n    const newEmail = ref('');\r\n    const userId = ref(null);\r\n    const successMessage = ref('');\r\n    const errorMessage = ref('');\r\n    const Email = ref('');\r\n    const emailVerified = ref(false);\r\n    const isOnline = ref(false);\r\n    const profileImageUrl = ref('');\r\n    const isUploading = ref(false);\r\n    const uploadProgress = ref(0);\r\n    const profileImagePath = ref('');\r\n    const imageUrlInput = ref('');\r\n    const isImageUrlInvalid = ref(false);\r\n    \r\n    const fetchUserData = async () => {\r\n      try {\r\n        const auth = getAuth();\r\n        const currentUser = auth.currentUser;\r\n        userId.value = currentUser?.uid || route.params.userid;\r\n        \r\n        if (!userId.value) {\r\n          errorMessage.value = \"No user ID found. Please log in.\";\r\n          return;\r\n        }\r\n        \r\n        const db = getFirestore();\r\n        const userDoc = await getDoc(doc(db, \"users\", userId.value));\r\n        \r\n        if (userDoc.exists()) {\r\n          const userData = userDoc.data();\r\n          FirstName.value = userData.FirstName || '';\r\n          LastName.value = userData.LastName || '';\r\n          Email.value = userData.Email || currentUser?.email || '';\r\n          isOnline.value = userData.isOnline || false;\r\n          \r\n          // Only set the profile image URL if it exists in the database\r\n          if (userData.profileImageUrl) {\r\n            profileImageUrl.value = userData.profileImageUrl;\r\n            profileImagePath.value = userData.profileImagePath || '';\r\n          }\r\n          \r\n          emailVerified.value = currentUser?.emailVerified || false;\r\n        } else if (currentUser) {\r\n          // Initialize user document if it doesn't exist\r\n          await setDoc(doc(db, 'users', userId.value), {\r\n            FirstName: '',\r\n            LastName: '',\r\n            Email: currentUser.email,\r\n            isOnline: true,\r\n            profileImageUrl: '',\r\n            profileImagePath: '',\r\n            createdAt: new Date()\r\n          });\r\n          \r\n          Email.value = currentUser.email;\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching user data:\", error);\r\n        errorMessage.value = \"Failed to fetch user data: \" + error.message;\r\n      }\r\n    };\r\n    \r\n    // Function to handle setting image from URL\r\n    const setImageFromUrl = async () => {\r\n      if (!imageUrlInput.value) return;\r\n      \r\n      try {\r\n        successMessage.value = '';\r\n        errorMessage.value = '';\r\n        isUploading.value = true;\r\n        \r\n        const auth = getAuth();\r\n        const currentUser = auth.currentUser;\r\n        \r\n        if (!currentUser) {\r\n          errorMessage.value = \"You must be logged in to update your profile\";\r\n          isUploading.value = false;\r\n          return;\r\n        }\r\n        \r\n        // Validate URL format\r\n        try {\r\n          new URL(imageUrlInput.value);\r\n        } catch (e) {\r\n          errorMessage.value = \"Please enter a valid URL\";\r\n          isUploading.value = false;\r\n          return;\r\n        }\r\n        \r\n        // If there's an existing image in storage, delete it\r\n        if (profileImagePath.value && profileImagePath.value.startsWith('profile_pictures/')) {\r\n          try {\r\n            const storage = getStorage();\r\n            const oldImageRef = storageRef(storage, profileImagePath.value);\r\n            await deleteObject(oldImageRef);\r\n          } catch (error) {\r\n            console.error(\"Failed to delete old image:\", error);\r\n            // Continue even if delete fails\r\n          }\r\n        }\r\n        \r\n        // Update Auth profile if available\r\n        try {\r\n          await updateAuthProfile(currentUser, {\r\n            photoURL: imageUrlInput.value\r\n          });\r\n        } catch (authError) {\r\n          console.error(\"Failed to update auth profile:\", authError);\r\n          // Continue even if this fails\r\n        }\r\n        \r\n        // Update user profile in Firestore\r\n        const db = getFirestore();\r\n        await updateDoc(doc(db, 'users', userId.value), {\r\n          profileImageUrl: imageUrlInput.value,\r\n          profileImagePath: 'external_url', // Mark as external URL\r\n          updatedAt: new Date()\r\n        });\r\n        \r\n        profileImageUrl.value = imageUrlInput.value;\r\n        profileImagePath.value = 'external_url';\r\n        successMessage.value = \"Profile picture updated successfully!\";\r\n        \r\n        // Clear the input\r\n        imageUrlInput.value = '';\r\n        \r\n      } catch (error) {\r\n        console.error(\"Set image URL error:\", error);\r\n        errorMessage.value = \"Failed to set profile picture: \" + error.message;\r\n      } finally {\r\n        isUploading.value = false;\r\n      }\r\n    };\r\n    \r\n    // Handle image error when loading invalid URLs\r\n    const handleImageError = (event) => {\r\n      if (profileImageUrl.value) {\r\n        errorMessage.value = \"Failed to load image. The URL may be invalid or inaccessible.\";\r\n        // Don't reset the profile image URL here, just show an error\r\n        isImageUrlInvalid.value = true;\r\n      }\r\n    };\r\n    \r\n    const handleImageUpload = async (event) => {\r\n      const file = event.target.files[0];\r\n      if (!file) return;\r\n      \r\n      const validTypes = ['image/jpeg', 'image/png', 'image/gif', 'image/webp'];\r\n      if (!validTypes.includes(file.type)) {\r\n        errorMessage.value = \"Please upload a valid image file (JPEG, PNG, GIF, WEBP)\";\r\n        return;\r\n      }\r\n      \r\n     \r\n      const maxSize = 5 * 1024 * 1024; // 5MB\r\n      if (file.size > maxSize) {\r\n        errorMessage.value = \"Image size must be less than 5MB\";\r\n        return;\r\n      }\r\n      \r\n      try {\r\n        isUploading.value = true;\r\n        uploadProgress.value = 0;\r\n        successMessage.value = '';\r\n        errorMessage.value = '';\r\n        \r\n        const storage = getStorage();\r\n        const auth = getAuth();\r\n        const currentUser = auth.currentUser;\r\n        \r\n        if (!currentUser) {\r\n          errorMessage.value = \"You must be logged in to upload an image\";\r\n          isUploading.value = false;\r\n          return;\r\n        }\r\n        \r\n        // Delete previous image if exists in storage\r\n        if (profileImagePath.value && profileImagePath.value.startsWith('profile_pictures/')) {\r\n          try {\r\n            const oldImageRef = storageRef(storage, profileImagePath.value);\r\n            await deleteObject(oldImageRef);\r\n          } catch (error) {\r\n            console.error(\"Failed to delete old image:\", error);\r\n            // Continue with upload even if delete fails\r\n          }\r\n        }\r\n        \r\n        // Create a unique filename with timestamp to prevent cache issues\r\n        const fileExtension = file.name.split('.').pop();\r\n        const filename = `${userId.value}_${Date.now()}.${fileExtension}`;\r\n        const storagePath = `profile_pictures/${filename}`;\r\n        \r\n        // Upload the file to Firebase Storage\r\n        const imageRef = storageRef(storage, storagePath);\r\n        const uploadTask = uploadBytesResumable(imageRef, file);\r\n        \r\n        uploadTask.on(\r\n          'state_changed', \r\n          (snapshot) => {\r\n            // Track upload progress\r\n            const progress = Math.round((snapshot.bytesTransferred / snapshot.totalBytes) * 100);\r\n            uploadProgress.value = progress;\r\n          },\r\n          (error) => {\r\n            console.error(\"Upload error:\", error);\r\n            errorMessage.value = \"Failed to upload image: \" + error.message;\r\n            isUploading.value = false;\r\n          },\r\n          async () => {\r\n            // Upload completed successfully\r\n            try {\r\n              const downloadUrl = await getDownloadURL(uploadTask.snapshot.ref);\r\n              \r\n              // Update user profile in Auth (if available)\r\n              try {\r\n                await updateAuthProfile(currentUser, {\r\n                  photoURL: downloadUrl\r\n                });\r\n              } catch (authError) {\r\n                console.error(\"Failed to update auth profile:\", authError);\r\n                // Continue even if this fails\r\n              }\r\n              \r\n              // Update user profile in Firestore\r\n              const db = getFirestore();\r\n              await updateDoc(doc(db, 'users', userId.value), {\r\n                profileImageUrl: downloadUrl,\r\n                profileImagePath: storagePath,\r\n                updatedAt: new Date()\r\n              });\r\n              \r\n              // Only update local state when upload is successful\r\n              profileImageUrl.value = downloadUrl;\r\n              profileImagePath.value = storagePath;\r\n              successMessage.value = \"Profile picture updated successfully!\";\r\n            } catch (finalError) {\r\n              console.error(\"Error in final upload step:\", finalError);\r\n              errorMessage.value = \"Failed to complete the upload: \" + finalError.message;\r\n            } finally {\r\n              isUploading.value = false;\r\n            }\r\n          }\r\n        );\r\n      } catch (error) {\r\n        console.error(\"Upload handler error:\", error);\r\n        errorMessage.value = \"Failed to process image: \" + error.message;\r\n        isUploading.value = false;\r\n      }\r\n    };\r\n    \r\n    const removeProfilePicture = async () => {\r\n      if (isUploading.value) return;\r\n      \r\n      try {\r\n        successMessage.value = '';\r\n        errorMessage.value = '';\r\n        \r\n        if (!profileImageUrl.value) {\r\n          errorMessage.value = \"No profile picture to remove\";\r\n          return;\r\n        }\r\n        \r\n        isUploading.value = true;\r\n        \r\n        const storage = getStorage();\r\n        const auth = getAuth();\r\n        const currentUser = auth.currentUser;\r\n        \r\n        // Delete the image from Firebase Storage if it's stored there\r\n        if (profileImagePath.value && profileImagePath.value.startsWith('profile_pictures/')) {\r\n          try {\r\n            const imageRef = storageRef(storage, profileImagePath.value);\r\n            await deleteObject(imageRef);\r\n          } catch (storageError) {\r\n            console.error(\"Error deleting storage image:\", storageError);\r\n            // Continue even if storage deletion fails\r\n          }\r\n        }\r\n        \r\n        // Update Auth profile if available\r\n        if (currentUser) {\r\n          try {\r\n            await updateAuthProfile(currentUser, {\r\n              photoURL: null\r\n            });\r\n          } catch (authError) {\r\n            console.error(\"Error updating auth profile:\", authError);\r\n            // Continue even if this fails\r\n          }\r\n        }\r\n        \r\n        // Update the user profile in Firestore\r\n        const db = getFirestore();\r\n        await updateDoc(doc(db, 'users', userId.value), {\r\n          profileImageUrl: '',\r\n          profileImagePath: '',\r\n          updatedAt: new Date()\r\n        });\r\n        \r\n        // Clear the local state\r\n        profileImageUrl.value = '';\r\n        profileImagePath.value = '';\r\n        successMessage.value = \"Profile picture removed successfully!\";\r\n      } catch (error) {\r\n        console.error(\"Remove profile picture error:\", error);\r\n        errorMessage.value = \"Failed to remove profile picture: \" + error.message;\r\n      } finally {\r\n        isUploading.value = false;\r\n      }\r\n    };\r\n    \r\n    // Validate an email address format\r\n    const isValidEmail = (email) => {\r\n      const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n      return emailRegex.test(email);\r\n    };\r\n    \r\n    const updateProfile = async () => {\r\n      if (isUploading.value) return;\r\n      \r\n      try {\r\n        successMessage.value = '';\r\n        errorMessage.value = '';\r\n        \r\n        const auth = getAuth();\r\n        const currentUser = auth.currentUser;\r\n        \r\n        if (!currentUser) {\r\n          errorMessage.value = \"You must be logged in to update your profile\";\r\n          return;\r\n        }\r\n        \r\n        \r\n        if (!FirstName.value.trim() || !LastName.value.trim()) {\r\n          errorMessage.value = \"First and last name are required\";\r\n          return;\r\n        }\r\n        \r\n        const db = getFirestore();\r\n        \r\n        // Update profile data in Firestore WITHOUT changing the profile image\r\n        const updateData = {\r\n          FirstName: FirstName.value.trim(),\r\n          LastName: LastName.value.trim(),\r\n          isOnline: true,\r\n          updatedAt: new Date()\r\n        };\r\n        \r\n        \r\n        await updateDoc(doc(db, 'users', userId.value), updateData);\r\n        \r\n        \r\n        if (oldPass.value) {\r\n          // Re-authenticate first (required for both password and email change)\r\n          try {\r\n            const credential = EmailAuthProvider.credential(currentUser.email, oldPass.value);\r\n            await reauthenticateWithCredential(currentUser, credential);\r\n            \r\n            // Handle password change if requested\r\n            if (newPass.value) {\r\n              if (newPass.value.length < 6) {\r\n                errorMessage.value = \"Password must be at least 6 characters\";\r\n                return;\r\n              }\r\n              await updatePassword(currentUser, newPass.value);\r\n              oldPass.value = '';\r\n              newPass.value = '';\r\n              successMessage.value = \"Password updated successfully!\";\r\n            }\r\n            \r\n            // Handle email change if requested\r\n            if (newEmail.value && newEmail.value !== currentUser.email) {\r\n              // Validate email format\r\n              if (!isValidEmail(newEmail.value)) {\r\n                errorMessage.value = \"Please enter a valid email address\";\r\n                return;\r\n              }\r\n              \r\n              // Update the email directly first - this will update auth credentials\r\n              await updateEmail(currentUser, newEmail.value);\r\n              \r\n              // Then send verification email\r\n              await sendEmailVerification(currentUser);\r\n              \r\n              // Then update Firestore immediately, so they match\r\n              await updateDoc(doc(db, 'users', userId.value), {\r\n                Email: newEmail.value,\r\n                updatedAt: new Date()\r\n              });\r\n              \r\n              // Update the local state\r\n              Email.value = newEmail.value;\r\n              \r\n              successMessage.value = successMessage.value \r\n                ? successMessage.value + \" Email updated successfully! Verification email sent.\"\r\n                : \"Email updated successfully! Verification email sent.\";\r\n              \r\n              newEmail.value = '';\r\n            }\r\n          } catch (authError) {\r\n            console.error(\"Authentication error:\", authError);\r\n            errorMessage.value = \"Authentication failed: \" + authError.message;\r\n            return;\r\n          }\r\n        } else if (newPass.value || newEmail.value) {\r\n          errorMessage.value = \"Current password is required to change password or email\";\r\n          return;\r\n        }\r\n        \r\n        if (!successMessage.value) {\r\n          successMessage.value = \"Profile updated successfully!\";\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Update profile error:\", error);\r\n        errorMessage.value = \"Failed to update profile: \" + error.message;\r\n      }\r\n    };\r\n    \r\n    // Initialize user data when component mounts\r\n    onMounted(async () => {\r\n      await fetchUserData();\r\n    });\r\n    \r\n    return {\r\n      FirstName,\r\n      LastName,\r\n      oldPass,\r\n      newPass,\r\n      newEmail,\r\n      userId,\r\n      successMessage,\r\n      errorMessage,\r\n      Email,\r\n      emailVerified,\r\n      isOnline,\r\n      profileImageUrl,\r\n      isUploading,\r\n      uploadProgress,\r\n      imageUrlInput,\r\n      updateProfile,\r\n      handleImageUpload,\r\n      removeProfilePicture,\r\n      setImageFromUrl,\r\n      handleImageError\r\n    };\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.profile-container {\r\n  max-width: 600px;\r\n  margin: 0 auto;\r\n  padding: 40px 20px;\r\n}\r\n\r\n.profile-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 30px;\r\n  padding-bottom: 15px;\r\n  border-bottom: 1px solid #e0e0e0;\r\n}\r\n\r\n.profile-header h2 {\r\n  margin: 0;\r\n  color: #333;\r\n  font-size: 24px;\r\n}\r\n\r\n.status-indicator {\r\n  display: flex;\r\n  align-items: center;\r\n  background-color: #f5f5f5;\r\n  padding: 8px 16px;\r\n  border-radius: 20px;\r\n}\r\n\r\n.status-label {\r\n  font-weight: 500;\r\n  margin-right: 8px;\r\n  color: #555;\r\n}\r\n\r\n.status-value {\r\n  font-weight: 600;\r\n  color: #999;\r\n}\r\n\r\n.status-value.online {\r\n  color: #4caf50;\r\n}\r\n\r\n.profile-form {\r\n  background-color: white;\r\n  border-radius: 12px;\r\n  padding: 30px;\r\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);\r\n}\r\n\r\n/* Profile Picture Styles */\r\n.profile-picture-section {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  margin-bottom: 30px;\r\n  padding-bottom: 20px;\r\n  border-bottom: 1px solid #f0f0f0;\r\n}\r\n\r\n.profile-picture-container {\r\n  position: relative;\r\n  width: 120px;\r\n  height: 120px;\r\n  border-radius: 50%;\r\n  overflow: hidden;\r\n  margin-bottom: 15px;\r\n  box-shadow: 0 3px 10px rgba(0, 0, 0, 0.1);\r\n  background-color: #f5f5f5;\r\n}\r\n\r\n.profile-picture {\r\n  width: 100%;\r\n  height: 100%;\r\n  object-fit: cover;\r\n  border-radius: 50%;\r\n}\r\n\r\n.upload-overlay {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  border-radius: 50%;\r\n}\r\n\r\n.upload-progress {\r\n  color: white;\r\n  font-weight: bold;\r\n  font-size: 18px;\r\n}\r\n\r\n.profile-picture-actions {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  gap: 12px;\r\n  width: 100%;\r\n  max-width: 300px;\r\n}\r\n\r\n/* Image URL input styles */\r\n.image-url-form {\r\n  display: flex;\r\n  width: 100%;\r\n  gap: 8px;\r\n}\r\n\r\n.image-url-input {\r\n  flex: 1;\r\n  padding: 8px 12px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 6px;\r\n  font-size: 14px;\r\n}\r\n\r\n.image-url-input:focus {\r\n  border-color: #1976d2;\r\n  outline: none;\r\n  box-shadow: 0 0 0 2px rgba(25, 118, 210, 0.1);\r\n}\r\n\r\n.url-button {\r\n  background-color: #2196f3;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 6px;\r\n  padding: 8px 12px;\r\n  font-weight: 500;\r\n  cursor: pointer;\r\n  transition: all 0.2s;\r\n}\r\n\r\n.url-button:hover:not(:disabled) {\r\n  background-color: #1e88e5;\r\n}\r\n\r\n.url-button:disabled {\r\n  opacity: 0.6;\r\n  cursor: not-allowed;\r\n}\r\n\r\n.or-divider {\r\n  color: #777;\r\n  margin: 4px 0;\r\n  font-size: 14px;\r\n}\r\n\r\n.file-input {\r\n  display: none;\r\n}\r\n\r\n.upload-button {\r\n  display: inline-flex;\r\n  align-items: center;\r\n  background-color: #1976d2;\r\n  color: white;\r\n  padding: 8px 16px;\r\n  border-radius: 6px;\r\n  cursor: pointer;\r\n  font-weight: 500;\r\n  transition: all 0.2s;\r\n}\r\n\r\n.upload-button:hover {\r\n  background-color: #1565c0;\r\n}\r\n\r\n.upload-icon {\r\n  margin-right: 6px;\r\n}\r\n\r\n.remove-button {\r\n  background-color: transparent;\r\n  border: 1px solid #f44336;\r\n  color: #f44336;\r\n  padding: 6px 12px;\r\n  border-radius: 6px;\r\n  cursor: pointer;\r\n  font-size: 12px;\r\n  transition: all 0.2s;\r\n}\r\n\r\n.remove-button:hover:not(:disabled) {\r\n  background-color: #ffebee;\r\n}\r\n\r\n.remove-button:disabled {\r\n  opacity: 0.6;\r\n  cursor: not-allowed;\r\n}\r\n\r\n.form-group {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.form-group label {\r\n  display: block;\r\n  margin-bottom: 8px;\r\n  font-weight: 500;\r\n  color: #333;\r\n}\r\n\r\n.form-group input {\r\n  width: 100%;\r\n  padding: 12px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 8px;\r\n  font-size: 14px;\r\n  transition: all 0.2s;\r\n}\r\n\r\n.form-group input:focus {\r\n  border-color: #1976d2;\r\n  outline: none;\r\n  box-shadow: 0 0 0 2px rgba(25, 118, 210, 0.1);\r\n}\r\n\r\n.email-help {\r\n  margin: 4px 0 8px;\r\n  font-size: 13px;\r\n  color: #666;\r\n  font-style: italic;\r\n}\r\n\r\n.form-actions {\r\n  margin-top: 30px;\r\n}\r\n\r\n.save-button {\r\n  background-color: #1976d2;\r\n  color: white;\r\n  border: none;\r\n  padding: 12px 24px;\r\n  border-radius: 6px;\r\n  font-weight: 500;\r\n  cursor: pointer;\r\n  transition: all 0.2s;\r\n}\r\n\r\n.save-button:hover:not(:disabled) {\r\n  background-color: #1565c0;\r\n  transform: translateY(-1px);\r\n}\r\n\r\n.save-button:disabled {\r\n  opacity: 0.7;\r\n  cursor: not-allowed;\r\n}\r\n\r\n.success-message {\r\n  margin-top: 20px;\r\n  padding: 12px;\r\n  background-color: #e8f5e9;\r\n  color: #2e7d32;\r\n  border-radius: 6px;\r\n  border-left: 4px solid #4caf50;\r\n}\r\n\r\n.error-message {\r\n  margin-top: 20px;\r\n  padding: 12px;\r\n  background-color: #ffebee;\r\n  color: #c62828;\r\n  border-radius: 6px;\r\n  border-left: 4px solid #f44336;\r\n}\r\n\r\n.navigation-links {\r\n  margin-top: 30px;\r\n  display: flex;\r\n  justify-content: center;\r\n}\r\n\r\n.back-link {\r\n  display: flex;\r\n  align-items: center;\r\n  text-decoration: none;\r\n  color: #1976d2;\r\n  font-weight: 500;\r\n  padding: 8px 16px;\r\n  border-radius: 6px;\r\n  transition: all 0.2s;\r\n}\r\n\r\n.back-link:hover {\r\n  background-color: #e3f2fd;\r\n}\r\n\r\n.back-icon {\r\n  margin-right: 8px;\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}