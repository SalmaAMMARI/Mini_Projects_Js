{"ast":null,"code":"import _regeneratorRuntime from \"/workspaces/Mini_Projects_Js/Forum_App/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/workspaces/Mini_Projects_Js/Forum_App/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.string.trim.js\";\nimport { ref } from 'vue';\nimport { getAuth } from 'firebase/auth';\nimport { getFirestore, collection, addDoc, serverTimestamp, doc, getDoc } from 'firebase/firestore';\nimport { useRoute } from 'vue-router';\nexport default {\n  name: 'NewResponseForm',\n  props: {\n    discussionOwnerId: {\n      // Add this prop to receive discussion owner's ID\n      type: String,\n      required: true\n    }\n  },\n  emits: ['response-added'],\n  setup: function setup(props, _ref) {\n    var emit = _ref.emit;\n    var contenu = ref('');\n    var db = getFirestore();\n    var auth = getAuth();\n    var route = useRoute();\n    var isSubmitting = ref(false);\n    var error = ref(null);\n    var addResponse = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var user, responseRef;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              user = auth.currentUser;\n              if (!(!user || !contenu.value.trim())) {\n                _context.next = 3;\n                break;\n              }\n              return _context.abrupt(\"return\");\n            case 3:\n              isSubmitting.value = true;\n              error.value = null;\n              _context.prev = 5;\n              _context.next = 8;\n              return addDoc(collection(db, 'responses'), {\n                contenu: contenu.value,\n                discussionId: route.params.id,\n                authorId: user.uid,\n                authorName: user.displayName || 'Anonymous',\n                // Added author name\n                createdAt: serverTimestamp()\n              });\n            case 8:\n              responseRef = _context.sent;\n              if (!(user.uid !== props.discussionOwnerId)) {\n                _context.next = 12;\n                break;\n              }\n              _context.next = 12;\n              return createNotification(props.discussionOwnerId, user, route.params.id, responseRef.id);\n            case 12:\n              // 3. Clear form and emit event\n              contenu.value = '';\n              emit('response-added');\n              _context.next = 20;\n              break;\n            case 16:\n              _context.prev = 16;\n              _context.t0 = _context[\"catch\"](5);\n              console.error('Error adding response:', _context.t0);\n              error.value = 'Failed to post response. Please try again.';\n            case 20:\n              _context.prev = 20;\n              isSubmitting.value = false;\n              return _context.finish(20);\n            case 23:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[5, 16, 20, 23]]);\n      }));\n      return function addResponse() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    // Notification creation function\n    var createNotification = /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(ownerId, currentUser, discussionId, replyId) {\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return addDoc(collection(db, 'notifications'), {\n                userId: ownerId,\n                type: 'reply',\n                read: false,\n                createdAt: serverTimestamp(),\n                data: {\n                  discussionId: discussionId,\n                  replyId: replyId,\n                  replierName: currentUser.displayName || 'Anonymous',\n                  replierId: currentUser.uid,\n                  contentPreview: contenu.value.substring(0, 100) // First 100 chars of reply\n                }\n              });\n            case 3:\n              _context2.next = 8;\n              break;\n            case 5:\n              _context2.prev = 5;\n              _context2.t0 = _context2[\"catch\"](0);\n              console.error('Error creating notification:', _context2.t0);\n              // Don't block the response if notification fails\n            case 8:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, null, [[0, 5]]);\n      }));\n      return function createNotification(_x, _x2, _x3, _x4) {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n    return {\n      contenu: contenu,\n      addResponse: addResponse,\n      isSubmitting: isSubmitting,\n      error: error\n    };\n  }\n};","map":{"version":3,"names":["ref","getAuth","getFirestore","collection","addDoc","serverTimestamp","doc","getDoc","useRoute","name","props","discussionOwnerId","type","String","required","emits","setup","_ref","emit","contenu","db","auth","route","isSubmitting","error","addResponse","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","user","responseRef","wrap","_callee$","_context","prev","next","currentUser","value","trim","abrupt","discussionId","params","id","authorId","uid","authorName","displayName","createdAt","sent","createNotification","t0","console","finish","stop","apply","arguments","_ref3","_callee2","ownerId","replyId","_callee2$","_context2","userId","read","data","replierName","replierId","contentPreview","substring","_x","_x2","_x3","_x4"],"sources":["/workspaces/Mini_Projects_Js/Forum_App/src/components/ResponseForm.vue"],"sourcesContent":["<template>\r\n  <form @submit.prevent=\"addResponse\" style=\"margin-top: 1.5rem;\">\r\n    <textarea\r\n      v-model=\"contenu\"\r\n      placeholder=\"Write your response...\"\r\n      style=\"width: 100%; padding: 0.75rem; border-radius: 0.5rem; border: 1px solid #ccc;\"\r\n    ></textarea>\r\n    <button\r\n      type=\"submit\"\r\n      :disabled=\"isSubmitting\"\r\n      style=\"margin-top: 0.5rem; padding: 0.5rem 1rem; background-color: #007BFF; color: white; border: none; border-radius: 0.5rem; cursor: pointer;\"\r\n    >\r\n      {{ isSubmitting ? 'Posting...' : 'Post Response' }}\r\n    </button>\r\n    <p v-if=\"error\" style=\"color: red; margin-top: 0.5rem;\">{{ error }}</p>\r\n  </form>\r\n</template>\r\n\r\n<script>\r\nimport { ref } from 'vue'\r\nimport { getAuth } from 'firebase/auth'\r\nimport { getFirestore, collection, addDoc, serverTimestamp, doc, getDoc } from 'firebase/firestore'\r\nimport { useRoute } from 'vue-router'\r\n\r\nexport default {\r\n  name: 'NewResponseForm',\r\n  props: {\r\n    discussionOwnerId: {  // Add this prop to receive discussion owner's ID\r\n      type: String,\r\n      required: true\r\n    }\r\n  },\r\n  emits: ['response-added'],\r\n  setup(props, { emit }) {\r\n    const contenu = ref('')\r\n    const db = getFirestore()\r\n    const auth = getAuth()\r\n    const route = useRoute()\r\n    const isSubmitting = ref(false)\r\n    const error = ref(null)\r\n\r\n    const addResponse = async () => {\r\n      const user = auth.currentUser\r\n      if (!user || !contenu.value.trim()) return\r\n\r\n      isSubmitting.value = true\r\n      error.value = null\r\n\r\n      try {\r\n        // 1. Add the response to Firestore\r\n        const responseRef = await addDoc(collection(db, 'responses'), {\r\n          contenu: contenu.value,\r\n          discussionId: route.params.id,\r\n          authorId: user.uid,\r\n          authorName: user.displayName || 'Anonymous', // Added author name\r\n          createdAt: serverTimestamp()\r\n        })\r\n\r\n        // 2. Send notification (only if not replying to yourself)\r\n        if (user.uid !== props.discussionOwnerId) {\r\n          await createNotification(\r\n            props.discussionOwnerId,\r\n            user,\r\n            route.params.id,\r\n            responseRef.id\r\n          )\r\n        }\r\n\r\n        // 3. Clear form and emit event\r\n        contenu.value = ''\r\n        emit('response-added')\r\n      } catch (err) {\r\n        console.error('Error adding response:', err)\r\n        error.value = 'Failed to post response. Please try again.'\r\n      } finally {\r\n        isSubmitting.value = false\r\n      }\r\n    }\r\n\r\n    // Notification creation function\r\n    const createNotification = async (ownerId, currentUser, discussionId, replyId) => {\r\n      try {\r\n        await addDoc(collection(db, 'notifications'), {\r\n          userId: ownerId,\r\n          type: 'reply',\r\n          read: false,\r\n          createdAt: serverTimestamp(),\r\n          data: {\r\n            discussionId: discussionId,\r\n            replyId: replyId,\r\n            replierName: currentUser.displayName || 'Anonymous',\r\n            replierId: currentUser.uid,\r\n            contentPreview: contenu.value.substring(0, 100) // First 100 chars of reply\r\n          }\r\n        })\r\n      } catch (err) {\r\n        console.error('Error creating notification:', err)\r\n        // Don't block the response if notification fails\r\n      }\r\n    }\r\n\r\n    return {\r\n      contenu,\r\n      addResponse,\r\n      isSubmitting,\r\n      error\r\n    }\r\n  }\r\n}\r\n</script>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}