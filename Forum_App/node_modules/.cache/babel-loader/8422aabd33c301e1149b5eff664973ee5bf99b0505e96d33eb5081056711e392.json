{"ast":null,"code":"import { createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, renderList as _renderList, Fragment as _Fragment, normalizeClass as _normalizeClass, withModifiers as _withModifiers, normalizeStyle as _normalizeStyle, createBlock as _createBlock } from \"vue\";\nvar _hoisted_1 = {\n  \"class\": \"navbar\"\n};\nvar _hoisted_2 = {\n  \"class\": \"container\"\n};\nvar _hoisted_3 = {\n  \"class\": \"nav-right\"\n};\nvar _hoisted_4 = {\n  key: 0,\n  \"class\": \"notification-badge\"\n};\nvar _hoisted_5 = {\n  key: 1,\n  \"class\": \"notification-dropdown\"\n};\nvar _hoisted_6 = {\n  \"class\": \"notification-header\"\n};\nvar _hoisted_7 = {\n  key: 0,\n  \"class\": \"loading\"\n};\nvar _hoisted_8 = {\n  key: 1\n};\nvar _hoisted_9 = {\n  key: 0,\n  \"class\": \"empty\"\n};\nvar _hoisted_10 = [\"onClick\"];\nvar _hoisted_11 = [\"src\"];\nvar _hoisted_12 = {\n  \"class\": \"content\"\n};\nvar _hoisted_13 = {\n  key: 0,\n  \"class\": \"profile-dropdown\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_router_link = _resolveComponent(\"router-link\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createVNode(_component_router_link, {\n    to: \"/forum\",\n    \"class\": \"logo\"\n  }, {\n    \"default\": _withCtx(function () {\n      return _cache[5] || (_cache[5] = [_createElementVNode(\"i\", {\n        \"class\": \"fas fa-comments\"\n      }, null, -1 /* HOISTED */), _createTextVNode(\" Forum \")]);\n    }),\n    _: 1 /* STABLE */\n  }), _createElementVNode(\"div\", _hoisted_3, [_createCommentVNode(\" Notifications Dropdown \"), $setup.user ? (_openBlock(), _createElementBlock(\"div\", {\n    key: 0,\n    \"class\": \"notification-icon\",\n    onClick: _cache[2] || (_cache[2] = _withModifiers(function () {\n      return $setup.toggleNotifications && $setup.toggleNotifications.apply($setup, arguments);\n    }, [\"stop\"]))\n  }, [_cache[8] || (_cache[8] = _createElementVNode(\"i\", {\n    \"class\": \"fas fa-bell\"\n  }, null, -1 /* HOISTED */)), $setup.unreadCount > 0 ? (_openBlock(), _createElementBlock(\"span\", _hoisted_4, _toDisplayString($setup.unreadCount), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), $setup.showNotifications ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, [_createElementVNode(\"div\", _hoisted_6, [_cache[6] || (_cache[6] = _createElementVNode(\"h4\", null, \"Notifications\", -1 /* HOISTED */)), $setup.unreadCount > 0 ? (_openBlock(), _createElementBlock(\"button\", {\n    key: 0,\n    onClick: _cache[0] || (_cache[0] = function () {\n      return $setup.markAllAsRead && $setup.markAllAsRead.apply($setup, arguments);\n    })\n  }, \" Mark all as read \")) : _createCommentVNode(\"v-if\", true)]), $setup.loadingNotifications ? (_openBlock(), _createElementBlock(\"div\", _hoisted_7, _cache[7] || (_cache[7] = [_createElementVNode(\"i\", {\n    \"class\": \"fas fa-spinner fa-spin\"\n  }, null, -1 /* HOISTED */), _createTextVNode(\" Loading... \")]))) : (_openBlock(), _createElementBlock(\"div\", _hoisted_8, [$setup.notifications.length === 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_9, \" No new notifications \")) : _createCommentVNode(\"v-if\", true), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.notifications, function (notification) {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: notification.id,\n      \"class\": _normalizeClass([\"notification-item\", {\n        unread: !notification.read\n      }]),\n      onClick: function onClick($event) {\n        return $setup.handleNotificationClick(notification);\n      }\n    }, [_createElementVNode(\"img\", {\n      src: notification.senderAvatar || $setup.defaultAvatar,\n      \"class\": \"avatar\",\n      onError: _cache[1] || (_cache[1] = function () {\n        return $setup.handleAvatarError && $setup.handleAvatarError.apply($setup, arguments);\n      })\n    }, null, 40 /* PROPS, NEED_HYDRATION */, _hoisted_11), _createElementVNode(\"div\", _hoisted_12, [_createElementVNode(\"p\", null, [_createElementVNode(\"strong\", null, _toDisplayString(notification.senderName), 1 /* TEXT */), _createTextVNode(\" \" + _toDisplayString(notification.message), 1 /* TEXT */)]), _createElementVNode(\"small\", null, _toDisplayString($setup.formatTime(notification.timestamp)), 1 /* TEXT */)])], 10 /* CLASS, PROPS */, _hoisted_10);\n  }), 128 /* KEYED_FRAGMENT */))]))])) : _createCommentVNode(\"v-if\", true)])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" User Profile \"), $setup.user ? (_openBlock(), _createElementBlock(\"div\", {\n    key: 1,\n    \"class\": \"user-profile\",\n    onClick: _cache[4] || (_cache[4] = _withModifiers(function () {\n      return $setup.toggleProfileDropdown && $setup.toggleProfileDropdown.apply($setup, arguments);\n    }, [\"stop\"]))\n  }, [_createCommentVNode(\" Avatar with user initials and dynamic background color \"), _createElementVNode(\"div\", {\n    \"class\": \"initials-avatar\",\n    style: _normalizeStyle({\n      backgroundColor: $setup.userAvatarColor,\n      color: '#ffffff'\n    })\n  }, _toDisplayString($setup.userInitials), 5 /* TEXT, STYLE */), _createElementVNode(\"span\", null, _toDisplayString($setup.userDisplayName), 1 /* TEXT */), _cache[11] || (_cache[11] = _createElementVNode(\"i\", {\n    \"class\": \"fas fa-caret-down\"\n  }, null, -1 /* HOISTED */)), $setup.showProfileDropdown ? (_openBlock(), _createElementBlock(\"div\", _hoisted_13, [_createVNode(_component_router_link, {\n    to: \"/profile\",\n    \"class\": \"dropdown-item\"\n  }, {\n    \"default\": _withCtx(function () {\n      return _cache[9] || (_cache[9] = [_createElementVNode(\"i\", {\n        \"class\": \"fas fa-user\"\n      }, null, -1 /* HOISTED */), _createTextVNode(\" Profile \")]);\n    }),\n    _: 1 /* STABLE */\n  }), _createElementVNode(\"div\", {\n    \"class\": \"dropdown-item\",\n    onClick: _cache[3] || (_cache[3] = function () {\n      return $setup.logout && $setup.logout.apply($setup, arguments);\n    })\n  }, _cache[10] || (_cache[10] = [_createElementVNode(\"i\", {\n    \"class\": \"fas fa-sign-out-alt\"\n  }, null, -1 /* HOISTED */), _createTextVNode(\" Logout \")]))])) : _createCommentVNode(\"v-if\", true)])) : (_openBlock(), _createBlock(_component_router_link, {\n    key: 2,\n    to: \"/login\",\n    \"class\": \"login-btn\"\n  }, {\n    \"default\": _withCtx(function () {\n      return _cache[12] || (_cache[12] = [_createElementVNode(\"i\", {\n        \"class\": \"fas fa-sign-in-alt\"\n      }, null, -1 /* HOISTED */), _createTextVNode(\" Login \")]);\n    }),\n    _: 1 /* STABLE */\n  }))])])]);\n}","map":{"version":3,"names":["key","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_createVNode","_component_router_link","to","_withCtx","_cache","_createTextVNode","_","_hoisted_3","_createCommentVNode","$setup","user","onClick","_withModifiers","toggleNotifications","apply","arguments","unreadCount","_hoisted_4","_toDisplayString","showNotifications","_hoisted_5","_hoisted_6","markAllAsRead","loadingNotifications","_hoisted_7","_hoisted_8","notifications","length","_hoisted_9","_Fragment","_renderList","notification","id","_normalizeClass","unread","read","$event","handleNotificationClick","src","senderAvatar","defaultAvatar","onError","handleAvatarError","_hoisted_11","_hoisted_12","senderName","message","formatTime","timestamp","_hoisted_10","toggleProfileDropdown","style","_normalizeStyle","backgroundColor","userAvatarColor","color","userInitials","userDisplayName","showProfileDropdown","_hoisted_13","logout","_createBlock"],"sources":["/workspaces/Mini_Projects_Js/Forum_App/src/components/NavbarDiscussion.vue"],"sourcesContent":["<template>\r\n  <div class=\"navbar\">\r\n    <div class=\"container\">\r\n      <router-link to=\"/forum\" class=\"logo\">\r\n        <i class=\"fas fa-comments\"></i> Forum\r\n      </router-link>\r\n      \r\n      <div class=\"nav-right\">\r\n        <!-- Notifications Dropdown -->\r\n        <div class=\"notification-icon\" @click.stop=\"toggleNotifications\" v-if=\"user\">\r\n          <i class=\"fas fa-bell\"></i>\r\n          <span v-if=\"unreadCount > 0\" class=\"notification-badge\">{{ unreadCount }}</span>\r\n          \r\n          <div v-if=\"showNotifications\" class=\"notification-dropdown\">\r\n            <div class=\"notification-header\">\r\n              <h4>Notifications</h4>\r\n              <button @click=\"markAllAsRead\" v-if=\"unreadCount > 0\">\r\n                Mark all as read\r\n              </button>\r\n            </div>\r\n            \r\n            <div v-if=\"loadingNotifications\" class=\"loading\">\r\n              <i class=\"fas fa-spinner fa-spin\"></i> Loading...\r\n            </div>\r\n            \r\n            <div v-else>\r\n              <div v-if=\"notifications.length === 0\" class=\"empty\">\r\n                No new notifications\r\n              </div>\r\n              \r\n              <div v-for=\"notification in notifications\" \r\n                   :key=\"notification.id\"\r\n                   class=\"notification-item\"\r\n                   :class=\"{ unread: !notification.read }\"\r\n                   @click=\"handleNotificationClick(notification)\">\r\n                <img :src=\"notification.senderAvatar || defaultAvatar\" \r\n                     class=\"avatar\"\r\n                     @error=\"handleAvatarError\">\r\n                <div class=\"content\">\r\n                  <p><strong>{{ notification.senderName }}</strong> {{ notification.message }}</p>\r\n                  <small>{{ formatTime(notification.timestamp) }}</small>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        \r\n        <!-- User Profile -->\r\n        <div class=\"user-profile\" v-if=\"user\" @click.stop=\"toggleProfileDropdown\">\r\n          <!-- Avatar with user initials and dynamic background color -->\r\n          <div class=\"initials-avatar\" :style=\"{ backgroundColor: userAvatarColor, color: '#ffffff' }\">\r\n            {{ userInitials }}\r\n          </div>\r\n          <span>{{ userDisplayName }}</span>\r\n          <i class=\"fas fa-caret-down\"></i>\r\n          \r\n          <div v-if=\"showProfileDropdown\" class=\"profile-dropdown\">\r\n            <router-link to=\"/profile\" class=\"dropdown-item\">\r\n              <i class=\"fas fa-user\"></i> Profile\r\n            </router-link>\r\n            <div class=\"dropdown-item\" @click=\"logout\">\r\n              <i class=\"fas fa-sign-out-alt\"></i> Logout\r\n            </div>\r\n          </div>\r\n        </div>\r\n        \r\n        <router-link v-else to=\"/login\" class=\"login-btn\">\r\n          <i class=\"fas fa-sign-in-alt\"></i> Login\r\n        </router-link>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { getAuth, signOut, onAuthStateChanged } from \"firebase/auth\";\r\nimport { getFirestore, collection, query, where, onSnapshot, doc, getDoc, updateDoc, writeBatch } from \"firebase/firestore\";\r\nimport { ref, reactive, onMounted, onUnmounted, computed, watch } from 'vue';\r\nimport { useRouter } from 'vue-router';\r\n\r\nexport default {\r\n  name: 'Navbar',\r\n  setup() {\r\n    const auth = getAuth();\r\n    const db = getFirestore();\r\n    const router = useRouter();\r\n    \r\n    // User data\r\n    const user = ref(null);\r\n    const userProfile = ref({\r\n      firstName: '',\r\n      lastName: '',\r\n      displayName: '',\r\n      photoURL: '',\r\n      avatarColor: '#3498db', // Default color\r\n      uid: ''\r\n    });\r\n    const defaultAvatar = 'https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460_960_720.png';\r\n    \r\n    // Computed properties for avatar\r\n    const userInitials = computed(() => {\r\n      const firstInitial = userProfile.value.firstName ? userProfile.value.firstName.charAt(0).toUpperCase() : '';\r\n      const lastInitial = userProfile.value.lastName ? userProfile.value.lastName.charAt(0).toUpperCase() : '';\r\n      return `${firstInitial}${lastInitial}`;\r\n    });\r\n    \r\n    const userDisplayName = computed(() => {\r\n      if (userProfile.value.displayName && userProfile.value.displayName.trim() !== '') {\r\n        return userProfile.value.displayName;\r\n      }\r\n      \r\n      const fullName = `${userProfile.value.firstName} ${userProfile.value.lastName}`.trim();\r\n      return fullName !== '' ? fullName : 'User';\r\n    });\r\n    \r\n    const userAvatarColor = computed(() => {\r\n      return userProfile.value.avatarColor || '#3498db';\r\n    });\r\n    \r\n    // Notification state\r\n    const notifications = ref([]);\r\n    const loadingNotifications = ref(false);\r\n    const showNotifications = ref(false);\r\n    const unreadCount = computed(() => notifications.value.filter(n => !n.read).length);\r\n    \r\n    // Profile dropdown\r\n    const showProfileDropdown = ref(false);\r\n    \r\n    // Watch for auth state changes\r\n    let unsubscribeAuth = null;\r\n    let unsubscribeUserProfile = null;\r\n    let unsubscribeNotifications = null;\r\n    \r\n    onMounted(() => {\r\n      unsubscribeAuth = onAuthStateChanged(auth, async (authUser) => {\r\n        user.value = authUser;\r\n        if (authUser) {\r\n          // Set up real-time listener for user profile\r\n          setupUserProfileListener(authUser.uid);\r\n          setupNotificationsListener(authUser.uid);\r\n        } else {\r\n          // Clean up when logged out\r\n          if (unsubscribeUserProfile) {\r\n            unsubscribeUserProfile();\r\n            unsubscribeUserProfile = null;\r\n          }\r\n          \r\n          if (unsubscribeNotifications) {\r\n            unsubscribeNotifications();\r\n            unsubscribeNotifications = null;\r\n          }\r\n          \r\n          // Clear data\r\n          notifications.value = [];\r\n          userProfile.value = {\r\n            firstName: '',\r\n            lastName: '',\r\n            displayName: '',\r\n            photoURL: '',\r\n            avatarColor: '#3498db',\r\n            uid: ''\r\n          };\r\n        }\r\n      });\r\n    });\r\n    \r\n    onUnmounted(() => {\r\n      if (unsubscribeAuth) unsubscribeAuth();\r\n      if (unsubscribeUserProfile) unsubscribeUserProfile();\r\n      if (unsubscribeNotifications) unsubscribeNotifications();\r\n    });\r\n    \r\n    // Set up real-time listener for user profile\r\n    const setupUserProfileListener = (userId) => {\r\n      const userRef = doc(db, 'users', userId);\r\n      \r\n      unsubscribeUserProfile = onSnapshot(userRef, (docSnapshot) => {\r\n        if (docSnapshot.exists()) {\r\n          const userData = docSnapshot.data();\r\n          \r\n          // Use direct property assignment for Vue reactivity\r\n          userProfile.value = {\r\n            firstName: userData.firstName || '',\r\n            lastName: userData.lastName || '',\r\n            displayName: userData.displayName || '',\r\n            photoURL: userData.photoURL || user.value?.photoURL || '',\r\n            avatarColor: userData.avatarColor || '#3498db',\r\n            uid: userId\r\n          };\r\n          \r\n          // Debug logging\r\n          console.log('User profile updated:', userProfile.value);\r\n        } else {\r\n          // Fallback to auth data if no Firestore document\r\n          if (user.value?.displayName) {\r\n            const names = user.value.displayName.split(' ');\r\n            userProfile.value = {\r\n              firstName: names[0] || '',\r\n              lastName: names.slice(1).join(' ') || '',\r\n              displayName: user.value.displayName,\r\n              photoURL: user.value.photoURL || '',\r\n              avatarColor: '#3498db',\r\n              uid: userId\r\n            };\r\n          }\r\n        }\r\n      }, error => {\r\n        console.error('Error fetching user profile:', error);\r\n      });\r\n    };\r\n    \r\n    // Set up real-time listener for notifications\r\n    const setupNotificationsListener = (userId) => {\r\n      loadingNotifications.value = true;\r\n      \r\n      const q = query(\r\n        collection(db, 'notifications'),\r\n        where('recipientId', '==', userId)\r\n      );\r\n      \r\n      unsubscribeNotifications = onSnapshot(q, async (snapshot) => {\r\n        loadingNotifications.value = true;\r\n        \r\n        // Process all notifications\r\n        const notificationsArray = [];\r\n        \r\n        for (const docSnapshot of snapshot.docs) {\r\n          const data = docSnapshot.data();\r\n          \r\n          // Get sender info\r\n          let senderName = 'Anonymous';\r\n          let senderAvatar = null;\r\n          \r\n          try {\r\n            const senderDoc = await getDoc(doc(db, 'users', data.senderId));\r\n            if (senderDoc.exists()) {\r\n              const senderData = senderDoc.data();\r\n              senderName = senderData.displayName || \r\n                           `${senderData.firstName || ''} ${senderData.lastName || ''}`.trim() || \r\n                           'Anonymous';\r\n              senderAvatar = senderData.photoURL || null;\r\n            }\r\n          } catch (error) {\r\n            console.error('Error fetching sender info:', error);\r\n          }\r\n          \r\n          notificationsArray.push({\r\n            id: docSnapshot.id,\r\n            senderId: data.senderId,\r\n            senderName,\r\n            senderAvatar,\r\n            message: data.message || 'You have a new notification',\r\n            read: data.read || false,\r\n            timestamp: data.timestamp?.toDate() || new Date(),\r\n            type: data.type || 'generic',\r\n            relatedDocId: data.relatedDocId || null\r\n          });\r\n        }\r\n        \r\n        // Sort notifications by timestamp (newest first)\r\n        notificationsArray.sort((a, b) => b.timestamp - a.timestamp);\r\n        \r\n        // Update the reactive notifications array\r\n        notifications.value = notificationsArray;\r\n        loadingNotifications.value = false;\r\n      });\r\n    };\r\n    \r\n    // Handle notification click\r\n    const handleNotificationClick = async (notification) => {\r\n      // Mark as read\r\n      try {\r\n        await updateDoc(doc(db, 'notifications', notification.id), {\r\n          read: true\r\n        });\r\n        \r\n        // Update local state\r\n        const index = notifications.value.findIndex(n => n.id === notification.id);\r\n        if (index !== -1) {\r\n          notifications.value[index].read = true;\r\n        }\r\n        \r\n        // Navigate based on notification type\r\n        if (notification.type === 'reply' && notification.relatedDocId) {\r\n          router.push(`/forum/${notification.relatedDocId}`);\r\n        }\r\n        \r\n        showNotifications.value = false;\r\n      } catch (error) {\r\n        console.error('Error marking notification as read:', error);\r\n      }\r\n    };\r\n    \r\n    // Mark all notifications as read\r\n    const markAllAsRead = async () => {\r\n      try {\r\n        const batch = writeBatch(db);\r\n        \r\n        notifications.value.forEach(notification => {\r\n          if (!notification.read) {\r\n            const ref = doc(db, 'notifications', notification.id);\r\n            batch.update(ref, { read: true });\r\n          }\r\n        });\r\n        \r\n        await batch.commit();\r\n        \r\n        // Update local state\r\n        notifications.value = notifications.value.map(notification => ({\r\n          ...notification,\r\n          read: true\r\n        }));\r\n      } catch (error) {\r\n        console.error('Error marking all notifications as read:', error);\r\n      }\r\n    };\r\n    \r\n    // Format time\r\n    const formatTime = (date) => {\r\n      const now = new Date();\r\n      const diff = now - date;\r\n      const minutes = Math.floor(diff / 60000);\r\n      \r\n      if (minutes < 1) return 'Just now';\r\n      if (minutes < 60) return `${minutes}m ago`;\r\n      if (minutes < 1440) return `${Math.floor(minutes/60)}h ago`;\r\n      return `${Math.floor(minutes/1440)}d ago`;\r\n    };\r\n    \r\n    // Toggle dropdowns\r\n    const toggleNotifications = () => {\r\n      showNotifications.value = !showNotifications.value;\r\n      if (showNotifications.value) {\r\n        showProfileDropdown.value = false;\r\n      }\r\n    };\r\n    \r\n    const toggleProfileDropdown = () => {\r\n      showProfileDropdown.value = !showProfileDropdown.value;\r\n      if (showProfileDropdown.value) {\r\n        showNotifications.value = false;\r\n      }\r\n    };\r\n    \r\n    // Handle avatar errors\r\n    const handleAvatarError = (e) => {\r\n      e.target.src = defaultAvatar;\r\n    };\r\n    \r\n    // Logout\r\n    const logout = async () => {\r\n      try {\r\n        await signOut(auth);\r\n        router.push('/');\r\n      } catch (error) {\r\n        console.error('Logout error:', error);\r\n      }\r\n    };\r\n    \r\n    // Close dropdowns when clicking outside\r\n    const handleClickOutside = (e) => {\r\n      if (!e.target.closest('.notification-icon')) {\r\n        showNotifications.value = false;\r\n      }\r\n      if (!e.target.closest('.user-profile')) {\r\n        showProfileDropdown.value = false;\r\n      }\r\n    };\r\n    \r\n    onMounted(() => {\r\n      document.addEventListener('click', handleClickOutside);\r\n    });\r\n    \r\n    onUnmounted(() => {\r\n      document.removeEventListener('click', handleClickOutside);\r\n    });\r\n    \r\n    return {\r\n      user,\r\n      userProfile,\r\n      userInitials,\r\n      userDisplayName,\r\n      userAvatarColor,\r\n      defaultAvatar,\r\n      notifications,\r\n      loadingNotifications,\r\n      showNotifications,\r\n      unreadCount,\r\n      showProfileDropdown,\r\n      toggleNotifications,\r\n      toggleProfileDropdown,\r\n      handleNotificationClick,\r\n      markAllAsRead,\r\n      formatTime,\r\n      handleAvatarError,\r\n      logout\r\n    };\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.navbar {\r\n  background: linear-gradient(135deg, #3498db, #2c3e50);\r\n  color: white;\r\n  padding: 0.8rem 2rem;\r\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\r\n  position: sticky;\r\n  top: 0;\r\n  z-index: 1000;\r\n}\r\n\r\n.container {\r\n  max-width: 1200px;\r\n  margin: 0 auto;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n\r\n.logo {\r\n  font-size: 1.8rem;\r\n  font-weight: 700;\r\n  text-decoration: none;\r\n  color: white;\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 0.8rem;\r\n  transition: all 0.3s ease;\r\n}\r\n\r\n.logo:hover {\r\n  transform: translateY(-2px);\r\n}\r\n\r\n.nav-right {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 1.5rem;\r\n}\r\n\r\n.notification-icon {\r\n  position: relative;\r\n  cursor: pointer;\r\n  padding: 0.5rem;\r\n}\r\n\r\n.notification-badge {\r\n  position: absolute;\r\n  top: -5px;\r\n  right: -5px;\r\n  background-color: #e74c3c;\r\n  color: white;\r\n  border-radius: 50%;\r\n  width: 18px;\r\n  height: 18px;\r\n  font-size: 0.7rem;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n\r\n.notification-dropdown {\r\n  position: absolute;\r\n  top: 40px;\r\n  right: -100px;\r\n  width: 320px;\r\n  max-height: 400px;\r\n  overflow-y: auto;\r\n  background-color: white;\r\n  border-radius: 8px;\r\n  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);\r\n  z-index: 1000;\r\n}\r\n\r\n.notification-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 0.8rem 1rem;\r\n  border-bottom: 1px solid #eee;\r\n}\r\n\r\n.notification-header h4 {\r\n  margin: 0;\r\n  color: #333;\r\n}\r\n\r\n.notification-header button {\r\n  background: none;\r\n  border: none;\r\n  color: #3498db;\r\n  cursor: pointer;\r\n  font-size: 0.8rem;\r\n}\r\n\r\n.notification-item {\r\n  display: flex;\r\n  padding: 0.8rem 1rem;\r\n  border-bottom: 1px solid #eee;\r\n  cursor: pointer;\r\n  transition: background-color 0.2s;\r\n}\r\n\r\n.notification-item:hover {\r\n  background-color: #f9f9f9;\r\n}\r\n\r\n.notification-item.unread {\r\n  background-color: #f0f7ff;\r\n}\r\n\r\n.notification-item .avatar,\r\n.user-profile .avatar {\r\n  width: 40px;\r\n  height: 40px;\r\n  border-radius: 50%;\r\n  margin-right: 0.8rem;\r\n  object-fit: cover;\r\n}\r\n\r\n.notification-item .content {\r\n  flex: 1;\r\n}\r\n\r\n.notification-item .content p {\r\n  margin: 0 0 0.3rem 0;\r\n  color: #333;\r\n}\r\n\r\n.notification-item .content small {\r\n  color: #999;\r\n}\r\n\r\n.loading, .empty {\r\n  padding: 1rem;\r\n  text-align: center;\r\n  color: #999;\r\n}\r\n\r\n.user-profile {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 0.5rem;\r\n  cursor: pointer;\r\n  position: relative;\r\n}\r\n\r\n.user-profile span {\r\n  max-width: 100px;\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n}\r\n\r\n.profile-dropdown {\r\n  position: absolute;\r\n  top: 40px;\r\n  right: 0;\r\n  width: 180px;\r\n  background-color: white;\r\n  border-radius: 8px;\r\n  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);\r\n  z-index: 1000;\r\n  overflow: hidden;\r\n}\r\n\r\n.dropdown-item {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 0.5rem;\r\n  padding: 0.8rem 1rem;\r\n  color: #333;\r\n  text-decoration: none;\r\n  transition: background-color 0.2s;\r\n}\r\n\r\n.dropdown-item:hover {\r\n  background-color: #f5f5f5;\r\n}\r\n\r\n.login-btn {\r\n  background-color: rgba(255, 255, 255, 0.2);\r\n  padding: 0.5rem 1rem;\r\n  border-radius: 4px;\r\n  text-decoration: none;\r\n  color: white;\r\n  font-weight: 500;\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 0.5rem;\r\n  transition: all 0.3s ease;\r\n}\r\n\r\n.login-btn:hover {\r\n  background-color: rgba(255, 255, 255, 0.3);\r\n}\r\n\r\n/* Initial avatar styles */\r\n.initials-avatar {\r\n  width: 40px;\r\n  height: 40px;\r\n  border-radius: 50%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  font-weight: bold;\r\n  border: 2px solid white;\r\n  font-size: 1rem;\r\n}\r\n\r\n/* Media Queries */\r\n@media (max-width: 768px) {\r\n  .navbar {\r\n    padding: 0.8rem 1rem;\r\n  }\r\n  \r\n  .notification-dropdown {\r\n    width: 300px;\r\n    right: -120px;\r\n  }\r\n  \r\n  .user-profile span {\r\n    display: none;\r\n  }\r\n}\r\n\r\n@media (max-width: 480px) {\r\n  .logo {\r\n    font-size: 1.5rem;\r\n  }\r\n  \r\n  .notification-dropdown {\r\n    width: 280px;\r\n    right: -100px;\r\n  }\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}