{"ast":null,"code":"import { vModelText as _vModelText, createElementVNode as _createElementVNode, withDirectives as _withDirectives, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, withModifiers as _withModifiers } from \"vue\";\nvar _hoisted_1 = [\"disabled\"];\nvar _hoisted_2 = {\n  key: 0,\n  style: {\n    \"color\": \"red\",\n    \"margin-top\": \"0.5rem\"\n  }\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"form\", {\n    onSubmit: _cache[1] || (_cache[1] = _withModifiers(function () {\n      return $setup.addResponse && $setup.addResponse.apply($setup, arguments);\n    }, [\"prevent\"])),\n    style: {\n      \"margin-top\": \"1.5rem\"\n    }\n  }, [_withDirectives(_createElementVNode(\"textarea\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = function ($event) {\n      return $setup.contenu = $event;\n    }),\n    placeholder: \"Write your response...\",\n    style: {\n      \"width\": \"100%\",\n      \"padding\": \"0.75rem\",\n      \"border-radius\": \"0.5rem\",\n      \"border\": \"1px solid #ccc\"\n    }\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.contenu]]), _createElementVNode(\"button\", {\n    type: \"submit\",\n    disabled: $setup.isSubmitting,\n    style: {\n      \"margin-top\": \"0.5rem\",\n      \"padding\": \"0.5rem 1rem\",\n      \"background-color\": \"#007BFF\",\n      \"color\": \"white\",\n      \"border\": \"none\",\n      \"border-radius\": \"0.5rem\",\n      \"cursor\": \"pointer\"\n    }\n  }, _toDisplayString($setup.isSubmitting ? 'Posting...' : 'Post Response'), 9 /* TEXT, PROPS */, _hoisted_1), $setup.error ? (_openBlock(), _createElementBlock(\"p\", _hoisted_2, _toDisplayString($setup.error), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)], 32 /* NEED_HYDRATION */);\n}","map":{"version":3,"names":["key","style","_createElementBlock","onSubmit","_cache","_withModifiers","$setup","addResponse","apply","arguments","_createElementVNode","$event","contenu","placeholder","type","disabled","isSubmitting","_hoisted_1","error","_hoisted_2","_toDisplayString","_createCommentVNode"],"sources":["/workspaces/Mini_Projects_Js/Forum_App/src/components/ResponseForm.vue"],"sourcesContent":["<template>\r\n  <form @submit.prevent=\"addResponse\" style=\"margin-top: 1.5rem;\">\r\n    <textarea\r\n      v-model=\"contenu\"\r\n      placeholder=\"Write your response...\"\r\n      style=\"width: 100%; padding: 0.75rem; border-radius: 0.5rem; border: 1px solid #ccc;\"\r\n    ></textarea>\r\n    <button\r\n      type=\"submit\"\r\n      :disabled=\"isSubmitting\"\r\n      style=\"margin-top: 0.5rem; padding: 0.5rem 1rem; background-color: #007BFF; color: white; border: none; border-radius: 0.5rem; cursor: pointer;\"\r\n    >\r\n      {{ isSubmitting ? 'Posting...' : 'Post Response' }}\r\n    </button>\r\n    <p v-if=\"error\" style=\"color: red; margin-top: 0.5rem;\">{{ error }}</p>\r\n  </form>\r\n</template>\r\n\r\n<script>\r\nimport { ref } from 'vue'\r\nimport { getAuth } from 'firebase/auth'\r\nimport { getFirestore, collection, addDoc, serverTimestamp, doc, getDoc } from 'firebase/firestore'\r\nimport { useRoute } from 'vue-router'\r\n\r\nexport default {\r\n  name: 'NewResponseForm',\r\n  props: {\r\n    discussionOwnerId: {  // Add this prop to receive discussion owner's ID\r\n      type: String,\r\n      required: true\r\n    }\r\n  },\r\n  emits: ['response-added'],\r\n  setup(props, { emit }) {\r\n    const contenu = ref('')\r\n    const db = getFirestore()\r\n    const auth = getAuth()\r\n    const route = useRoute()\r\n    const isSubmitting = ref(false)\r\n    const error = ref(null)\r\n\r\n    const addResponse = async () => {\r\n      const user = auth.currentUser\r\n      if (!user || !contenu.value.trim()) return\r\n\r\n      isSubmitting.value = true\r\n      error.value = null\r\n\r\n      try {\r\n        // 1. Add the response to Firestore\r\n        const responseRef = await addDoc(collection(db, 'responses'), {\r\n          contenu: contenu.value,\r\n          discussionId: route.params.id,\r\n          authorId: user.uid,\r\n          authorName: user.displayName || 'Anonymous', // Added author name\r\n          createdAt: serverTimestamp()\r\n        })\r\n\r\n        // 2. Send notification (only if not replying to yourself)\r\n        if (user.uid !== props.discussionOwnerId) {\r\n          await createNotification(\r\n            props.discussionOwnerId,\r\n            user,\r\n            route.params.id,\r\n            responseRef.id\r\n          )\r\n        }\r\n\r\n        // 3. Clear form and emit event\r\n        contenu.value = ''\r\n        emit('response-added')\r\n      } catch (err) {\r\n        console.error('Error adding response:', err)\r\n        error.value = 'Failed to post response. Please try again.'\r\n      } finally {\r\n        isSubmitting.value = false\r\n      }\r\n    }\r\n\r\n    // Notification creation function\r\n    const createNotification = async (ownerId, currentUser, discussionId, replyId) => {\r\n      try {\r\n        await addDoc(collection(db, 'notifications'), {\r\n          userId: ownerId,\r\n          type: 'reply',\r\n          read: false,\r\n          createdAt: serverTimestamp(),\r\n          data: {\r\n            discussionId: discussionId,\r\n            replyId: replyId,\r\n            replierName: currentUser.displayName || 'Anonymous',\r\n            replierId: currentUser.uid,\r\n            contentPreview: contenu.value.substring(0, 100) // First 100 chars of reply\r\n          }\r\n        })\r\n      } catch (err) {\r\n        console.error('Error creating notification:', err)\r\n        // Don't block the response if notification fails\r\n      }\r\n    }\r\n\r\n    return {\r\n      contenu,\r\n      addResponse,\r\n      isSubmitting,\r\n      error\r\n    }\r\n  }\r\n}\r\n</script>"],"mappings":";iBAAA;;EAAAA,GAAA;EAcoBC,KAAuC,EAAvC;IAAA;IAAA;EAAA;;;uBAblBC,mBAAA,CAcO;IAdAC,QAAM,EAAAC,MAAA,QAAAA,MAAA,MADfC,cAAA;MAAA,OACyBC,MAAA,CAAAC,WAAA,IAAAD,MAAA,CAAAC,WAAA,CAAAC,KAAA,CAAAF,MAAA,EAAAG,SAAA,CAAW;IAAA;IAAER,KAA2B,EAA3B;MAAA;IAAA;sBAClCS,mBAAA,CAIY;IANhB,uBAAAN,MAAA,QAAAA,MAAA,gBAAAO,MAAA;MAAA,OAGeL,MAAA,CAAAM,OAAO,GAAAD,MAAA;IAAA;IAChBE,WAAW,EAAC,wBAAwB;IACpCZ,KAAqF,EAArF;MAAA;MAAA;MAAA;MAAA;IAAA;iDAFSK,MAAA,CAAAM,OAAO,E,GAIlBF,mBAAA,CAMS;IALPI,IAAI,EAAC,QAAQ;IACZC,QAAQ,EAAET,MAAA,CAAAU,YAAY;IACvBf,KAAgJ,EAAhJ;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;IAAA;sBAEGK,MAAA,CAAAU,YAAY,yDAZrBC,UAAA,GAcaX,MAAA,CAAAY,KAAK,I,cAAdhB,mBAAA,CAAuE,KAAvEiB,UAAuE,EAAAC,gBAAA,CAAZd,MAAA,CAAAY,KAAK,oBAdpEG,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}