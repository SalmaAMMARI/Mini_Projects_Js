{"ast":null,"code":"import _regeneratorRuntime from \"/workspaces/Mini_Projects_Js/Forum_App/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/workspaces/Mini_Projects_Js/Forum_App/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.string.trim.js\";\nimport { ref } from 'vue';\nimport { initializeApp } from 'firebase/app';\nimport { addDoc, collection, serverTimestamp, getFirestore } from 'firebase/firestore';\nimport { getAuth } from 'firebase/auth';\nimport { useRouter } from 'vue-router';\nvar firebaseConfig = {\n  apiKey: \"AIzaSyD6Ls27tC0PCig7KSVBBrAwYdJYukNPRQk\",\n  authDomain: \"projectspd-c4560.firebaseapp.com\",\n  projectId: \"projectspd-c4560\",\n  storageBucket: \"projectspd-c4560.appspot.com\",\n  messagingSenderId: \"161091067585\",\n  appId: \"1:161091067585:web:7f9b054cc176805801fe40\"\n};\n\n// Initialize Firebase\nvar app = initializeApp(firebaseConfig);\n\n// Initialize Firebase services\nvar db = getFirestore(app);\nexport default {\n  name: 'NewDiscussionForm',\n  setup: function setup() {\n    var title = ref('');\n    var content = ref('');\n    var category = ref('General');\n    var loading = ref(false);\n    var error = ref(null);\n    var router = useRouter();\n    var auth = getAuth();\n    var createDiscussion = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var user;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              // Reset error\n              error.value = null;\n\n              // Validate inputs\n              if (!(!title.value.trim() || !content.value.trim())) {\n                _context.next = 5;\n                break;\n              }\n              error.value = 'Please fill in all fields';\n              return _context.abrupt(\"return\");\n            case 5:\n              // Check if user is logged in\n              user = auth.currentUser;\n              if (user) {\n                _context.next = 9;\n                break;\n              }\n              error.value = 'You must be logged in to create a discussion';\n              return _context.abrupt(\"return\");\n            case 9:\n              loading.value = true;\n\n              // Add new discussion to Firestore\n              _context.next = 12;\n              return addDoc(collection(db, 'discussions'), {\n                title: title.value,\n                content: content.value,\n                authorId: user.uid,\n                authorName: user.displayName || 'Anonymous',\n                createdAt: serverTimestamp(),\n                category: category.value,\n                upvotes: 0,\n                replies: 0\n              });\n            case 12:\n              // Redirect to forum after successful creation\n              router.push('/forum');\n              _context.next = 19;\n              break;\n            case 15:\n              _context.prev = 15;\n              _context.t0 = _context[\"catch\"](0);\n              console.error('Error creating discussion:', _context.t0);\n              error.value = 'Failed to create discussion. Please try again.';\n            case 19:\n              _context.prev = 19;\n              loading.value = false;\n              return _context.finish(19);\n            case 22:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[0, 15, 19, 22]]);\n      }));\n      return function createDiscussion() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n    return {\n      title: title,\n      content: content,\n      category: category,\n      loading: loading,\n      error: error,\n      createDiscussion: createDiscussion\n    };\n  }\n};","map":{"version":3,"names":["ref","initializeApp","addDoc","collection","serverTimestamp","getFirestore","getAuth","useRouter","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","app","db","name","setup","title","content","category","loading","error","router","auth","createDiscussion","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","user","wrap","_callee$","_context","prev","next","value","trim","abrupt","currentUser","authorId","uid","authorName","displayName","createdAt","upvotes","replies","push","t0","console","finish","stop","apply","arguments"],"sources":["/workspaces/Mini_Projects_Js/Forum_App/src/components/NewDiscussionForm.vue"],"sourcesContent":["<template>\r\n  <div class=\"auth-container\">\r\n    <div class=\"auth-card\">\r\n      <h2 class=\"auth-title\">Create New Discussion</h2>\r\n      \r\n      <div v-if=\"error\" class=\"auth-error\">\r\n        <i class=\"fas fa-exclamation-circle\"></i> {{ error }}\r\n      </div>\r\n      \r\n      <div class=\"auth-form-group\">\r\n        <label for=\"title\">Discussion Title</label>\r\n        <input\r\n          id=\"title\"\r\n          v-model=\"title\"\r\n          type=\"text\"\r\n          class=\"auth-input\"\r\n          placeholder=\"Enter discussion title\"\r\n          required\r\n        >\r\n      </div>\r\n      \r\n      <div class=\"auth-form-group\">\r\n        <label for=\"content\">Discussion Content</label>\r\n        <textarea\r\n          id=\"content\"\r\n          v-model=\"content\"\r\n          class=\"auth-input auth-textarea\"\r\n          placeholder=\"Write your discussion here...\"\r\n          required\r\n        ></textarea>\r\n      </div>\r\n      \r\n      <div class=\"auth-form-group\">\r\n        <label for=\"category\">Category</label>\r\n        <select\r\n          id=\"category\"\r\n          v-model=\"category\"\r\n          class=\"auth-input\"\r\n        >\r\n          <option value=\"General\">General</option>\r\n          <option value=\"Tech\">Tech</option>\r\n          <option value=\"Science\">Science</option>\r\n          <option value=\"Gaming\">Gaming</option>\r\n          <option value=\"Cooking\">Cooking</option>\r\n          <option value=\"Travel\">Travel</option>\r\n          <option value=\"Health\">Health</option>\r\n          <option value=\"Education\">Education</option>\r\n          <option value=\"Art\">Art</option>\r\n          <option value=\"Music\">Music</option>\r\n          <option value=\"Sports\">Sports</option>\r\n          <option value=\"Movies\">Movies</option>\r\n          <option value=\"Books\">Books</option>\r\n          <option value=\"Fashion\">Fashion</option>\r\n          <option value=\"Lifestyle\">Lifestyle</option>\r\n        </select>\r\n      </div>\r\n      \r\n      <button\r\n        @click=\"createDiscussion\"\r\n        :disabled=\"loading\"\r\n        class=\"auth-button\"\r\n      >\r\n        <span v-if=\"!loading\">Create Discussion</span>\r\n        <span v-else><i class=\"fas fa-spinner fa-spin\"></i> Creating...</span>\r\n      </button>\r\n      \r\n      <router-link to=\"/forum\" class=\"auth-link\">\r\n        <i class=\"fas fa-arrow-left\"></i> Back to Forum\r\n      </router-link>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref } from 'vue';\r\nimport {initializeApp} from 'firebase/app';\r\nimport { addDoc, collection, serverTimestamp,getFirestore } from 'firebase/firestore';\r\nimport { getAuth } from 'firebase/auth';\r\nimport { useRouter } from 'vue-router';\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyD6Ls27tC0PCig7KSVBBrAwYdJYukNPRQk\",\r\n  authDomain: \"projectspd-c4560.firebaseapp.com\",\r\n  projectId: \"projectspd-c4560\",\r\n  storageBucket: \"projectspd-c4560.appspot.com\",\r\n  messagingSenderId: \"161091067585\",\r\n  appId: \"1:161091067585:web:7f9b054cc176805801fe40\"\r\n}\r\n\r\n// Initialize Firebase\r\nconst app = initializeApp(firebaseConfig);\r\n\r\n// Initialize Firebase services\r\nconst db = getFirestore(app);\r\n\r\nexport default {\r\n  name: 'NewDiscussionForm',\r\n  setup() {\r\n    const title = ref('');\r\n    const content = ref('');\r\n    const category = ref('General');\r\n    const loading = ref(false);\r\n    const error = ref(null);\r\n    const router = useRouter();\r\n    const auth = getAuth();\r\n\r\n    const createDiscussion = async () => {\r\n      try {\r\n        // Reset error\r\n        error.value = null;\r\n        \r\n        // Validate inputs\r\n        if (!title.value.trim() || !content.value.trim()) {\r\n          error.value = 'Please fill in all fields';\r\n          return;\r\n        }\r\n\r\n        // Check if user is logged in\r\n        const user = auth.currentUser;\r\n        if (!user) {\r\n          error.value = 'You must be logged in to create a discussion';\r\n          return;\r\n        }\r\n\r\n        loading.value = true;\r\n\r\n        // Add new discussion to Firestore\r\n        await addDoc(collection(db, 'discussions'), {\r\n          title: title.value,\r\n          content: content.value,\r\n          authorId: user.uid,\r\n          authorName: user.displayName || 'Anonymous',\r\n          createdAt: serverTimestamp(),\r\n          category: category.value,\r\n          upvotes: 0,\r\n          replies: 0\r\n        });\r\n\r\n        // Redirect to forum after successful creation\r\n        router.push('/forum');\r\n      } catch (err) {\r\n        console.error('Error creating discussion:', err);\r\n        error.value = 'Failed to create discussion. Please try again.';\r\n      } finally {\r\n        loading.value = false;\r\n      }\r\n    };\r\n\r\n    return {\r\n      title,\r\n      content,\r\n      category,\r\n      loading,\r\n      error,\r\n      createDiscussion\r\n    };\r\n  }\r\n};\r\n</script>\r\n\r\n\r\n<style scoped>\r\n.auth-container {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  min-height: 100vh;\r\n  background-color: #f5f7fa;\r\n  padding: 20px;\r\n}\r\n\r\n.auth-card {\r\n  background: white;\r\n  border-radius: 10px;\r\n  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);\r\n  padding: 2rem;\r\n  width: 100%;\r\n  max-width: 500px;\r\n}\r\n\r\n.auth-title {\r\n  color: #2c3e50;\r\n  text-align: center;\r\n  margin-bottom: 1.5rem;\r\n  font-size: 1.8rem;\r\n}\r\n\r\n.auth-form-group {\r\n  margin-bottom: 1.5rem;\r\n}\r\n\r\n.auth-form-group label {\r\n  display: block;\r\n  margin-bottom: 0.5rem;\r\n  color: #2c3e50;\r\n  font-weight: 500;\r\n}\r\n\r\n.auth-input {\r\n  width: 100%;\r\n  padding: 12px 15px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 8px;\r\n  font-size: 1rem;\r\n  transition: all 0.3s ease;\r\n}\r\n\r\n.auth-input:focus {\r\n  outline: none;\r\n  border-color: #3498db;\r\n  box-shadow: 0 0 0 3px rgba(52, 152, 219, 0.2);\r\n}\r\n\r\n.auth-textarea {\r\n  min-height: 150px;\r\n  resize: vertical;\r\n}\r\n\r\n.auth-button:hover {\r\n  transform: translateY(-2px);\r\n  box-shadow: 0 6px 12px rgba(0, 0, 0, 0.15);\r\n  background: linear-gradient(135deg, #2980b9, #27ae60);\r\n}\r\n.auth-button {\r\n  width: 100%;\r\n  padding: 12px;\r\n  background: linear-gradient(135deg, #3498db, #2ecc71);\r\n  color: white;\r\n  border: none;\r\n  border-radius: 8px;\r\n  font-size: 1rem;\r\n  font-weight: 500;\r\n  cursor: pointer;\r\n  transition: all 0.3s ease;\r\n  margin-top: 0.5rem;\r\n}\r\n\r\n.auth-button:hover:not(:disabled) {\r\n  transform: translateY(-2px);\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.auth-button:disabled {\r\n  opacity: 0.7;\r\n  cursor: not-allowed;\r\n}\r\n\r\n.auth-link {\r\n  display: inline-block;\r\n  margin-top: 1.5rem;\r\n  color: #3498db;\r\n  text-decoration: none;\r\n  font-size: 0.9rem;\r\n  transition: color 0.3s ease;\r\n  text-align: center;\r\n  width: 100%;\r\n}\r\n\r\n.auth-link:hover {\r\n  color: #2980b9;\r\n  text-decoration: underline;\r\n}\r\n\r\n.auth-error {\r\n  background-color: #fdecea;\r\n  color: #e74c3c;\r\n  padding: 12px;\r\n  border-radius: 8px;\r\n  margin-bottom: 1.5rem;\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 8px;\r\n}\r\n\r\n.fa-spinner {\r\n  animation: spin 1s linear infinite;\r\n}\r\n\r\n@keyframes spin {\r\n  0% { transform: rotate(0deg); }\r\n  100% { transform: rotate(360deg); }\r\n}\r\n\r\n@media (max-width: 600px) {\r\n  .auth-card {\r\n    padding: 1.5rem;\r\n  }\r\n  \r\n  .auth-title {\r\n    font-size: 1.5rem;\r\n  }\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}