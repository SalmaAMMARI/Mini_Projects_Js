{"ast":null,"code":"import _objectSpread from \"/workspaces/Mini_Projects_Js/Forum_App/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _createForOfIteratorHelper from \"/workspaces/Mini_Projects_Js/Forum_App/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _regeneratorRuntime from \"/workspaces/Mini_Projects_Js/Forum_App/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/workspaces/Mini_Projects_Js/Forum_App/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.find-index.js\";\nimport \"core-js/modules/es.array.for-each.js\";\nimport \"core-js/modules/es.array.join.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.array.sort.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.string.trim.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport { getAuth, signOut, onAuthStateChanged } from \"firebase/auth\";\nimport { getFirestore, collection, query, where, onSnapshot, doc, getDoc, updateDoc, writeBatch } from \"firebase/firestore\";\nimport { ref, reactive, onMounted, onUnmounted, computed, watch } from 'vue';\nimport { useRouter } from 'vue-router';\nexport default {\n  name: 'Navbar',\n  setup: function setup() {\n    var auth = getAuth();\n    var db = getFirestore();\n    var router = useRouter();\n\n    // User data\n    var user = ref(null);\n    var userProfile = ref({\n      firstName: '',\n      lastName: '',\n      displayName: '',\n      photoURL: '',\n      avatarColor: '#3498db',\n      // Default color\n      uid: ''\n    });\n    var defaultAvatar = 'https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460_960_720.png';\n\n    // Computed properties for avatar\n    var userInitials = computed(function () {\n      var firstInitial = userProfile.value.firstName ? userProfile.value.firstName.charAt(0).toUpperCase() : '';\n      var lastInitial = userProfile.value.lastName ? userProfile.value.lastName.charAt(0).toUpperCase() : '';\n      return \"\".concat(firstInitial).concat(lastInitial);\n    });\n    var userDisplayName = computed(function () {\n      if (userProfile.value.displayName && userProfile.value.displayName.trim() !== '') {\n        return userProfile.value.displayName;\n      }\n      var fullName = \"\".concat(userProfile.value.firstName, \" \").concat(userProfile.value.lastName).trim();\n      return fullName !== '' ? fullName : 'User';\n    });\n    var userAvatarColor = computed(function () {\n      return userProfile.value.avatarColor || '#3498db';\n    });\n\n    // Notification state\n    var notifications = ref([]);\n    var loadingNotifications = ref(false);\n    var showNotifications = ref(false);\n    var unreadCount = computed(function () {\n      return notifications.value.filter(function (n) {\n        return !n.read;\n      }).length;\n    });\n\n    // Profile dropdown\n    var showProfileDropdown = ref(false);\n\n    // Watch for auth state changes\n    var unsubscribeAuth = null;\n    var unsubscribeUserProfile = null;\n    var unsubscribeNotifications = null;\n    onMounted(function () {\n      unsubscribeAuth = onAuthStateChanged(auth, /*#__PURE__*/function () {\n        var _ref = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(authUser) {\n          return _regeneratorRuntime().wrap(function _callee$(_context) {\n            while (1) switch (_context.prev = _context.next) {\n              case 0:\n                user.value = authUser;\n                if (authUser) {\n                  // Set up real-time listener for user profile\n                  setupUserProfileListener(authUser.uid);\n                  setupNotificationsListener(authUser.uid);\n                } else {\n                  // Clean up when logged out\n                  if (unsubscribeUserProfile) {\n                    unsubscribeUserProfile();\n                    unsubscribeUserProfile = null;\n                  }\n                  if (unsubscribeNotifications) {\n                    unsubscribeNotifications();\n                    unsubscribeNotifications = null;\n                  }\n\n                  // Clear data\n                  notifications.value = [];\n                  userProfile.value = {\n                    firstName: '',\n                    lastName: '',\n                    displayName: '',\n                    photoURL: '',\n                    avatarColor: '#3498db',\n                    uid: ''\n                  };\n                }\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }, _callee);\n        }));\n        return function (_x) {\n          return _ref.apply(this, arguments);\n        };\n      }());\n    });\n    onUnmounted(function () {\n      if (unsubscribeAuth) unsubscribeAuth();\n      if (unsubscribeUserProfile) unsubscribeUserProfile();\n      if (unsubscribeNotifications) unsubscribeNotifications();\n    });\n\n    // Set up real-time listener for user profile\n    var setupUserProfileListener = function setupUserProfileListener(userId) {\n      var userRef = doc(db, 'users', userId);\n      unsubscribeUserProfile = onSnapshot(userRef, function (docSnapshot) {\n        if (docSnapshot.exists()) {\n          var _user$value;\n          var userData = docSnapshot.data();\n\n          // Use direct property assignment for Vue reactivity\n          userProfile.value = {\n            firstName: userData.firstName || '',\n            lastName: userData.lastName || '',\n            displayName: userData.displayName || '',\n            photoURL: userData.photoURL || ((_user$value = user.value) === null || _user$value === void 0 ? void 0 : _user$value.photoURL) || '',\n            avatarColor: userData.avatarColor || '#3498db',\n            uid: userId\n          };\n\n          // Debug logging\n          console.log('User profile updated:', userProfile.value);\n        } else {\n          var _user$value2;\n          // Fallback to auth data if no Firestore document\n          if ((_user$value2 = user.value) !== null && _user$value2 !== void 0 && _user$value2.displayName) {\n            var names = user.value.displayName.split(' ');\n            userProfile.value = {\n              firstName: names[0] || '',\n              lastName: names.slice(1).join(' ') || '',\n              displayName: user.value.displayName,\n              photoURL: user.value.photoURL || '',\n              avatarColor: '#3498db',\n              uid: userId\n            };\n          }\n        }\n      }, function (error) {\n        console.error('Error fetching user profile:', error);\n      });\n    };\n\n    // Set up real-time listener for notifications\n    var setupNotificationsListener = function setupNotificationsListener(userId) {\n      loadingNotifications.value = true;\n      var q = query(collection(db, 'notifications'), where('recipientId', '==', userId));\n      unsubscribeNotifications = onSnapshot(q, /*#__PURE__*/function () {\n        var _ref2 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(snapshot) {\n          var notificationsArray, _iterator, _step, _data$timestamp, docSnapshot, data, senderName, senderAvatar, senderDoc, senderData;\n          return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n            while (1) switch (_context2.prev = _context2.next) {\n              case 0:\n                loadingNotifications.value = true;\n\n                // Process all notifications\n                notificationsArray = [];\n                _iterator = _createForOfIteratorHelper(snapshot.docs);\n                _context2.prev = 3;\n                _iterator.s();\n              case 5:\n                if ((_step = _iterator.n()).done) {\n                  _context2.next = 23;\n                  break;\n                }\n                docSnapshot = _step.value;\n                data = docSnapshot.data(); // Get sender info\n                senderName = 'Anonymous';\n                senderAvatar = null;\n                _context2.prev = 10;\n                _context2.next = 13;\n                return getDoc(doc(db, 'users', data.senderId));\n              case 13:\n                senderDoc = _context2.sent;\n                if (senderDoc.exists()) {\n                  senderData = senderDoc.data();\n                  senderName = senderData.displayName || \"\".concat(senderData.firstName || '', \" \").concat(senderData.lastName || '').trim() || 'Anonymous';\n                  senderAvatar = senderData.photoURL || null;\n                }\n                _context2.next = 20;\n                break;\n              case 17:\n                _context2.prev = 17;\n                _context2.t0 = _context2[\"catch\"](10);\n                console.error('Error fetching sender info:', _context2.t0);\n              case 20:\n                notificationsArray.push({\n                  id: docSnapshot.id,\n                  senderId: data.senderId,\n                  senderName: senderName,\n                  senderAvatar: senderAvatar,\n                  message: data.message || 'You have a new notification',\n                  read: data.read || false,\n                  timestamp: ((_data$timestamp = data.timestamp) === null || _data$timestamp === void 0 ? void 0 : _data$timestamp.toDate()) || new Date(),\n                  type: data.type || 'generic',\n                  relatedDocId: data.relatedDocId || null\n                });\n              case 21:\n                _context2.next = 5;\n                break;\n              case 23:\n                _context2.next = 28;\n                break;\n              case 25:\n                _context2.prev = 25;\n                _context2.t1 = _context2[\"catch\"](3);\n                _iterator.e(_context2.t1);\n              case 28:\n                _context2.prev = 28;\n                _iterator.f();\n                return _context2.finish(28);\n              case 31:\n                // Sort notifications by timestamp (newest first)\n                notificationsArray.sort(function (a, b) {\n                  return b.timestamp - a.timestamp;\n                });\n\n                // Update the reactive notifications array\n                notifications.value = notificationsArray;\n                loadingNotifications.value = false;\n              case 34:\n              case \"end\":\n                return _context2.stop();\n            }\n          }, _callee2, null, [[3, 25, 28, 31], [10, 17]]);\n        }));\n        return function (_x2) {\n          return _ref2.apply(this, arguments);\n        };\n      }());\n    };\n\n    // Handle notification click\n    var handleNotificationClick = /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(notification) {\n        var index;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              _context3.next = 3;\n              return updateDoc(doc(db, 'notifications', notification.id), {\n                read: true\n              });\n            case 3:\n              // Update local state\n              index = notifications.value.findIndex(function (n) {\n                return n.id === notification.id;\n              });\n              if (index !== -1) {\n                notifications.value[index].read = true;\n              }\n\n              // Navigate based on notification type\n              if (notification.type === 'reply' && notification.relatedDocId) {\n                router.push(\"/forum/\".concat(notification.relatedDocId));\n              }\n              showNotifications.value = false;\n              _context3.next = 12;\n              break;\n            case 9:\n              _context3.prev = 9;\n              _context3.t0 = _context3[\"catch\"](0);\n              console.error('Error marking notification as read:', _context3.t0);\n            case 12:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, null, [[0, 9]]);\n      }));\n      return function handleNotificationClick(_x3) {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n\n    // Mark all notifications as read\n    var markAllAsRead = /*#__PURE__*/function () {\n      var _ref4 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n        var batch;\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.prev = 0;\n              batch = writeBatch(db);\n              notifications.value.forEach(function (notification) {\n                if (!notification.read) {\n                  var _ref5 = doc(db, 'notifications', notification.id);\n                  batch.update(_ref5, {\n                    read: true\n                  });\n                }\n              });\n              _context4.next = 5;\n              return batch.commit();\n            case 5:\n              // Update local state\n              notifications.value = notifications.value.map(function (notification) {\n                return _objectSpread(_objectSpread({}, notification), {}, {\n                  read: true\n                });\n              });\n              _context4.next = 11;\n              break;\n            case 8:\n              _context4.prev = 8;\n              _context4.t0 = _context4[\"catch\"](0);\n              console.error('Error marking all notifications as read:', _context4.t0);\n            case 11:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4, null, [[0, 8]]);\n      }));\n      return function markAllAsRead() {\n        return _ref4.apply(this, arguments);\n      };\n    }();\n\n    // Format time\n    var formatTime = function formatTime(date) {\n      var now = new Date();\n      var diff = now - date;\n      var minutes = Math.floor(diff / 60000);\n      if (minutes < 1) return 'Just now';\n      if (minutes < 60) return \"\".concat(minutes, \"m ago\");\n      if (minutes < 1440) return \"\".concat(Math.floor(minutes / 60), \"h ago\");\n      return \"\".concat(Math.floor(minutes / 1440), \"d ago\");\n    };\n\n    // Toggle dropdowns\n    var toggleNotifications = function toggleNotifications() {\n      showNotifications.value = !showNotifications.value;\n      if (showNotifications.value) {\n        showProfileDropdown.value = false;\n      }\n    };\n    var toggleProfileDropdown = function toggleProfileDropdown() {\n      showProfileDropdown.value = !showProfileDropdown.value;\n      if (showProfileDropdown.value) {\n        showNotifications.value = false;\n      }\n    };\n\n    // Handle avatar errors\n    var handleAvatarError = function handleAvatarError(e) {\n      e.target.src = defaultAvatar;\n    };\n\n    // Logout\n    var logout = /*#__PURE__*/function () {\n      var _ref6 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.prev = 0;\n              _context5.next = 3;\n              return signOut(auth);\n            case 3:\n              router.push('/');\n              _context5.next = 9;\n              break;\n            case 6:\n              _context5.prev = 6;\n              _context5.t0 = _context5[\"catch\"](0);\n              console.error('Logout error:', _context5.t0);\n            case 9:\n            case \"end\":\n              return _context5.stop();\n          }\n        }, _callee5, null, [[0, 6]]);\n      }));\n      return function logout() {\n        return _ref6.apply(this, arguments);\n      };\n    }();\n\n    // Close dropdowns when clicking outside\n    var handleClickOutside = function handleClickOutside(e) {\n      if (!e.target.closest('.notification-icon')) {\n        showNotifications.value = false;\n      }\n      if (!e.target.closest('.user-profile')) {\n        showProfileDropdown.value = false;\n      }\n    };\n    onMounted(function () {\n      document.addEventListener('click', handleClickOutside);\n    });\n    onUnmounted(function () {\n      document.removeEventListener('click', handleClickOutside);\n    });\n    return {\n      user: user,\n      userProfile: userProfile,\n      userInitials: userInitials,\n      userDisplayName: userDisplayName,\n      userAvatarColor: userAvatarColor,\n      defaultAvatar: defaultAvatar,\n      notifications: notifications,\n      loadingNotifications: loadingNotifications,\n      showNotifications: showNotifications,\n      unreadCount: unreadCount,\n      showProfileDropdown: showProfileDropdown,\n      toggleNotifications: toggleNotifications,\n      toggleProfileDropdown: toggleProfileDropdown,\n      handleNotificationClick: handleNotificationClick,\n      markAllAsRead: markAllAsRead,\n      formatTime: formatTime,\n      handleAvatarError: handleAvatarError,\n      logout: logout\n    };\n  }\n};","map":{"version":3,"names":["getAuth","signOut","onAuthStateChanged","getFirestore","collection","query","where","onSnapshot","doc","getDoc","updateDoc","writeBatch","ref","reactive","onMounted","onUnmounted","computed","watch","useRouter","name","setup","auth","db","router","user","userProfile","firstName","lastName","displayName","photoURL","avatarColor","uid","defaultAvatar","userInitials","firstInitial","value","charAt","toUpperCase","lastInitial","concat","userDisplayName","trim","fullName","userAvatarColor","notifications","loadingNotifications","showNotifications","unreadCount","filter","n","read","length","showProfileDropdown","unsubscribeAuth","unsubscribeUserProfile","unsubscribeNotifications","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","authUser","wrap","_callee$","_context","prev","next","setupUserProfileListener","setupNotificationsListener","stop","_x","apply","arguments","userId","userRef","docSnapshot","exists","_user$value","userData","data","console","log","_user$value2","names","split","slice","join","error","q","_ref2","_callee2","snapshot","notificationsArray","_iterator","_step","_data$timestamp","senderName","senderAvatar","senderDoc","senderData","_callee2$","_context2","_createForOfIteratorHelper","docs","s","done","senderId","sent","t0","push","id","message","timestamp","toDate","Date","type","relatedDocId","t1","e","f","finish","sort","a","b","_x2","handleNotificationClick","_ref3","_callee3","notification","index","_callee3$","_context3","findIndex","_x3","markAllAsRead","_ref4","_callee4","batch","_callee4$","_context4","forEach","update","commit","map","_objectSpread","formatTime","date","now","diff","minutes","Math","floor","toggleNotifications","toggleProfileDropdown","handleAvatarError","target","src","logout","_ref6","_callee5","_callee5$","_context5","handleClickOutside","closest","document","addEventListener","removeEventListener"],"sources":["/workspaces/Mini_Projects_Js/Forum_App/src/components/NavbarDiscussion.vue"],"sourcesContent":["<template>\r\n  <div class=\"navbar\">\r\n    <div class=\"container\">\r\n      <router-link to=\"/forum\" class=\"logo\">\r\n        <i class=\"fas fa-comments\"></i> Forum\r\n      </router-link>\r\n      \r\n      <div class=\"nav-right\">\r\n        <!-- Notifications Dropdown -->\r\n        <div class=\"notification-icon\" @click.stop=\"toggleNotifications\" v-if=\"user\">\r\n          <i class=\"fas fa-bell\"></i>\r\n          <span v-if=\"unreadCount > 0\" class=\"notification-badge\">{{ unreadCount }}</span>\r\n          \r\n          <div v-if=\"showNotifications\" class=\"notification-dropdown\">\r\n            <div class=\"notification-header\">\r\n              <h4>Notifications</h4>\r\n              <button @click=\"markAllAsRead\" v-if=\"unreadCount > 0\">\r\n                Mark all as read\r\n              </button>\r\n            </div>\r\n            \r\n            <div v-if=\"loadingNotifications\" class=\"loading\">\r\n              <i class=\"fas fa-spinner fa-spin\"></i> Loading...\r\n            </div>\r\n            \r\n            <div v-else>\r\n              <div v-if=\"notifications.length === 0\" class=\"empty\">\r\n                No new notifications\r\n              </div>\r\n              \r\n              <div v-for=\"notification in notifications\" \r\n                   :key=\"notification.id\"\r\n                   class=\"notification-item\"\r\n                   :class=\"{ unread: !notification.read }\"\r\n                   @click=\"handleNotificationClick(notification)\">\r\n                <img :src=\"notification.senderAvatar || defaultAvatar\" \r\n                     class=\"avatar\"\r\n                     @error=\"handleAvatarError\">\r\n                <div class=\"content\">\r\n                  <p><strong>{{ notification.senderName }}</strong> {{ notification.message }}</p>\r\n                  <small>{{ formatTime(notification.timestamp) }}</small>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        \r\n        <!-- User Profile -->\r\n        <div class=\"user-profile\" v-if=\"user\" @click.stop=\"toggleProfileDropdown\">\r\n          <!-- Avatar with user initials and dynamic background color -->\r\n          <div class=\"initials-avatar\" :style=\"{ backgroundColor: userAvatarColor, color: '#ffffff' }\">\r\n            {{ userInitials }}\r\n          </div>\r\n          <span>{{ userDisplayName }}</span>\r\n          <i class=\"fas fa-caret-down\"></i>\r\n          \r\n          <div v-if=\"showProfileDropdown\" class=\"profile-dropdown\">\r\n            <router-link to=\"/profile\" class=\"dropdown-item\">\r\n              <i class=\"fas fa-user\"></i> Profile\r\n            </router-link>\r\n            <div class=\"dropdown-item\" @click=\"logout\">\r\n              <i class=\"fas fa-sign-out-alt\"></i> Logout\r\n            </div>\r\n          </div>\r\n        </div>\r\n        \r\n        <router-link v-else to=\"/login\" class=\"login-btn\">\r\n          <i class=\"fas fa-sign-in-alt\"></i> Login\r\n        </router-link>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { getAuth, signOut, onAuthStateChanged } from \"firebase/auth\";\r\nimport { getFirestore, collection, query, where, onSnapshot, doc, getDoc, updateDoc, writeBatch } from \"firebase/firestore\";\r\nimport { ref, reactive, onMounted, onUnmounted, computed, watch } from 'vue';\r\nimport { useRouter } from 'vue-router';\r\n\r\nexport default {\r\n  name: 'Navbar',\r\n  setup() {\r\n    const auth = getAuth();\r\n    const db = getFirestore();\r\n    const router = useRouter();\r\n    \r\n    // User data\r\n    const user = ref(null);\r\n    const userProfile = ref({\r\n      firstName: '',\r\n      lastName: '',\r\n      displayName: '',\r\n      photoURL: '',\r\n      avatarColor: '#3498db', // Default color\r\n      uid: ''\r\n    });\r\n    const defaultAvatar = 'https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460_960_720.png';\r\n    \r\n    // Computed properties for avatar\r\n    const userInitials = computed(() => {\r\n      const firstInitial = userProfile.value.firstName ? userProfile.value.firstName.charAt(0).toUpperCase() : '';\r\n      const lastInitial = userProfile.value.lastName ? userProfile.value.lastName.charAt(0).toUpperCase() : '';\r\n      return `${firstInitial}${lastInitial}`;\r\n    });\r\n    \r\n    const userDisplayName = computed(() => {\r\n      if (userProfile.value.displayName && userProfile.value.displayName.trim() !== '') {\r\n        return userProfile.value.displayName;\r\n      }\r\n      \r\n      const fullName = `${userProfile.value.firstName} ${userProfile.value.lastName}`.trim();\r\n      return fullName !== '' ? fullName : 'User';\r\n    });\r\n    \r\n    const userAvatarColor = computed(() => {\r\n      return userProfile.value.avatarColor || '#3498db';\r\n    });\r\n    \r\n    // Notification state\r\n    const notifications = ref([]);\r\n    const loadingNotifications = ref(false);\r\n    const showNotifications = ref(false);\r\n    const unreadCount = computed(() => notifications.value.filter(n => !n.read).length);\r\n    \r\n    // Profile dropdown\r\n    const showProfileDropdown = ref(false);\r\n    \r\n    // Watch for auth state changes\r\n    let unsubscribeAuth = null;\r\n    let unsubscribeUserProfile = null;\r\n    let unsubscribeNotifications = null;\r\n    \r\n    onMounted(() => {\r\n      unsubscribeAuth = onAuthStateChanged(auth, async (authUser) => {\r\n        user.value = authUser;\r\n        if (authUser) {\r\n          // Set up real-time listener for user profile\r\n          setupUserProfileListener(authUser.uid);\r\n          setupNotificationsListener(authUser.uid);\r\n        } else {\r\n          // Clean up when logged out\r\n          if (unsubscribeUserProfile) {\r\n            unsubscribeUserProfile();\r\n            unsubscribeUserProfile = null;\r\n          }\r\n          \r\n          if (unsubscribeNotifications) {\r\n            unsubscribeNotifications();\r\n            unsubscribeNotifications = null;\r\n          }\r\n          \r\n          // Clear data\r\n          notifications.value = [];\r\n          userProfile.value = {\r\n            firstName: '',\r\n            lastName: '',\r\n            displayName: '',\r\n            photoURL: '',\r\n            avatarColor: '#3498db',\r\n            uid: ''\r\n          };\r\n        }\r\n      });\r\n    });\r\n    \r\n    onUnmounted(() => {\r\n      if (unsubscribeAuth) unsubscribeAuth();\r\n      if (unsubscribeUserProfile) unsubscribeUserProfile();\r\n      if (unsubscribeNotifications) unsubscribeNotifications();\r\n    });\r\n    \r\n    // Set up real-time listener for user profile\r\n    const setupUserProfileListener = (userId) => {\r\n      const userRef = doc(db, 'users', userId);\r\n      \r\n      unsubscribeUserProfile = onSnapshot(userRef, (docSnapshot) => {\r\n        if (docSnapshot.exists()) {\r\n          const userData = docSnapshot.data();\r\n          \r\n          // Use direct property assignment for Vue reactivity\r\n          userProfile.value = {\r\n            firstName: userData.firstName || '',\r\n            lastName: userData.lastName || '',\r\n            displayName: userData.displayName || '',\r\n            photoURL: userData.photoURL || user.value?.photoURL || '',\r\n            avatarColor: userData.avatarColor || '#3498db',\r\n            uid: userId\r\n          };\r\n          \r\n          // Debug logging\r\n          console.log('User profile updated:', userProfile.value);\r\n        } else {\r\n          // Fallback to auth data if no Firestore document\r\n          if (user.value?.displayName) {\r\n            const names = user.value.displayName.split(' ');\r\n            userProfile.value = {\r\n              firstName: names[0] || '',\r\n              lastName: names.slice(1).join(' ') || '',\r\n              displayName: user.value.displayName,\r\n              photoURL: user.value.photoURL || '',\r\n              avatarColor: '#3498db',\r\n              uid: userId\r\n            };\r\n          }\r\n        }\r\n      }, error => {\r\n        console.error('Error fetching user profile:', error);\r\n      });\r\n    };\r\n    \r\n    // Set up real-time listener for notifications\r\n    const setupNotificationsListener = (userId) => {\r\n      loadingNotifications.value = true;\r\n      \r\n      const q = query(\r\n        collection(db, 'notifications'),\r\n        where('recipientId', '==', userId)\r\n      );\r\n      \r\n      unsubscribeNotifications = onSnapshot(q, async (snapshot) => {\r\n        loadingNotifications.value = true;\r\n        \r\n        // Process all notifications\r\n        const notificationsArray = [];\r\n        \r\n        for (const docSnapshot of snapshot.docs) {\r\n          const data = docSnapshot.data();\r\n          \r\n          // Get sender info\r\n          let senderName = 'Anonymous';\r\n          let senderAvatar = null;\r\n          \r\n          try {\r\n            const senderDoc = await getDoc(doc(db, 'users', data.senderId));\r\n            if (senderDoc.exists()) {\r\n              const senderData = senderDoc.data();\r\n              senderName = senderData.displayName || \r\n                           `${senderData.firstName || ''} ${senderData.lastName || ''}`.trim() || \r\n                           'Anonymous';\r\n              senderAvatar = senderData.photoURL || null;\r\n            }\r\n          } catch (error) {\r\n            console.error('Error fetching sender info:', error);\r\n          }\r\n          \r\n          notificationsArray.push({\r\n            id: docSnapshot.id,\r\n            senderId: data.senderId,\r\n            senderName,\r\n            senderAvatar,\r\n            message: data.message || 'You have a new notification',\r\n            read: data.read || false,\r\n            timestamp: data.timestamp?.toDate() || new Date(),\r\n            type: data.type || 'generic',\r\n            relatedDocId: data.relatedDocId || null\r\n          });\r\n        }\r\n        \r\n        // Sort notifications by timestamp (newest first)\r\n        notificationsArray.sort((a, b) => b.timestamp - a.timestamp);\r\n        \r\n        // Update the reactive notifications array\r\n        notifications.value = notificationsArray;\r\n        loadingNotifications.value = false;\r\n      });\r\n    };\r\n    \r\n    // Handle notification click\r\n    const handleNotificationClick = async (notification) => {\r\n      // Mark as read\r\n      try {\r\n        await updateDoc(doc(db, 'notifications', notification.id), {\r\n          read: true\r\n        });\r\n        \r\n        // Update local state\r\n        const index = notifications.value.findIndex(n => n.id === notification.id);\r\n        if (index !== -1) {\r\n          notifications.value[index].read = true;\r\n        }\r\n        \r\n        // Navigate based on notification type\r\n        if (notification.type === 'reply' && notification.relatedDocId) {\r\n          router.push(`/forum/${notification.relatedDocId}`);\r\n        }\r\n        \r\n        showNotifications.value = false;\r\n      } catch (error) {\r\n        console.error('Error marking notification as read:', error);\r\n      }\r\n    };\r\n    \r\n    // Mark all notifications as read\r\n    const markAllAsRead = async () => {\r\n      try {\r\n        const batch = writeBatch(db);\r\n        \r\n        notifications.value.forEach(notification => {\r\n          if (!notification.read) {\r\n            const ref = doc(db, 'notifications', notification.id);\r\n            batch.update(ref, { read: true });\r\n          }\r\n        });\r\n        \r\n        await batch.commit();\r\n        \r\n        // Update local state\r\n        notifications.value = notifications.value.map(notification => ({\r\n          ...notification,\r\n          read: true\r\n        }));\r\n      } catch (error) {\r\n        console.error('Error marking all notifications as read:', error);\r\n      }\r\n    };\r\n    \r\n    // Format time\r\n    const formatTime = (date) => {\r\n      const now = new Date();\r\n      const diff = now - date;\r\n      const minutes = Math.floor(diff / 60000);\r\n      \r\n      if (minutes < 1) return 'Just now';\r\n      if (minutes < 60) return `${minutes}m ago`;\r\n      if (minutes < 1440) return `${Math.floor(minutes/60)}h ago`;\r\n      return `${Math.floor(minutes/1440)}d ago`;\r\n    };\r\n    \r\n    // Toggle dropdowns\r\n    const toggleNotifications = () => {\r\n      showNotifications.value = !showNotifications.value;\r\n      if (showNotifications.value) {\r\n        showProfileDropdown.value = false;\r\n      }\r\n    };\r\n    \r\n    const toggleProfileDropdown = () => {\r\n      showProfileDropdown.value = !showProfileDropdown.value;\r\n      if (showProfileDropdown.value) {\r\n        showNotifications.value = false;\r\n      }\r\n    };\r\n    \r\n    // Handle avatar errors\r\n    const handleAvatarError = (e) => {\r\n      e.target.src = defaultAvatar;\r\n    };\r\n    \r\n    // Logout\r\n    const logout = async () => {\r\n      try {\r\n        await signOut(auth);\r\n        router.push('/');\r\n      } catch (error) {\r\n        console.error('Logout error:', error);\r\n      }\r\n    };\r\n    \r\n    // Close dropdowns when clicking outside\r\n    const handleClickOutside = (e) => {\r\n      if (!e.target.closest('.notification-icon')) {\r\n        showNotifications.value = false;\r\n      }\r\n      if (!e.target.closest('.user-profile')) {\r\n        showProfileDropdown.value = false;\r\n      }\r\n    };\r\n    \r\n    onMounted(() => {\r\n      document.addEventListener('click', handleClickOutside);\r\n    });\r\n    \r\n    onUnmounted(() => {\r\n      document.removeEventListener('click', handleClickOutside);\r\n    });\r\n    \r\n    return {\r\n      user,\r\n      userProfile,\r\n      userInitials,\r\n      userDisplayName,\r\n      userAvatarColor,\r\n      defaultAvatar,\r\n      notifications,\r\n      loadingNotifications,\r\n      showNotifications,\r\n      unreadCount,\r\n      showProfileDropdown,\r\n      toggleNotifications,\r\n      toggleProfileDropdown,\r\n      handleNotificationClick,\r\n      markAllAsRead,\r\n      formatTime,\r\n      handleAvatarError,\r\n      logout\r\n    };\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.navbar {\r\n  background: linear-gradient(135deg, #3498db, #2c3e50);\r\n  color: white;\r\n  padding: 0.8rem 2rem;\r\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\r\n  position: sticky;\r\n  top: 0;\r\n  z-index: 1000;\r\n}\r\n\r\n.container {\r\n  max-width: 1200px;\r\n  margin: 0 auto;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n\r\n.logo {\r\n  font-size: 1.8rem;\r\n  font-weight: 700;\r\n  text-decoration: none;\r\n  color: white;\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 0.8rem;\r\n  transition: all 0.3s ease;\r\n}\r\n\r\n.logo:hover {\r\n  transform: translateY(-2px);\r\n}\r\n\r\n.nav-right {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 1.5rem;\r\n}\r\n\r\n.notification-icon {\r\n  position: relative;\r\n  cursor: pointer;\r\n  padding: 0.5rem;\r\n}\r\n\r\n.notification-badge {\r\n  position: absolute;\r\n  top: -5px;\r\n  right: -5px;\r\n  background-color: #e74c3c;\r\n  color: white;\r\n  border-radius: 50%;\r\n  width: 18px;\r\n  height: 18px;\r\n  font-size: 0.7rem;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n\r\n.notification-dropdown {\r\n  position: absolute;\r\n  top: 40px;\r\n  right: -100px;\r\n  width: 320px;\r\n  max-height: 400px;\r\n  overflow-y: auto;\r\n  background-color: white;\r\n  border-radius: 8px;\r\n  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);\r\n  z-index: 1000;\r\n}\r\n\r\n.notification-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 0.8rem 1rem;\r\n  border-bottom: 1px solid #eee;\r\n}\r\n\r\n.notification-header h4 {\r\n  margin: 0;\r\n  color: #333;\r\n}\r\n\r\n.notification-header button {\r\n  background: none;\r\n  border: none;\r\n  color: #3498db;\r\n  cursor: pointer;\r\n  font-size: 0.8rem;\r\n}\r\n\r\n.notification-item {\r\n  display: flex;\r\n  padding: 0.8rem 1rem;\r\n  border-bottom: 1px solid #eee;\r\n  cursor: pointer;\r\n  transition: background-color 0.2s;\r\n}\r\n\r\n.notification-item:hover {\r\n  background-color: #f9f9f9;\r\n}\r\n\r\n.notification-item.unread {\r\n  background-color: #f0f7ff;\r\n}\r\n\r\n.notification-item .avatar,\r\n.user-profile .avatar {\r\n  width: 40px;\r\n  height: 40px;\r\n  border-radius: 50%;\r\n  margin-right: 0.8rem;\r\n  object-fit: cover;\r\n}\r\n\r\n.notification-item .content {\r\n  flex: 1;\r\n}\r\n\r\n.notification-item .content p {\r\n  margin: 0 0 0.3rem 0;\r\n  color: #333;\r\n}\r\n\r\n.notification-item .content small {\r\n  color: #999;\r\n}\r\n\r\n.loading, .empty {\r\n  padding: 1rem;\r\n  text-align: center;\r\n  color: #999;\r\n}\r\n\r\n.user-profile {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 0.5rem;\r\n  cursor: pointer;\r\n  position: relative;\r\n}\r\n\r\n.user-profile span {\r\n  max-width: 100px;\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n}\r\n\r\n.profile-dropdown {\r\n  position: absolute;\r\n  top: 40px;\r\n  right: 0;\r\n  width: 180px;\r\n  background-color: white;\r\n  border-radius: 8px;\r\n  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);\r\n  z-index: 1000;\r\n  overflow: hidden;\r\n}\r\n\r\n.dropdown-item {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 0.5rem;\r\n  padding: 0.8rem 1rem;\r\n  color: #333;\r\n  text-decoration: none;\r\n  transition: background-color 0.2s;\r\n}\r\n\r\n.dropdown-item:hover {\r\n  background-color: #f5f5f5;\r\n}\r\n\r\n.login-btn {\r\n  background-color: rgba(255, 255, 255, 0.2);\r\n  padding: 0.5rem 1rem;\r\n  border-radius: 4px;\r\n  text-decoration: none;\r\n  color: white;\r\n  font-weight: 500;\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 0.5rem;\r\n  transition: all 0.3s ease;\r\n}\r\n\r\n.login-btn:hover {\r\n  background-color: rgba(255, 255, 255, 0.3);\r\n}\r\n\r\n/* Initial avatar styles */\r\n.initials-avatar {\r\n  width: 40px;\r\n  height: 40px;\r\n  border-radius: 50%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  font-weight: bold;\r\n  border: 2px solid white;\r\n  font-size: 1rem;\r\n}\r\n\r\n/* Media Queries */\r\n@media (max-width: 768px) {\r\n  .navbar {\r\n    padding: 0.8rem 1rem;\r\n  }\r\n  \r\n  .notification-dropdown {\r\n    width: 300px;\r\n    right: -120px;\r\n  }\r\n  \r\n  .user-profile span {\r\n    display: none;\r\n  }\r\n}\r\n\r\n@media (max-width: 480px) {\r\n  .logo {\r\n    font-size: 1.5rem;\r\n  }\r\n  \r\n  .notification-dropdown {\r\n    width: 280px;\r\n    right: -100px;\r\n  }\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}